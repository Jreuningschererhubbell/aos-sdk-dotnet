//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Aetheros.OneM2M.Binding
{
	using System.Collections;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Xml.Serialization;
	using Newtonsoft.Json;

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ty", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ResourceType
	{
		[XmlEnumAttribute("1")]
		AccessControlPolicy = 1,

		[XmlEnumAttribute("2")]
		AE = 2,

		[XmlEnumAttribute("3")]
		Container = 3,

		[XmlEnumAttribute("4")]
		ContentInstance = 4,

		[XmlEnumAttribute("5")]
		CSEBase = 5,

		[XmlEnumAttribute("6")]
		Delivery = 6,

		[XmlEnumAttribute("7")]
		EventConfig = 7,

		[XmlEnumAttribute("8")]
		ExecInstance = 8,

		[XmlEnumAttribute("9")]
		Group = 9,

		[XmlEnumAttribute("10")]
		LocationPolicy = 10,

		[XmlEnumAttribute("11")]
		M2MServiceSubscriptionProfile = 11,

		[XmlEnumAttribute("12")]
		MgmtCmd = 12,

		[XmlEnumAttribute("13")]
		MgmtObj = 13,

		[XmlEnumAttribute("14")]
		Node = 14,

		[XmlEnumAttribute("15")]
		PollingChannel = 15,

		[XmlEnumAttribute("16")]
		RemoteCSE = 16,

		[XmlEnumAttribute("17")]
		Request = 17,

		[XmlEnumAttribute("18")]
		Schedule = 18,

		[XmlEnumAttribute("19")]
		ServiceSubscribedAppRule = 19,

		[XmlEnumAttribute("20")]
		ServiceSubscribedNode = 20,

		[XmlEnumAttribute("21")]
		StatsCollect = 21,

		[XmlEnumAttribute("22")]
		StatsConfig = 22,

		[XmlEnumAttribute("23")]
		Subscription = 23,

		[XmlEnumAttribute("24")]
		SemanticDescriptor = 24,

		[XmlEnumAttribute("25")]
		NotificationTargetMgmtPolicyRef = 25,

		[XmlEnumAttribute("26")]
		NotificationTargetPolicy = 26,

		[XmlEnumAttribute("27")]
		PolicyDeletionRules = 27,

		[XmlEnumAttribute("28")]
		FlexContainer = 28,

		[XmlEnumAttribute("29")]
		TimeSeries = 29,

		[XmlEnumAttribute("30")]
		TimeSeriesInstance = 30,

		[XmlEnumAttribute("31")]
		Role = 31,

		[XmlEnumAttribute("32")]
		Token = 32,

		[XmlEnumAttribute("33")]
		TrafficPattern = 33,

		[XmlEnumAttribute("34")]
		DynamicAuthorizationConsultation = 34,

		[XmlEnumAttribute("10001")]
		AccessControlPolicyAnnc = 10001,

		[XmlEnumAttribute("10002")]
		AEAnnc = 10002,

		[XmlEnumAttribute("10003")]
		ContainerAnnc = 10003,

		[XmlEnumAttribute("10004")]
		ContentInstanceAnnc = 10004,

		[XmlEnumAttribute("10009")]
		GroupAnnc = 10009,

		[XmlEnumAttribute("10010")]
		LocationPolicyAnnc = 10010,

		[XmlEnumAttribute("10013")]
		MgmtObjAnnc = 10013,

		[XmlEnumAttribute("10014")]
		NodeAnnc = 10014,

		[XmlEnumAttribute("10016")]
		RemoteCSEAnnc = 10016,

		[XmlEnumAttribute("10018")]
		ScheduleAnnc = 10018,

		[XmlEnumAttribute("10024")]
		SemanticDescriptorAnnc = 10024,

		[XmlEnumAttribute("10028")]
		FlexContainerAnnc = 10028,

		[XmlEnumAttribute("10029")]
		TimeSeriesAnnc = 10029,

		[XmlEnumAttribute("10030")]
		TimeSeriesInstanceAnnc = 10030,

		[XmlEnumAttribute("10033")]
		TrafficPatternAnnc = 10033,

		[XmlEnumAttribute("10034")]
		DynamicAuthorizationConsultationAnnc = 10034,
	}
	
	/// <summary>
	/// <para>Used for cseType attribute of &lt;CSEBase&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for cseType attribute of &lt;CSEBase&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cseTypeID", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum CseTypeID
	{
		[XmlEnumAttribute("1")]
		InCse = 1,

		[XmlEnumAttribute("2")]
		MnCse = 2,

		[XmlEnumAttribute("3")]
		AsnCse = 3,
	}
	
	/// <summary>
	/// <para>Used for locationSource attribute of &lt;locationPolicy&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for locationSource attribute of &lt;locationPolicy&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("los", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum LocationSource
	{
		[XmlEnumAttribute("1")]
		NetworkBased = 1,

		[XmlEnumAttribute("2")]
		DeviceBased = 2,

		[XmlEnumAttribute("3")]
		SharingBased = 3,
	}
	
	/// <summary>
	/// <para>Used for ec parameter in request and eventCat attribute of &lt;delivery&gt; resource and cmdh
	///				policy resource types.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for ec parameter in request and eventCat attribute of &lt;delivery&gt; resou" +
		"rce and cmdh policy resource types.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("stdEventCats", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum StdEventCats
	{
		[XmlEnumAttribute("2")]
		Immediate = 2,

		[XmlEnumAttribute("3")]
		BestEffort = 3,

		[XmlEnumAttribute("4")]
		Latest = 4,
	}
	
	/// <summary>
	/// <para>Used for Operation parameter in request and operation attribute in &lt;request&gt; resource as well as resource as well as operationMonitor</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for Operation parameter in request and operation attribute in &lt;request&gt" +
		"; resource as well as resource as well as operationMonitor")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("op", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum Operation
	{
		[XmlEnumAttribute("1")]
		Create = 1,

		[XmlEnumAttribute("2")]
		Retrieve = 2,

		[XmlEnumAttribute("3")]
		Update = 3,

		[XmlEnumAttribute("4")]
		Delete = 4,

		[XmlEnumAttribute("5")]
		Notify = 5,
	}
	
	/// <summary>
	/// <para>Used for rt parameter in request and operation attribute in &lt;request&gt; resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for rt parameter in request and operation attribute in &lt;request&gt; resou" +
		"rce")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rt", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ResponseType
	{
		[XmlEnumAttribute("1")]
		NonBlockingRequestSynch = 1,

		[XmlEnumAttribute("2")]
		NonBlockingRequestAsynch = 2,

		[XmlEnumAttribute("3")]
		BlockingRequest = 3,

		[XmlEnumAttribute("4")]
		FlexBlocking = 4,
	}
	
	/// <summary>
	/// <para>Used for Result Content parameter in request.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for Result Content parameter in request.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rcn", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ResultContent
	{
		[XmlEnumAttribute("0")]
		Nothing = 0,

		[XmlEnumAttribute("1")]
		Attributes = 1,

		[XmlEnumAttribute("2")]
		HierarchicalAddress = 2,

		[XmlEnumAttribute("3")]
		HierarchicalAddressPlusAttributes = 3,

		[XmlEnumAttribute("4")]
		AttributesPlusChildResources = 4,

		[XmlEnumAttribute("5")]
		AttributesPlusChildResourceReferences = 5,

		[XmlEnumAttribute("6")]
		ChildResourceReferences = 6,

		[XmlEnumAttribute("7")]
		OriginalResource = 7,

		[XmlEnumAttribute("8")]
		ChildResources = 8,
	}
	
	/// <summary>
	/// <para>Used in &lt;request&gt;</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in &lt;request&gt;")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("discResType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum DiscResType
	{
		[XmlEnumAttribute("1")]
		Structured = 1,

		[XmlEnumAttribute("2")]
		Unstructured = 2,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rsc", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ResponseStatusCode
	{
		[XmlEnumAttribute("1000")]
		Accepted = 1000,

		[XmlEnumAttribute("2000")]
		OK = 2000,

		[XmlEnumAttribute("2001")]
		Created = 2001,

		[XmlEnumAttribute("2002")]
		Deleted = 2002,

		[XmlEnumAttribute("2004")]
		Updated = 2004,

		[XmlEnumAttribute("4000")]
		BadRequest = 4000,

		[XmlEnumAttribute("4004")]
		NotFound = 4004,

		[XmlEnumAttribute("4005")]
		OperationNotAllowed = 4005,

		[XmlEnumAttribute("4008")]
		RequestTimeout = 4008,

		[XmlEnumAttribute("4101")]
		SubscriptionCreatorHasNoPrivilege = 4101,

		[XmlEnumAttribute("4102")]
		ContentsUnacceptable = 4102,

		[XmlEnumAttribute("4103")]
		OriginatorHasNoPrivilege = 4103,

		[XmlEnumAttribute("4104")]
		GroupRequestIdentifierExists = 4104,

		[XmlEnumAttribute("4105")]
		Conflict = 4105,

		[XmlEnumAttribute("4106")]
		OriginatorHasNotRegistered = 4106,

		[XmlEnumAttribute("4107")]
		SecurityAssociationRequired = 4107,

		[XmlEnumAttribute("4108")]
		InvalidChildResourceType = 4108,

		[XmlEnumAttribute("4109")]
		NoMembers = 4109,

		[XmlEnumAttribute("4110")]
		GroupMemberTypeInconsistent = 4110,

		[XmlEnumAttribute("4111")]
		EsprimUnsupportedOption = 4111,

		[XmlEnumAttribute("4112")]
		EsprimUnknownKeyId = 4112,

		[XmlEnumAttribute("4113")]
		GesprimUnknownOrigRandId = 4113,

		[XmlEnumAttribute("4114")]
		EsprimUnknownRecvRandId = 4114,

		[XmlEnumAttribute("4115")]
		GesprimBadMac = 4115,

		[XmlEnumAttribute("5000")]
		InternalServerError = 5000,

		[XmlEnumAttribute("5001")]
		NotImplemented = 5001,

		[XmlEnumAttribute("5103")]
		TargetNotReachable = 5103,

		[XmlEnumAttribute("5105")]
		ReceiverHasNoPrivilege = 5105,

		[XmlEnumAttribute("5106")]
		AlreadyExists = 5106,

		[XmlEnumAttribute("5203")]
		TargetNotSubscribable = 5203,

		[XmlEnumAttribute("5204")]
		SubscriptionVerificationInitiationFailed = 5204,

		[XmlEnumAttribute("5205")]
		SubscriptionHostHasNoPrivilege = 5205,

		[XmlEnumAttribute("5206")]
		NonBlockingRequestNotSupported = 5206,

		[XmlEnumAttribute("5207")]
		NotAcceptable = 5207,

		[XmlEnumAttribute("5208")]
		DiscoveryDeniedByIpe = 5208,

		[XmlEnumAttribute("5209")]
		GroupMembersNotResponded = 5209,

		[XmlEnumAttribute("5210")]
		EsprimDecryptionError = 5210,

		[XmlEnumAttribute("5211")]
		EsprimEncryptionError = 5211,

		[XmlEnumAttribute("5212")]
		SparqlUpdateError = 5212,

		[XmlEnumAttribute("6003")]
		ExternalObjectNotReachable = 6003,

		[XmlEnumAttribute("6005")]
		ExternalObjectNotFound = 6005,

		[XmlEnumAttribute("6010")]
		MaxNumberOfMemberExceeded = 6010,

		[XmlEnumAttribute("6020")]
		MgmtSessionCannotBeEstablished = 6020,

		[XmlEnumAttribute("6021")]
		MgmtSessionEstablishmentTimeout = 6021,

		[XmlEnumAttribute("6022")]
		InvalidCmdtype = 6022,

		[XmlEnumAttribute("6023")]
		InvalidArguments = 6023,

		[XmlEnumAttribute("6024")]
		InsufficientArguments = 6024,

		[XmlEnumAttribute("6025")]
		MGMT__CONVERSION_ERROR = 6025,

		[XmlEnumAttribute("6026")]
		MGMT__CANCELLATION_FAILED = 6026,

		[XmlEnumAttribute("6028")]
		AlreadyComplete = 6028,

		[XmlEnumAttribute("6029")]
		MgmtCommandNotCancellable = 6029,
	}
	
	/// <summary>
	/// <para>Used for request Status in the &lt;request&gt; resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for request Status in the &lt;request&gt; resource")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rs", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum RequestStatus
	{
		[XmlEnumAttribute("1")]
		Completed = 1,

		[XmlEnumAttribute("2")]
		Failed = 2,

		[XmlEnumAttribute("3")]
		Pending = 3,

		[XmlEnumAttribute("4")]
		Forwarded = 4,
	}
	
	/// <summary>
	/// <para>Used for memberType attribute in &lt;group&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for memberType attribute in &lt;group&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mt", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum MemberType
	{
		[XmlEnumAttribute("0")]
		Mixed = 0,

		[XmlEnumAttribute("1")]
		AccessControlPolicy = 1,

		[XmlEnumAttribute("2")]
		AE = 2,

		[XmlEnumAttribute("3")]
		Container = 3,

		[XmlEnumAttribute("4")]
		ContentInstance = 4,

		[XmlEnumAttribute("5")]
		CSEBase = 5,

		[XmlEnumAttribute("6")]
		Delivery = 6,

		[XmlEnumAttribute("7")]
		EventConfig = 7,

		[XmlEnumAttribute("8")]
		ExecInstance = 8,

		[XmlEnumAttribute("9")]
		Group = 9,

		[XmlEnumAttribute("10")]
		LocationPolicy = 10,

		[XmlEnumAttribute("11")]
		M2MServiceSubscription = 11,

		[XmlEnumAttribute("12")]
		MgmtCmd = 12,

		[XmlEnumAttribute("13")]
		MgmtObj = 13,

		[XmlEnumAttribute("14")]
		Node = 14,

		[XmlEnumAttribute("15")]
		PollingChannel = 15,

		[XmlEnumAttribute("16")]
		RemoteCSE = 16,

		[XmlEnumAttribute("17")]
		Request = 17,

		[XmlEnumAttribute("18")]
		Schedule = 18,

		[XmlEnumAttribute("19")]
		ServiceSubscribedAppRule = 19,

		[XmlEnumAttribute("20")]
		ServiceSubscribedNode = 20,

		[XmlEnumAttribute("21")]
		StatsCollect = 21,

		[XmlEnumAttribute("22")]
		StatsConfig = 22,

		[XmlEnumAttribute("23")]
		Subscription = 23,

		[XmlEnumAttribute("24")]
		SemanticDescriptor = 24,

		[XmlEnumAttribute("25")]
		NotificationTargetMgmtPolicyRef = 25,

		[XmlEnumAttribute("26")]
		NotificationTargetPolicy = 26,

		[XmlEnumAttribute("27")]
		PolicyDeletionRules = 27,

		[XmlEnumAttribute("28")]
		FlexContainer = 28,

		[XmlEnumAttribute("29")]
		TimeSeries = 29,

		[XmlEnumAttribute("30")]
		TimeSeriesInstance = 30,

		[XmlEnumAttribute("31")]
		Role = 31,

		[XmlEnumAttribute("32")]
		Token = 32,

		[XmlEnumAttribute("33")]
		TrafficPattern = 33,

		[XmlEnumAttribute("34")]
		DynamicAuthorizationConsultation = 34,

		[XmlEnumAttribute("10001")]
		AccessControlPolicyAnnc = 10001,

		[XmlEnumAttribute("10002")]
		AEAnnc = 10002,

		[XmlEnumAttribute("10003")]
		ContainerAnnc = 10003,

		[XmlEnumAttribute("10004")]
		ContentInstanceAnnc = 10004,

		[XmlEnumAttribute("10009")]
		GroupAnnc = 10009,

		[XmlEnumAttribute("10010")]
		LocationPolicyAnnc = 10010,

		[XmlEnumAttribute("10013")]
		MgmtObjAnnc = 10013,

		[XmlEnumAttribute("10014")]
		NodeAnnc = 10014,

		[XmlEnumAttribute("10016")]
		RemoteCSEAnnc = 10016,

		[XmlEnumAttribute("10018")]
		ScheduleAnnc = 10018,

		[XmlEnumAttribute("10024")]
		SemanticDescriptorAnnc = 10024,

		[XmlEnumAttribute("10028")]
		FlexContainerAnnc = 10028,

		[XmlEnumAttribute("10029")]
		TimeSeriesAnnc = 10029,

		[XmlEnumAttribute("10030")]
		TimeSeriesInstanceAnnc = 10030,

		[XmlEnumAttribute("10033")]
		TrafficPatternAnnc = 10033,

		[XmlEnumAttribute("10034")]
		DynamicAuthorizationConsultationAnnc = 10034,

		[XmlEnumAttribute("20001")]
		Oldest = 20001,

		[XmlEnumAttribute("20002")]
		Latest = 20002,
	}
	
	/// <summary>
	/// <para>Used for consistencyStrategy attribute in &lt;group&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for consistencyStrategy attribute in &lt;group&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("csy", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ConsistencyStrategy
	{
		[XmlEnumAttribute("1")]
		AbandonMember = 1,

		[XmlEnumAttribute("2")]
		AbandonGroup = 2,

		[XmlEnumAttribute("3")]
		SetMixed = 3,
	}
	
	/// <summary>
	/// <para>Used for cmdType attribute in &lt;mgmtCmd&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for cmdType attribute in &lt;mgmtCmd&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmt", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum CmdType
	{
		[XmlEnumAttribute("1")]
		Reset = 1,

		[XmlEnumAttribute("2")]
		Reboot = 2,

		[XmlEnumAttribute("3")]
		Upload = 3,

		[XmlEnumAttribute("4")]
		Download = 4,

		[XmlEnumAttribute("5")]
		SoftwareInstall = 5,

		[XmlEnumAttribute("6")]
		SoftwareUninstall = 6,

		[XmlEnumAttribute("7")]
		SoftwareUpdate = 7,
	}
	
	/// <summary>
	/// <para>Used for execModeType attribute in &lt;mgmtCmd&gt; and &lt;execInstance&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for execModeType attribute in &lt;mgmtCmd&gt; and &lt;execInstance&gt; resou" +
		"rce.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("execModeType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ExecModeType
	{
		[XmlEnumAttribute("1")]
		ImmediateOnce = 1,

		[XmlEnumAttribute("2")]
		ImmediateRepeat = 2,

		[XmlEnumAttribute("3")]
		RandomOnce = 3,

		[XmlEnumAttribute("4")]
		RandomRepeat = 4,
	}
	
	/// <summary>
	/// <para>Used for execStatusType attribute in &lt;execInstance&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for execStatusType attribute in &lt;execInstance&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("execStatusType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ExecStatusType
	{
		[XmlEnumAttribute("1")]
		Initiated = 1,

		[XmlEnumAttribute("2")]
		Pending = 2,

		[XmlEnumAttribute("3")]
		Finished = 3,

		[XmlEnumAttribute("4")]
		Cancelling = 4,

		[XmlEnumAttribute("5")]
		Cancelled = 5,

		[XmlEnumAttribute("6")]
		StatusNonCancellable = 6,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("execResultType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ExecResultType
	{
		[XmlEnumAttribute("1")]
		StatusRequestUnsupported = 1,

		[XmlEnumAttribute("2")]
		StatusRequestDenied = 2,

		[XmlEnumAttribute("3")]
		StatusCancellationDenied = 3,

		[XmlEnumAttribute("4")]
		StatusInternalError = 4,

		[XmlEnumAttribute("5")]
		StatusInvalidArguments = 5,

		[XmlEnumAttribute("6")]
		StatusResourcesExceeded = 6,

		[XmlEnumAttribute("7")]
		StatusFileTransferFailed = 7,

		[XmlEnumAttribute("8")]
		StatusFileTransferServerAuthenticationFailure = 8,

		[XmlEnumAttribute("9")]
		StatusUnsupportedProtocol = 9,

		[XmlEnumAttribute("10")]
		StatusUploadFailed = 10,

		[XmlEnumAttribute("11")]
		StatusFileTransferFailedMulticastGroupUnableJoin = 11,

		[XmlEnumAttribute("12")]
		StatusFileTransferFailedServerContactFailed = 12,

		[XmlEnumAttribute("13")]
		StatusFileTransferFailedFileAccessFailed = 13,

		[XmlEnumAttribute("14")]
		StatusFileTransferFailedDownloadIncomplete = 14,

		[XmlEnumAttribute("15")]
		StatusFileTransferFailedFileCorrupted = 15,

		[XmlEnumAttribute("16")]
		StatusFileTransferFileAuthenticationFailure = 16,

		[XmlEnumAttribute("19")]
		StatusFileTransferWindowExceeded = 19,

		[XmlEnumAttribute("20")]
		StatusInvalidUuidFormat = 20,

		[XmlEnumAttribute("21")]
		StatusUnknownExecutionEnvironment = 21,

		[XmlEnumAttribute("22")]
		StatusDisabledExecutionEnvironment = 22,

		[XmlEnumAttribute("23")]
		StatusExecutionEnvironmentMismatch = 23,

		[XmlEnumAttribute("24")]
		StatusDuplicateDeploymentUnit = 24,

		[XmlEnumAttribute("25")]
		StatusSystemResourcesExceeded = 25,

		[XmlEnumAttribute("26")]
		StatusUnknownDeploymentUnit = 26,

		[XmlEnumAttribute("27")]
		StatusInvalidDeploymentUnitState = 27,

		[XmlEnumAttribute("28")]
		StatusInvalidDeploymentUnitUpdateDowngradeDisallowed = 28,

		[XmlEnumAttribute("29")]
		StatusInvalidDeploymentUnitUpdateUpgradeDisallowed = 29,

		[XmlEnumAttribute("30")]
		StatusInvalidDeploymentUnitUpdateVersionExists = 30,
	}
	
	/// <summary>
	/// <para>This is used for pendingNotification attribute in &lt;subscription&gt; resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("This is used for pendingNotification attribute in &lt;subscription&gt; resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pn", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum PendingNotification
	{
		[XmlEnumAttribute("1")]
		SendLatest = 1,

		[XmlEnumAttribute("2")]
		SendAllPending = 2,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("nct", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum NotificationContentType
	{
		[XmlEnumAttribute("1")]
		AllAttributes = 1,

		[XmlEnumAttribute("2")]
		ModifiedAttributes = 2,

		[XmlEnumAttribute("3")]
		ResourceID = 3,
	}
	
	/// <summary>
	/// <para>Used in the notificationEventType element of eventNotificationCriteria attribute of subscription resource 
	///				and in the Notification data object</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in the notificationEventType element of eventNotificationCriteria attribute " +
		"of subscription resource and in the Notification data object")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("net", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum NotificationEventType
	{
		[XmlEnumAttribute("1")]
		UpdateResource = 1,

		[XmlEnumAttribute("2")]
		DeleteResource = 2,

		[XmlEnumAttribute("3")]
		CreateChild = 3,

		[XmlEnumAttribute("4")]
		DeleteChild = 4,

		[XmlEnumAttribute("5")]
		RetrieveContainer = 5,
	}
	
	/// <summary>
	/// <para>This is used for [software], [firmware] resources.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("This is used for [software], [firmware] resources.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sus", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum Status
	{
		[XmlEnumAttribute("1")]
		Successful = 1,

		[XmlEnumAttribute("2")]
		Failure = 2,

		[XmlEnumAttribute("3")]
		InProcess = 3,
	}
	
	/// <summary>
	/// <para>This is used for [battery] resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("This is used for [battery] resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("bts", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum BatteryStatus
	{
		[XmlEnumAttribute("1")]
		Normal = 1,

		[XmlEnumAttribute("2")]
		Charging = 2,

		[XmlEnumAttribute("3")]
		ChargingComplete = 3,

		[XmlEnumAttribute("4")]
		Damaged = 4,

		[XmlEnumAttribute("5")]
		LowBattery = 5,

		[XmlEnumAttribute("6")]
		NotInstalled = 6,

		[XmlEnumAttribute("7")]
		Unknown = 7,
	}
	
	/// <summary>
	/// <para>This is used for mgmtObj resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("This is used for mgmtObj resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mgd", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum MgmtDefinition
	{
		[XmlEnumAttribute("0")]
		Unspecified = 0,

		[XmlEnumAttribute("1001")]
		Firmware = 1001,

		[XmlEnumAttribute("1002")]
		Software = 1002,

		[XmlEnumAttribute("1003")]
		Memory = 1003,

		[XmlEnumAttribute("1004")]
		AreaNwkInfo = 1004,

		[XmlEnumAttribute("1005")]
		AreaNwkDeviceInfo = 1005,

		[XmlEnumAttribute("1006")]
		Battery = 1006,

		[XmlEnumAttribute("1007")]
		DeviceInfo = 1007,

		[XmlEnumAttribute("1008")]
		DeviceCapability = 1008,

		[XmlEnumAttribute("1009")]
		Reboot = 1009,

		[XmlEnumAttribute("1010")]
		EventLog = 1010,

		[XmlEnumAttribute("1011")]
		CmdhPolicy = 1011,

		[XmlEnumAttribute("1012")]
		ActiveCmdhPolicy = 1012,

		[XmlEnumAttribute("1013")]
		CmdhDefaults = 1013,

		[XmlEnumAttribute("1014")]
		CmdhDefEcValue = 1014,

		[XmlEnumAttribute("1015")]
		CmdhEcDefParamValues = 1015,

		[XmlEnumAttribute("1016")]
		CmdhLimits = 1016,

		[XmlEnumAttribute("1017")]
		CmdhNetworkAccessRules = 1017,

		[XmlEnumAttribute("1018")]
		CmdhNwAccessRule = 1018,

		[XmlEnumAttribute("1019")]
		CmdhBuffer = 1019,
	}
	
	/// <summary>
	/// <para>Used for the logTypeId attribute of [eventLog] Management Resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for the logTypeId attribute of [eventLog] Management Resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lgt", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum LogTypeId
	{
		[XmlEnumAttribute("1")]
		System = 1,

		[XmlEnumAttribute("2")]
		Security = 2,

		[XmlEnumAttribute("3")]
		Event = 3,

		[XmlEnumAttribute("4")]
		Trace = 4,

		[XmlEnumAttribute("5")]
		Panic = 5,
	}
	
	/// <summary>
	/// <para>Used for the logStatus attribute of [eventLog] Management Resource.</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for the logStatus attribute of [eventLog] Management Resource.")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lgst", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum LogStatus
	{
		[XmlEnumAttribute("1")]
		Started = 1,

		[XmlEnumAttribute("2")]
		Stopped = 2,

		[XmlEnumAttribute("3")]
		Unknown = 3,

		[XmlEnumAttribute("4")]
		NotPresent = 4,

		[XmlEnumAttribute("5")]
		Error = 5,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("evt", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum EventType
	{
		[XmlEnumAttribute("1")]
		DataOperation = 1,

		[XmlEnumAttribute("2")]
		StorageBased = 2,

		[XmlEnumAttribute("3")]
		TimerBased = 3,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("statsRuleStatusType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum StatsRuleStatusType
	{
		[XmlEnumAttribute("1")]
		Active = 1,

		[XmlEnumAttribute("2")]
		Inactive = 2,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("statModelType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum StatModelType
	{
		[XmlEnumAttribute("1")]
		EventBased = 1,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("encodingType", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum EncodingType
	{
		[XmlEnumAttribute("0")]
		Plain = 0,

		[XmlEnumAttribute("1")]
		Base64String = 1,

		[XmlEnumAttribute("2")]
		Base64Binary = 2,
	}
	
	/// <summary>
	/// <para>Shall be considered for access control policy check by the CSE</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Shall be considered for access control policy check by the CSE")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("acop", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum AccessControlOperations
	{
		[XmlEnumAttribute("1")]
		Item1 = 1,

		[XmlEnumAttribute("2")]
		Item2 = 2,

		[XmlEnumAttribute("3")]
		Item3 = 3,

		[XmlEnumAttribute("4")]
		Item4 = 4,

		[XmlEnumAttribute("5")]
		Item5 = 5,

		[XmlEnumAttribute("6")]
		Item6 = 6,

		[XmlEnumAttribute("7")]
		Item7 = 7,

		[XmlEnumAttribute("8")]
		Item8 = 8,

		[XmlEnumAttribute("9")]
		Item9 = 9,

		[XmlEnumAttribute("10")]
		Item10 = 10,

		[XmlEnumAttribute("11")]
		Item11 = 11,

		[XmlEnumAttribute("12")]
		Item12 = 12,

		[XmlEnumAttribute("13")]
		Item13 = 13,

		[XmlEnumAttribute("14")]
		Item14 = 14,

		[XmlEnumAttribute("15")]
		Item15 = 15,

		[XmlEnumAttribute("16")]
		Item16 = 16,

		[XmlEnumAttribute("17")]
		Item17 = 17,

		[XmlEnumAttribute("18")]
		Item18 = 18,

		[XmlEnumAttribute("19")]
		Item19 = 19,

		[XmlEnumAttribute("20")]
		Item20 = 20,

		[XmlEnumAttribute("21")]
		Item21 = 21,

		[XmlEnumAttribute("22")]
		Item22 = 22,

		[XmlEnumAttribute("23")]
		Item23 = 23,

		[XmlEnumAttribute("24")]
		Item24 = 24,

		[XmlEnumAttribute("25")]
		Item25 = 25,

		[XmlEnumAttribute("26")]
		Item26 = 26,

		[XmlEnumAttribute("27")]
		Item27 = 27,

		[XmlEnumAttribute("28")]
		Item28 = 28,

		[XmlEnumAttribute("29")]
		Item29 = 29,

		[XmlEnumAttribute("30")]
		Item30 = 30,

		[XmlEnumAttribute("31")]
		Item31 = 31,

		[XmlEnumAttribute("32")]
		Item32 = 32,

		[XmlEnumAttribute("33")]
		Item33 = 33,

		[XmlEnumAttribute("34")]
		Item34 = 34,

		[XmlEnumAttribute("35")]
		Item35 = 35,

		[XmlEnumAttribute("36")]
		Item36 = 36,

		[XmlEnumAttribute("37")]
		Item37 = 37,

		[XmlEnumAttribute("38")]
		Item38 = 38,

		[XmlEnumAttribute("39")]
		Item39 = 39,

		[XmlEnumAttribute("40")]
		Item40 = 40,

		[XmlEnumAttribute("41")]
		Item41 = 41,

		[XmlEnumAttribute("42")]
		Item42 = 42,

		[XmlEnumAttribute("43")]
		Item43 = 43,

		[XmlEnumAttribute("44")]
		Item44 = 44,

		[XmlEnumAttribute("45")]
		Item45 = 45,

		[XmlEnumAttribute("46")]
		Item46 = 46,

		[XmlEnumAttribute("47")]
		Item47 = 47,

		[XmlEnumAttribute("48")]
		Item48 = 48,

		[XmlEnumAttribute("49")]
		Item49 = 49,

		[XmlEnumAttribute("50")]
		Item50 = 50,

		[XmlEnumAttribute("51")]
		Item51 = 51,

		[XmlEnumAttribute("52")]
		Item52 = 52,

		[XmlEnumAttribute("53")]
		Item53 = 53,

		[XmlEnumAttribute("54")]
		Item54 = 54,

		[XmlEnumAttribute("55")]
		Item55 = 55,

		[XmlEnumAttribute("56")]
		Item56 = 56,

		[XmlEnumAttribute("57")]
		Item57 = 57,

		[XmlEnumAttribute("58")]
		Item58 = 58,

		[XmlEnumAttribute("59")]
		Item59 = 59,

		[XmlEnumAttribute("60")]
		Item60 = 60,

		[XmlEnumAttribute("61")]
		Item61 = 61,

		[XmlEnumAttribute("62")]
		Item62 = 62,

		[XmlEnumAttribute("63")]
		Item63 = 63,
	}
	
	/// <summary>
	/// <para>Used in filterCriteria</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in filterCriteria")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("fu", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum FilterUsage
	{
		[XmlEnumAttribute("1")]
		Discovery = 1,

		[XmlEnumAttribute("2")]
		ConditionalRetrieval = 2,

		[XmlEnumAttribute("3")]
		OnDemandDiscovery = 3,
	}
	
	/// <summary>
	/// <para>Used in filterCriteria</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in filterCriteria")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("notificationTargetPolicyAction", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum NotificationTargetPolicyAction
	{
		[XmlEnumAttribute("1")]
		Accept = 1,

		[XmlEnumAttribute("2")]
		Reject = 2,

		[XmlEnumAttribute("3")]
		Authorize = 3,

		[XmlEnumAttribute("4")]
		Inform = 4,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("logicalOperator", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum LogicalOperator
	{
		[XmlEnumAttribute("1")]
		AND = 1,

		[XmlEnumAttribute("2")]
		OR = 2,
	}
	
	/// <summary>
	/// <para>Used for direction attribute of allJoynApp resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for direction attribute of allJoynApp resource")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("allJoynDirection", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum AllJoynDirection
	{
		[XmlEnumAttribute("1")]
		AlljoynToOnem2m = 1,

		[XmlEnumAttribute("2")]
		Onem2mToAlljoyn = 2,
	}
	
	/// <summary>
	/// <para>Used for contentFilterSyntax element in Filter Criteria primitive parameter</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for contentFilterSyntax element in Filter Criteria primitive parameter")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cfs", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ContentFilterSyntax
	{
		[XmlEnumAttribute("1")]
		JsonPathSyntax = 1,
	}
	
	/// <summary>
	/// <para>Used in m2m:contentInfo</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in m2m:contentInfo")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("contentSecurity", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ContentSecurity
	{
		[XmlEnumAttribute("0")]
		None = 0,

		[XmlEnumAttribute("1")]
		JweCompact = 1,

		[XmlEnumAttribute("2")]
		Jwe = 2,

		[XmlEnumAttribute("3")]
		JweBase64 = 3,

		[XmlEnumAttribute("4")]
		Xml = 4,

		[XmlEnumAttribute("5")]
		XmlBase64 = 5,
	}
	
	/// <summary>
	/// <para>Used for m2m:e2eSecInfo and other security features in TS-0003</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for m2m:e2eSecInfo and other security features in TS-0003")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("suid", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum Suid
	{
		[XmlEnumAttribute("10")]
		PreProvisionedSymmetricKeyIntendedToBeSharedWithAMef = 10,

		[XmlEnumAttribute("11")]
		PreProvisionedSymmetricKeyIntendedToBeSharedWithAMaf = 11,

		[XmlEnumAttribute("12")]
		PreProvisionedSymmetricKeyIntendedForUseInASecurityAssociatedEstablishmentFrameworkLeftparenthesissaefrightparenthesis = 12,

		[XmlEnumAttribute("13")]
		PreProvisionedSymmetricKeyIntendedForUseInEndToEndSecurityOfPrimitivesLeftparenthesisesprimrightparenthesis = 13,

		[XmlEnumAttribute("14")]
		PreProvisionedSymmetricKeyIntendedForUseWithAuthenticatedEncryptionInTheEncryptionOnlyOrNestedSignThenEncryptEndToEndSecurityOfDataLeftparenthesisesdatarightparenthesisDataClasses = 14,

		[XmlEnumAttribute("15")]
		PreProvisionedSymmetricKeyIntendedForUseInSignatureOnlyEsdataSecurityClass = 15,

		[XmlEnumAttribute("21")]
		SymmetricKeycommaProvisionedViaARemoteSecurityProvisioningFrameworkLeftparenthesisrspfrightparenthesiscommaAndIntendedToBeSharedWithAMaf = 21,

		[XmlEnumAttribute("22")]
		SymmetricKeycommaProvisionedViaARspfcommaAndIntendedForUseInASaef = 22,

		[XmlEnumAttribute("23")]
		SymmetricKeycommaProvisionedViaARspfcommaAndIntendedForUseInEsprim = 23,

		[XmlEnumAttribute("24")]
		SymmetricKeycommaProvisionedViaARspfcommaAndIntendedForUseWithAuthenticatedEncryptionInTheEncryptionOnlyOrNestedSignThenEncryptEsdatarightparenthesisDataClasses = 24,

		[XmlEnumAttribute("25")]
		SymmetricKeycommaProvisionedViaARspfcommaAndIntendedForUseInSignatureOnlyEsdataSecurityClass = 25,

		[XmlEnumAttribute("32")]
		MafDistributedSymmetricKeyIntendedForUseInASaef = 32,

		[XmlEnumAttribute("33")]
		MafDistributedSymmetricKeyIntendedForUseInEsprim = 33,

		[XmlEnumAttribute("34")]
		MafDistributedSymmetricKeyIntendedForUseWithAuthenticatedEncryptionInTheEncryptionOnlyOrNestedSignThenEncryptEsdataDataClasses = 34,

		[XmlEnumAttribute("35")]
		MafDistributedSymmetricKeyIntendedForUseInSignatureOnlyEsdataSecurityClass = 35,

		[XmlEnumAttribute("40")]
		CertificateIntendedToBeSharedWithAMef = 40,

		[XmlEnumAttribute("41")]
		CertificateIntendedToBeSharedWithAMaf = 41,

		[XmlEnumAttribute("42")]
		CertificateIntendedForUseInASecurityAssociatedEstablishmentFrameworkLeftparenthesissaefrightparenthesis = 42,

		[XmlEnumAttribute("43")]
		CertificateIntendedForUseInEndToEndSecurityOfPrimitivesLeftparenthesisesprimrightparenthesis = 43,

		[XmlEnumAttribute("44")]
		CertificateIntendedForUseWithAuthenticatedEncryptionInTheEncryptionOnlyOrNestedSignThenEncryptEndToEndSecurityOfDataLeftparenthesisesdatarightparenthesisDataClasses = 44,

		[XmlEnumAttribute("45")]
		CertificateIntendedForUseInSignatureOnlyEsdataSecurityClass = 45,
	}
	
	/// <summary>
	/// <para>Used in m2msec:receiverESPrimRandObject and m2m:originatorESPrimRandObject</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in m2msec:receiverESPrimRandObject and m2m:originatorESPrimRandObject")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("esk", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum EsprimKeyGenAlgID
	{
		[XmlEnumAttribute("1")]
		HmacSha256 = 1,
	}
	
	/// <summary>
	/// <para>Used in m2m:receiveEr2ERandObject and m2msec:originatorESPrimRandObject</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in m2m:receiveEr2ERandObject and m2msec:originatorESPrimRandObject")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("esprimProtocolAndAlgID", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum EsprimProtocolAndAlgID
	{
		[XmlEnumAttribute("10")]
		A128GCM = 10,

		[XmlEnumAttribute("11")]
		A192GCM = 11,

		[XmlEnumAttribute("12")]
		A256GCM = 12,
	}
	
	/// <summary>
	/// <para>Used for periodicIndicator attribute of trafficPattern resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for periodicIndicator attribute of trafficPattern resource")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pri", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum PeriodicIndicator
	{
		[XmlEnumAttribute("1")]
		Periodic = 1,

		[XmlEnumAttribute("2")]
		OnDemand = 2,
	}
	
	/// <summary>
	/// <para>Used for periodicIndicator attribute of trafficPattern resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for periodicIndicator attribute of trafficPattern resource")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sti", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum StationaryIndication
	{
		[XmlEnumAttribute("1")]
		Stationary = 1,

		[XmlEnumAttribute("2")]
		Mobile = 2,
	}
	
	/// <summary>
	/// <para>Used for periodicIndicator attribute of trafficPattern resource</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used for periodicIndicator attribute of trafficPattern resource")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cnst", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum ContentStatus
	{
		[XmlEnumAttribute("1")]
		PartialContent = 1,

		[XmlEnumAttribute("2")]
		FullContent = 2,
	}
	
	/// <summary>
	/// <para>Used in the networkAction element in the backOffParameters</para>
	/// </summary>
	[System.ComponentModel.DescriptionAttribute("Used in the networkAction element in the backOffParameters")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("nwa", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum NetworkAction
	{
		[XmlEnumAttribute("1")]
		CellularRegistration = 1,

		[XmlEnumAttribute("2")]
		CellularAttach = 2,

		[XmlEnumAttribute("3")]
		CellularPdpctxact = 3,

		[XmlEnumAttribute("4")]
		CellularSms = 4,

		[XmlEnumAttribute("5")]
		Default = 5,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("permittedMediaTypes", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum PermittedMediaTypes
	{
		[XmlEnumAttribute("application/xml")]
		Xml,

		[XmlEnumAttribute("application/json")]
		Json,

		[XmlEnumAttribute("application/cbor")]
		Cbor,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dmd", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dmd")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DeliveryMetaData
	{
		[JsonPropertyAttribute("tcop")]
		[XmlElementAttribute("tcop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool TracingOption { get; set; }

		[JsonPropertyAttribute("tcin")]
		[XmlElementAttribute("tcin", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> TracingInfo { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TracingInfo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TracingInfo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TracingInfoSpecified => (this.TracingInfo.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("arq", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("arq")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AggregatedRequest
	{
		[JsonPropertyAttribute("req")]
		[XmlElementAttribute("req", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AggregatedRequestRequest> Request { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("AggregatedRequestRequest", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("AggregatedRequestRequest")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AggregatedRequestRequest
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("op", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Operation OperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Operation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("op")]
		public Aetheros.OneM2M.Binding.Operation? Operation
		{
			get
			{
				return this.OperationValueSpecified ? this.OperationValue : default(Aetheros.OneM2M.Binding.Operation?);
			}
			set
			{
				this.OperationValue = value.GetValueOrDefault();
				this.OperationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("to")]
		[XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string To { get; set; }

		[JsonPropertyAttribute("fr")]
		[XmlElementAttribute("fr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string From { get; set; }

		[JsonPropertyAttribute("rqi")]
		[XmlElementAttribute("rqi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string RequestIdentifier { get; set; }

		[JsonPropertyAttribute("pc")]
		[XmlElementAttribute("pc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public PrimitiveContent PrimitiveContent { get; set; }

		[JsonPropertyAttribute("mi")]
		[XmlElementAttribute("mi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public MetaInformation MetaInformation { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("pc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ResponseContent))]
	public partial class PrimitiveContent
	{
		[JsonPropertyAttribute(null)]
		[XmlAnyElementAttribute()]
		public ICollection<System.Xml.XmlElement> Any { get; set; } = System.Array.Empty<System.Xml.XmlElement>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Any-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Any collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnySpecified => (this.Any.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mi", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mi")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MetaInformation
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType ResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ty")]
		public Aetheros.OneM2M.Binding.ResourceType? ResourceType
		{
			get
			{
				return this.ResourceTypeValueSpecified ? this.ResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.ResourceTypeValue = value.GetValueOrDefault();
				this.ResourceTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("nm")]
		[XmlElementAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset OriginatingTimestampValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OriginatingTimestamp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OriginatingTimestamp property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OriginatingTimestampValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ot")]
		public System.DateTimeOffset? OriginatingTimestamp
		{
			get
			{
				return this.OriginatingTimestampValueSpecified ? this.OriginatingTimestampValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.OriginatingTimestampValue = value.GetValueOrDefault();
				this.OriginatingTimestampValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rqet")]
		[XmlElementAttribute("rqet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string RequestExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("rset")]
		[XmlElementAttribute("rset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("oet")]
		[XmlElementAttribute("oet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string OperationExecutionTime { get; set; }

		[JsonPropertyAttribute("rt")]
		[XmlElementAttribute("rt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ResponseTypeInfo ResponseType { get; set; }

		[JsonPropertyAttribute("rp")]
		[XmlElementAttribute("rp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultPersistence { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rcn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResultContent ResultContentValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResultContent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResultContent property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResultContentValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rcn")]
		public Aetheros.OneM2M.Binding.ResultContent? ResultContent
		{
			get
			{
				return this.ResultContentValueSpecified ? this.ResultContentValue : default(Aetheros.OneM2M.Binding.ResultContent?);
			}
			set
			{
				this.ResultContentValue = value.GetValueOrDefault();
				this.ResultContentValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ec")]
		[XmlElementAttribute("ec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EventCategory { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("da", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DeliveryAggregationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeliveryAggregation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DeliveryAggregation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeliveryAggregationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("da")]
		public bool? DeliveryAggregation
		{
			get
			{
				return this.DeliveryAggregationValueSpecified ? this.DeliveryAggregationValue : default(bool?);
			}
			set
			{
				this.DeliveryAggregationValue = value.GetValueOrDefault();
				this.DeliveryAggregationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("gid")]
		[XmlElementAttribute("gid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string GroupRequestIdentifier { get; set; }

		[JsonPropertyAttribute("fc")]
		[XmlElementAttribute("fc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public FilterCriteria FilterCriteria { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("drt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.DiscResType DiscoveryResultTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DiscoveryResultType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DiscoveryResultType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DiscoveryResultTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("drt")]
		public Aetheros.OneM2M.Binding.DiscResType? DiscoveryResultType
		{
			get
			{
				return this.DiscoveryResultTypeValueSpecified ? this.DiscoveryResultTypeValue : default(Aetheros.OneM2M.Binding.DiscResType?);
			}
			set
			{
				this.DiscoveryResultTypeValue = value.GetValueOrDefault();
				this.DiscoveryResultTypeValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("responseTypeInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("responseTypeInfo")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ResponseTypeInfo
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rtv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResponseType ResponseTypeValueValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResponseTypeValue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResponseTypeValue property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResponseTypeValueValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rtv")]
		public Aetheros.OneM2M.Binding.ResponseType? ResponseTypeValue
		{
			get
			{
				return this.ResponseTypeValueValueSpecified ? this.ResponseTypeValueValue : default(Aetheros.OneM2M.Binding.ResponseType?);
			}
			set
			{
				this.ResponseTypeValueValue = value.GetValueOrDefault();
				this.ResponseTypeValueValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("nu")]
		[XmlElementAttribute("nu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> NotificationURI { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("fc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("fc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class FilterCriteria
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("crb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreatedBeforeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreatedBefore-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreatedBefore property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreatedBeforeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("crb")]
		public System.DateTimeOffset? CreatedBefore
		{
			get
			{
				return this.CreatedBeforeValueSpecified ? this.CreatedBeforeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreatedBeforeValue = value.GetValueOrDefault();
				this.CreatedBeforeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cra", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreatedAfterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreatedAfter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreatedAfter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreatedAfterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cra")]
		public System.DateTimeOffset? CreatedAfter
		{
			get
			{
				return this.CreatedAfterValueSpecified ? this.CreatedAfterValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreatedAfterValue = value.GetValueOrDefault();
				this.CreatedAfterValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ModifiedSinceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ModifiedSince-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ModifiedSince property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ModifiedSinceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ms")]
		public System.DateTimeOffset? ModifiedSince
		{
			get
			{
				return this.ModifiedSinceValueSpecified ? this.ModifiedSinceValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ModifiedSinceValue = value.GetValueOrDefault();
				this.ModifiedSinceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("us", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset UnmodifiedSinceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UnmodifiedSince-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the UnmodifiedSince property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool UnmodifiedSinceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("us")]
		public System.DateTimeOffset? UnmodifiedSince
		{
			get
			{
				return this.UnmodifiedSinceValueSpecified ? this.UnmodifiedSinceValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.UnmodifiedSinceValue = value.GetValueOrDefault();
				this.UnmodifiedSinceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagSmallerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTagSmaller-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTagSmaller property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagSmallerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sts")]
		public long? StateTagSmaller
		{
			get
			{
				return this.StateTagSmallerValueSpecified ? this.StateTagSmallerValue : default(long?);
			}
			set
			{
				this.StateTagSmallerValue = value.GetValueOrDefault();
				this.StateTagSmallerValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("stb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagBiggerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTagBigger-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTagBigger property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagBiggerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("stb")]
		public long? StateTagBigger
		{
			get
			{
				return this.StateTagBiggerValueSpecified ? this.StateTagBiggerValue : default(long?);
			}
			set
			{
				this.StateTagBiggerValue = value.GetValueOrDefault();
				this.StateTagBiggerValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpireBeforeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpireBefore-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpireBefore property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpireBeforeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exb")]
		public System.DateTimeOffset? ExpireBefore
		{
			get
			{
				return this.ExpireBeforeValueSpecified ? this.ExpireBeforeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpireBeforeValue = value.GetValueOrDefault();
				this.ExpireBeforeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpireAfterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpireAfter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpireAfter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpireAfterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exa")]
		public System.DateTimeOffset? ExpireAfter
		{
			get
			{
				return this.ExpireAfterValueSpecified ? this.ExpireAfterValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpireAfterValue = value.GetValueOrDefault();
				this.ExpireAfterValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lbl")]
		[XmlElementAttribute("lbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Labels { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Labels-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Labels collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LabelsSpecified => (this.Labels.Count != 0);

		[JsonPropertyAttribute("ty")]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ResourceType> ResourceType { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ResourceType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ResourceType collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeSpecified => (this.ResourceType.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sza", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SizeAboveValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SizeAbove-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SizeAbove property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SizeAboveValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sza")]
		public long? SizeAbove
		{
			get
			{
				return this.SizeAboveValueSpecified ? this.SizeAboveValue : default(long?);
			}
			set
			{
				this.SizeAboveValue = value.GetValueOrDefault();
				this.SizeAboveValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("szb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SizeBelowValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SizeBelow-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SizeBelow property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SizeBelowValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("szb")]
		public long? SizeBelow
		{
			get
			{
				return this.SizeBelowValueSpecified ? this.SizeBelowValue : default(long?);
			}
			set
			{
				this.SizeBelowValue = value.GetValueOrDefault();
				this.SizeBelowValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para xml:lang="en">Pattern: [\w/!#$^_.+&\-]+.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[\\w/!#$^_.+&\\-]+")]
		[JsonPropertyAttribute("cty")]
		[XmlElementAttribute("cty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> ContentType { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentType-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentType collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentTypeSpecified => (this.ContentType.Count != 0);

		[JsonPropertyAttribute("atr")]
		[XmlElementAttribute("atr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Attribute> Attribute { get; set; } = System.Array.Empty<Attribute>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Attribute-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AttributeSpecified => (this.Attribute.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("fu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.FilterUsage FilterUsageValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FilterUsage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the FilterUsage property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FilterUsageValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("fu")]
		public Aetheros.OneM2M.Binding.FilterUsage? FilterUsage
		{
			get
			{
				return this.FilterUsageValueSpecified ? this.FilterUsageValue : default(Aetheros.OneM2M.Binding.FilterUsage?);
			}
			set
			{
				this.FilterUsageValue = value.GetValueOrDefault();
				this.FilterUsageValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lim", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long LimitValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Limit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Limit property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LimitValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lim")]
		public long? Limit
		{
			get
			{
				return this.LimitValueSpecified ? this.LimitValue : default(long?);
			}
			set
			{
				this.LimitValue = value.GetValueOrDefault();
				this.LimitValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("smf")]
		[XmlElementAttribute("smf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> SemanticsFilter { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticsFilter-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticsFilter collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticsFilterSpecified => (this.SemanticsFilter.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("fo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool FilterOperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FilterOperation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the FilterOperation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FilterOperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("fo")]
		public bool? FilterOperation
		{
			get
			{
				return this.FilterOperationValueSpecified ? this.FilterOperationValue : default(bool?);
			}
			set
			{
				this.FilterOperationValue = value.GetValueOrDefault();
				this.FilterOperationValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cfs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ContentFilterSyntax ContentFilterSyntaxValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentFilterSyntax-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentFilterSyntax property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentFilterSyntaxValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cfs")]
		public Aetheros.OneM2M.Binding.ContentFilterSyntax? ContentFilterSyntax
		{
			get
			{
				return this.ContentFilterSyntaxValueSpecified ? this.ContentFilterSyntaxValue : default(Aetheros.OneM2M.Binding.ContentFilterSyntax?);
			}
			set
			{
				this.ContentFilterSyntaxValue = value.GetValueOrDefault();
				this.ContentFilterSyntaxValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cfq")]
		[XmlElementAttribute("cfq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ContentFilterQuery { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lvl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long LevelValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Level-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Level property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LevelValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lvl")]
		public long? Level
		{
			get
			{
				return this.LevelValueSpecified ? this.LevelValue : default(long?);
			}
			set
			{
				this.LevelValue = value.GetValueOrDefault();
				this.LevelValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ofst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long OffsetValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Offset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Offset property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OffsetValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ofst")]
		public long? Offset
		{
			get
			{
				return this.OffsetValueSpecified ? this.OffsetValue : default(long?);
			}
			set
			{
				this.OffsetValue = value.GetValueOrDefault();
				this.OffsetValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("atr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("atr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class Attribute
	{
		[JsonPropertyAttribute("nm")]
		[XmlElementAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[JsonPropertyAttribute("val")]
		[XmlElementAttribute("val", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object Value { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("scheduleEntries", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("scheduleEntries")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ScheduleEntries
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("sce")]
		[XmlElementAttribute("sce", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> ScheduleEntry { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("actionStatus", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("actionStatus")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ActionStatus
	{
		[JsonPropertyAttribute("can")]
		[XmlElementAttribute("can", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Action { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Status StatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Status-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Status property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sus")]
		public Aetheros.OneM2M.Binding.Status? Status
		{
			get
			{
				return this.StatusValueSpecified ? this.StatusValue : default(Aetheros.OneM2M.Binding.Status?);
			}
			set
			{
				this.StatusValue = value.GetValueOrDefault();
				this.StatusValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("anyArgType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("anyArgType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AnyArgType
	{
		[JsonPropertyAttribute("nm")]
		[XmlElementAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[JsonPropertyAttribute("val")]
		[XmlElementAttribute("val", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object Value { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("resetArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("resetArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ResetArgsType
	{
		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rebootArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rebootArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RebootArgsType
	{
		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("uploadArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("uploadArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class UploadArgsType
	{
		[JsonPropertyAttribute("ftyp")]
		[XmlElementAttribute("ftyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FileType { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("unm")]
		[XmlElementAttribute("unm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Username { get; set; }

		[JsonPropertyAttribute("pwd")]
		[XmlElementAttribute("pwd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Password { get; set; }

		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("downloadArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("downloadArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DownloadArgsType
	{
		[JsonPropertyAttribute("ftyp")]
		[XmlElementAttribute("ftyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FileType { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("unm")]
		[XmlElementAttribute("unm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Username { get; set; }

		[JsonPropertyAttribute("pwd")]
		[XmlElementAttribute("pwd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Password { get; set; }

		[JsonPropertyAttribute("fsi")]
		[XmlElementAttribute("fsi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Filesize { get; set; }

		[JsonPropertyAttribute("tgf")]
		[XmlElementAttribute("tgf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TargetFile { get; set; }

		[JsonPropertyAttribute("dss")]
		[XmlElementAttribute("dss", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DelaySeconds { get; set; }

		[JsonPropertyAttribute("surl")]
		[XmlElementAttribute("surl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string SuccessURL { get; set; }

		[JsonPropertyAttribute("stt")]
		[XmlElementAttribute("stt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset StartTime { get; set; }

		[JsonPropertyAttribute("cpt")]
		[XmlElementAttribute("cpt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CompleteTime { get; set; }

		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("softwareInstallArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("softwareInstallArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SoftwareInstallArgsType
	{
		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("uuid")]
		[XmlElementAttribute("uuid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string UUID { get; set; }

		[JsonPropertyAttribute("unm")]
		[XmlElementAttribute("unm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Username { get; set; }

		[JsonPropertyAttribute("pwd")]
		[XmlElementAttribute("pwd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Password { get; set; }

		[JsonPropertyAttribute("eer")]
		[XmlElementAttribute("eer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ExecutionEnvRef { get; set; }

		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("softwareUpdateArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("softwareUpdateArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SoftwareUpdateArgsType
	{
		[JsonPropertyAttribute("uuid")]
		[XmlElementAttribute("uuid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string UUID { get; set; }

		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("unm")]
		[XmlElementAttribute("unm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Username { get; set; }

		[JsonPropertyAttribute("pwd")]
		[XmlElementAttribute("pwd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Password { get; set; }

		[JsonPropertyAttribute("eer")]
		[XmlElementAttribute("eer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ExecutionEnvRef { get; set; }

		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("softwareUninstallArgsType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("softwareUninstallArgsType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SoftwareUninstallArgsType
	{
		[JsonPropertyAttribute("uuid")]
		[XmlElementAttribute("uuid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string UUID { get; set; }

		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("eer")]
		[XmlElementAttribute("eer", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ExecutionEnvRef { get; set; }

		[JsonPropertyAttribute("any")]
		[XmlElementAttribute("any", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AnyArgType> AnyArg { get; set; } = System.Array.Empty<AnyArgType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnyArg-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnyArg collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnyArgSpecified => (this.AnyArg.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("execReqArgsListType", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("execReqArgsListType")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ExecReqArgsListType
	{
		[JsonPropertyAttribute("rst")]
		[XmlElementAttribute("rst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<ResetArgsType> Reset { get; set; } = System.Array.Empty<ResetArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reset-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Reset collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResetSpecified => (this.Reset.Count != 0);

		[JsonPropertyAttribute("rbo")]
		[XmlElementAttribute("rbo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<RebootArgsType> Reboot { get; set; } = System.Array.Empty<RebootArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reboot-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Reboot collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RebootSpecified => (this.Reboot.Count != 0);

		[JsonPropertyAttribute("uld")]
		[XmlElementAttribute("uld", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<UploadArgsType> Upload { get; set; } = System.Array.Empty<UploadArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Upload-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Upload collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool UploadSpecified => (this.Upload.Count != 0);

		[JsonPropertyAttribute("dld")]
		[XmlElementAttribute("dld", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<DownloadArgsType> Download { get; set; } = System.Array.Empty<DownloadArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Download-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Download collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DownloadSpecified => (this.Download.Count != 0);

		[JsonPropertyAttribute("swin")]
		[XmlElementAttribute("swin", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<SoftwareInstallArgsType> SoftwareInstall { get; set; } = System.Array.Empty<SoftwareInstallArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SoftwareInstall-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SoftwareInstall collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SoftwareInstallSpecified => (this.SoftwareInstall.Count != 0);

		[JsonPropertyAttribute("swup")]
		[XmlElementAttribute("swup", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<SoftwareUpdateArgsType> SoftwareUpdate { get; set; } = System.Array.Empty<SoftwareUpdateArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SoftwareUpdate-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SoftwareUpdate collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SoftwareUpdateSpecified => (this.SoftwareUpdate.Count != 0);

		[JsonPropertyAttribute("swun")]
		[XmlElementAttribute("swun", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<SoftwareUninstallArgsType> SoftwareUninstall { get; set; } = System.Array.Empty<SoftwareUninstallArgsType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SoftwareUninstall-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SoftwareUninstall collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SoftwareUninstallSpecified => (this.SoftwareUninstall.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mgmtLinkRef", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mgmtLinkRef")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MgmtLinkRef
	{
		/// <summary>
		/// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets the text value.</para>
		/// </summary>
		[JsonPropertyAttribute("val")]
		[XmlTextAttribute(DataType="anyURI")]
		public string Value { get; set; }

		[JsonPropertyAttribute("nm")]
		[XmlAttributeAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlAttributeAttribute("typ", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MgmtDefinition TypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("typ")]
		public Aetheros.OneM2M.Binding.MgmtDefinition? Type
		{
			get
			{
				return this.TypeValueSpecified ? this.TypeValue : default(Aetheros.OneM2M.Binding.MgmtDefinition?);
			}
			set
			{
				this.TypeValue = value.GetValueOrDefault();
				this.TypeValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("setOfAcrs", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("setOfAcrs")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SetOfAcrs
	{
		[JsonPropertyAttribute("acr")]
		[XmlElementAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AccessControlRule> AccessControlRule { get; set; } = System.Array.Empty<AccessControlRule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlRule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlRule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlRuleSpecified => (this.AccessControlRule.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("acr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("acr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AccessControlRule
	{
		[JsonPropertyAttribute("acor")]
		[XmlElementAttribute("acor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlOriginators { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("acop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AccessControlOperations AccessControlOperationsValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlOperations-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the AccessControlOperations property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlOperationsValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("acop")]
		public Aetheros.OneM2M.Binding.AccessControlOperations? AccessControlOperations
		{
			get
			{
				return this.AccessControlOperationsValueSpecified ? this.AccessControlOperationsValue : default(Aetheros.OneM2M.Binding.AccessControlOperations?);
			}
			set
			{
				this.AccessControlOperationsValue = value.GetValueOrDefault();
				this.AccessControlOperationsValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("acco")]
		[XmlElementAttribute("acco", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AccessControlRuleAccessControlContexts> AccessControlContexts { get; set; } = System.Array.Empty<AccessControlRuleAccessControlContexts>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlContexts-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlContexts collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlContextsSpecified => (this.AccessControlContexts.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("acaf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool AccessControlAuthenticationFlagValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlAuthenticationFlag-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the AccessControlAuthenticationFlag property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlAuthenticationFlagValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("acaf")]
		public bool? AccessControlAuthenticationFlag
		{
			get
			{
				return this.AccessControlAuthenticationFlagValueSpecified ? this.AccessControlAuthenticationFlagValue : default(bool?);
			}
			set
			{
				this.AccessControlAuthenticationFlagValue = value.GetValueOrDefault();
				this.AccessControlAuthenticationFlagValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("AccessControlRuleAccessControlContexts", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("AccessControlRuleAccessControlContexts")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AccessControlRuleAccessControlContexts
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("accessControlWindow")]
		[XmlElementAttribute("accessControlWindow", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> AccessControlWindow { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlWindow-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlWindow collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlWindowSpecified => (this.AccessControlWindow.Count != 0);

		[JsonPropertyAttribute("acip")]
		[XmlElementAttribute("acip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public AccessControlRuleAccessControlContextsAccessControlIpAddresses AccessControlIpAddresses { get; set; }

		[JsonPropertyAttribute("aclr")]
		[XmlElementAttribute("aclr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public LocationRegion AccessControlLocationRegion { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("AccessControlRuleAccessControlContextsAccessControlIpAddresses", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("AccessControlRuleAccessControlContextsAccessControlIpAddresses")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AccessControlRuleAccessControlContextsAccessControlIpAddresses
	{
		/// <summary>
		/// <para>An IP version 4 address, with optional CIDR suffix in the range /0
		///				... /32.</para>
		/// <para xml:lang="en">Pattern: ((25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])(/([0-9]|[1-2][0-9]|3[0-2]))?)|([0-9A-Fa-f]{8}(/([0-9]|[1-2][0-9]|3[0-2]))?).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])" +
			"\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9" +
			"])(/([0-9]|[1-2][0-9]|3[0-2]))?)|([0-9A-Fa-f]{8}(/([0-9]|[1-2][0-9]|3[0-2]))?)")]
		[JsonPropertyAttribute("ipv4")]
		[XmlElementAttribute("ipv4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Ipv4Addresses { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ipv4Addresses-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Ipv4Addresses collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Ipv4AddressesSpecified => (this.Ipv4Addresses.Count != 0);
		
		/// <summary>
		/// <para>An IP version 6 address, based on RFC 1884, with optional CIDR suffix
		///				in the range /0 ... /128.</para>
		/// <para xml:lang="en">Pattern: ([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(:(:[0-9A-Fa-f]{1,4}){1,7})|(([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,7}:(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(((:(:0{1,4}){0,3}(:(0{1,4}|[fF]{4}))?)|(0{1,4}:(:0{1,4}){0,2}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){2}(:0{1,4})?(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){3}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){4}(0{1,4}|[fF]{4})?)):(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9]))|(::(/0)?).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(:(:[0-9A-Fa-f]{1,4}){1,7})|(([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,7}:(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(((:(:0{1,4}){0,3}(:(0{1,4}|[fF]{4}))?)|(0{1,4}:(:0{1,4}){0,2}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){2}(:0{1,4})?(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){3}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){4}(0{1,4}|[fF]{4})?)):(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9]))|(::(/0)?)")]
		[JsonPropertyAttribute("ipv6")]
		[XmlElementAttribute("ipv6", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Ipv6Addresses { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Ipv6Addresses-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Ipv6Addresses collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Ipv6AddressesSpecified => (this.Ipv6Addresses.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("locationRegion", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("locationRegion")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LocationRegion
	{
		/// <summary>
		/// <para>2-character country code as defined by ISO-3166</para>
		/// <para xml:lang="en">Pattern: [A-Z]{2}.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("[A-Z]{2}")]
		[JsonPropertyAttribute("accc")]
		[XmlElementAttribute("accc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> CountryCode { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CountryCode-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the CountryCode collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CountryCodeSpecified => (this.CountryCode.Count != 0);

		[JsonPropertyAttribute("accr")]
		[XmlElementAttribute("accr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="float")]
		public ICollection<float> CircRegion { get; set; } = System.Array.Empty<System.Single>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CircRegion-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the CircRegion collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CircRegionSpecified => (this.CircRegion.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("childResourceRef", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("childResourceRef")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ChildResourceRef
	{
		/// <summary>
		/// <para xml:lang="de">Ruft den Text ab oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets the text value.</para>
		/// </summary>
		[JsonPropertyAttribute("val")]
		[XmlTextAttribute(DataType="anyURI")]
		public string Value { get; set; }

		[JsonPropertyAttribute("nm")]
		[XmlAttributeAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlAttributeAttribute("typ", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType TypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Type-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Type property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("typ")]
		public Aetheros.OneM2M.Binding.ResourceType? Type
		{
			get
			{
				return this.TypeValueSpecified ? this.TypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.TypeValue = value.GetValueOrDefault();
				this.TypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("spid")]
		[XmlAttributeAttribute("spid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string SpecializationID { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ors", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ors")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class OperationResult
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rsc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResponseStatusCode ResponseStatusCodeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResponseStatusCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResponseStatusCode property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResponseStatusCodeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rsc")]
		public Aetheros.OneM2M.Binding.ResponseStatusCode? ResponseStatusCode
		{
			get
			{
				return this.ResponseStatusCodeValueSpecified ? this.ResponseStatusCodeValue : default(Aetheros.OneM2M.Binding.ResponseStatusCode?);
			}
			set
			{
				this.ResponseStatusCodeValue = value.GetValueOrDefault();
				this.ResponseStatusCodeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rqi")]
		[XmlElementAttribute("rqi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string RequestIdentifier { get; set; }

		[JsonPropertyAttribute("pc")]
		[XmlElementAttribute("pc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public PrimitiveContent PrimitiveContent { get; set; }

		[JsonPropertyAttribute("to")]
		[XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string To { get; set; }

		[JsonPropertyAttribute("fr")]
		[XmlElementAttribute("fr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string From { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset OriginatingTimestampValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OriginatingTimestamp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OriginatingTimestamp property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OriginatingTimestampValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ot")]
		public System.DateTimeOffset? OriginatingTimestamp
		{
			get
			{
				return this.OriginatingTimestampValueSpecified ? this.OriginatingTimestampValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.OriginatingTimestampValue = value.GetValueOrDefault();
				this.OriginatingTimestampValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rset")]
		[XmlElementAttribute("rset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("ec")]
		[XmlElementAttribute("ec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EventCategory { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cnst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ContentStatus ContentStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cnst")]
		public Aetheros.OneM2M.Binding.ContentStatus? ContentStatus
		{
			get
			{
				return this.ContentStatusValueSpecified ? this.ContentStatusValue : default(Aetheros.OneM2M.Binding.ContentStatus?);
			}
			set
			{
				this.ContentStatusValue = value.GetValueOrDefault();
				this.ContentStatusValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cnot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ContentOffsetValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentOffset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentOffset property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentOffsetValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cnot")]
		public long? ContentOffset
		{
			get
			{
				return this.ContentOffsetValueSpecified ? this.ContentOffsetValue : default(long?);
			}
			set
			{
				this.ContentOffsetValue = value.GetValueOrDefault();
				this.ContentOffsetValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("conr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("conr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ContentRef
	{
		[JsonPropertyAttribute("urir")]
		[XmlElementAttribute("urir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<ContentRefURIReference> URIReference { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ContentRefURIReference", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("ContentRefURIReference")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ContentRefURIReference
	{
		[JsonPropertyAttribute("nm")]
		[XmlElementAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string Name { get; set; }

		[JsonPropertyAttribute("uri")]
		[XmlElementAttribute("uri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URI { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("deletionContexts", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("deletionContexts")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DeletionContexts
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("tod")]
		[XmlElementAttribute("tod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> TimeOfDay { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeOfDay-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeOfDay collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeOfDaySpecified => (this.TimeOfDay.Count != 0);

		[JsonPropertyAttribute("lr")]
		[XmlElementAttribute("lr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<LocationRegion> LocationRegions { get; set; } = System.Array.Empty<LocationRegion>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationRegions-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the LocationRegions collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationRegionsSpecified => (this.LocationRegions.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("md", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("md")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MissingData
	{
		[JsonPropertyAttribute("num")]
		[XmlElementAttribute("num", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Number { get; set; }

		[JsonPropertyAttribute("dur")]
		[XmlElementAttribute("dur", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan Duration { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("receiverESPrimRandObject", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("receiverESPrimRandObject")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ReceiverESPrimRandObject
	{
		[JsonPropertyAttribute("esri")]
		[XmlElementAttribute("esri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string EsprimRandID { get; set; }

		[JsonPropertyAttribute("esrv")]
		[XmlElementAttribute("esrv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string EsprimRandValue { get; set; }

		[JsonPropertyAttribute("esrx")]
		[XmlElementAttribute("esrx", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EsprimRandExpiry { get; set; }

		[JsonPropertyAttribute("esks")]
		[XmlElementAttribute("esks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EsprimKeyGenAlgID> EsprimKeyGenAlgIDs { get; set; }

		[JsonPropertyAttribute("espa")]
		[XmlElementAttribute("espa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EsprimProtocolAndAlgID> EsprimProtocolAndAlgIDs { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("originatorESPrimRandObject", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("originatorESPrimRandObject")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class OriginatorESPrimRandObject
	{
		[JsonPropertyAttribute("esri")]
		[XmlElementAttribute("esri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string EsprimRandID { get; set; }

		[JsonPropertyAttribute("esrv")]
		[XmlElementAttribute("esrv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string EsprimRandValue { get; set; }

		[JsonPropertyAttribute("esrx")]
		[XmlElementAttribute("esrx", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EsprimRandExpiry { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("esks", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.EsprimKeyGenAlgID EsprimKeyGenAlgIDsValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EsprimKeyGenAlgIDs-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the EsprimKeyGenAlgIDs property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EsprimKeyGenAlgIDsValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("esks")]
		public Aetheros.OneM2M.Binding.EsprimKeyGenAlgID? EsprimKeyGenAlgIDs
		{
			get
			{
				return this.EsprimKeyGenAlgIDsValueSpecified ? this.EsprimKeyGenAlgIDsValue : default(Aetheros.OneM2M.Binding.EsprimKeyGenAlgID?);
			}
			set
			{
				this.EsprimKeyGenAlgIDsValue = value.GetValueOrDefault();
				this.EsprimKeyGenAlgIDsValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("espa")]
		[XmlElementAttribute("espa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EsprimProtocolAndAlgID> EsprimProtocolAndAlgIDs { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("esi", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("esi")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class E2ESecInfo
	{
		[JsonPropertyAttribute("supportedE2ESecFeatures")]
		[XmlElementAttribute("supportedE2ESecFeatures", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Suid> SupportedE2ESecFeatures { get; set; }

		[JsonPropertyAttribute("escert")]
		[XmlElementAttribute("escert", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
		public ICollection<byte[]> Certificates { get; set; } = System.Array.Empty<System.Byte[]>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Certificates-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Certificates collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CertificatesSpecified => (this.Certificates.Count != 0);

		[JsonPropertyAttribute("esro")]
		[XmlElementAttribute("esro", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ReceiverESPrimRandObject SharedReceiverESPrimRandObject { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tokenPermission", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tokenPermission")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class TokenPermission
	{
		[JsonPropertyAttribute("ris")]
		[XmlElementAttribute("ris", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ResourceIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ResourceIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceIDsSpecified => (this.ResourceIDs.Count != 0);

		[JsonPropertyAttribute("pv")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("pv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<AccessControlRule> Privileges { get; set; } = System.Array.Empty<AccessControlRule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Privileges-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Privileges collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PrivilegesSpecified => (this.Privileges.Count != 0);
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("rids")]
		[XmlElementAttribute("rids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> RoleIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoleIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RoleIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RoleIDsSpecified => (this.RoleIDs.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tokenPermissions", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tokenPermissions")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class TokenPermissions
	{
		[JsonPropertyAttribute("pm")]
		[XmlElementAttribute("pm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<TokenPermission> Permission { get; set; } = System.Array.Empty<TokenPermission>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Permission-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Permission collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PermissionSpecified => (this.Permission.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tokenClaimSet", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tokenClaimSet")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class TokenClaimSet
	{
		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tkid")]
		[XmlElementAttribute("tkid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenID { get; set; }

		[JsonPropertyAttribute("tkhd")]
		[XmlElementAttribute("tkhd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Holder { get; set; }

		[JsonPropertyAttribute("tkis")]
		[XmlElementAttribute("tkis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Issuer { get; set; }

		[JsonPropertyAttribute("tknb")]
		[XmlElementAttribute("tknb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotBefore { get; set; }

		[JsonPropertyAttribute("tkna")]
		[XmlElementAttribute("tkna", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotAfter { get; set; }

		[JsonPropertyAttribute("tknm")]
		[XmlElementAttribute("tknm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenName { get; set; }

		[JsonPropertyAttribute("tkau")]
		[XmlElementAttribute("tkau", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> Audience { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audience-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Audience collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AudienceSpecified => (this.Audience.Count != 0);

		[JsonPropertyAttribute("tkps")]
		[JsonConverter(typeof(JsonArrayItem<TokenPermission>), "pm")]
		[XmlArrayAttribute("tkps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("pm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<TokenPermission> Permissions { get; set; } = System.Array.Empty<TokenPermission>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Permissions-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Permissions collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PermissionsSpecified => (this.Permissions.Count != 0);

		[JsonPropertyAttribute("tkex")]
		[XmlElementAttribute("tkex", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Extension { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dynAuthLocalTokenIdAssignments", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dynAuthLocalTokenIdAssignments")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthLocalTokenIdAssignments
	{
		[JsonPropertyAttribute("ltia")]
		[XmlElementAttribute("ltia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment> LocalTokenIdAssignment { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment
	{
		[JsonPropertyAttribute("lti")]
		[XmlElementAttribute("lti", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string LocalTokenID { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tkid")]
		[XmlElementAttribute("tkid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenID { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dynAuthTokenSummary", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dynAuthTokenSummary")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthTokenSummary
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tkid")]
		[XmlElementAttribute("tkid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenID { get; set; }

		[JsonPropertyAttribute("tknb")]
		[XmlElementAttribute("tknb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotBefore { get; set; }

		[JsonPropertyAttribute("tkna")]
		[XmlElementAttribute("tkna", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotAfter { get; set; }

		[JsonPropertyAttribute("tknm")]
		[XmlElementAttribute("tknm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenName { get; set; }

		[JsonPropertyAttribute("tkau")]
		[XmlElementAttribute("tkau", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> Audience { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audience-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Audience collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AudienceSpecified => (this.Audience.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dynAuthTokenReqInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dynAuthTokenReqInfo")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthTokenReqInfo
	{
		[JsonPropertyAttribute("dasi")]
		[XmlElementAttribute("dasi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<DynAuthTokenReqInfoDasInfo> DasInfo { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("DynAuthTokenReqInfoDasInfo", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("DynAuthTokenReqInfoDasInfo")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthTokenReqInfoDasInfo
	{
		[JsonPropertyAttribute("uri")]
		[XmlElementAttribute("uri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URI { get; set; }

		[JsonPropertyAttribute("daq")]
		[XmlElementAttribute("daq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public DynAuthDasRequest DasRequest { get; set; }

		[JsonPropertyAttribute("sdr")]
		[XmlElementAttribute("sdr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string SecuredDasRequest { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dynAuthDasRequest", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dynAuthDasRequest")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthDasRequest
	{
		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Originator { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("trt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType TargetedResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TargetedResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the TargetedResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TargetedResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("trt")]
		public Aetheros.OneM2M.Binding.ResourceType? TargetedResourceType
		{
			get
			{
				return this.TargetedResourceTypeValueSpecified ? this.TargetedResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.TargetedResourceTypeValue = value.GetValueOrDefault();
				this.TargetedResourceTypeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("op", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Operation OperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Operation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("op")]
		public Aetheros.OneM2M.Binding.Operation? Operation
		{
			get
			{
				return this.OperationValueSpecified ? this.OperationValue : default(Aetheros.OneM2M.Binding.Operation?);
			}
			set
			{
				this.OperationValue = value.GetValueOrDefault();
				this.OperationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("oip")]
		[XmlElementAttribute("oip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public DynAuthDasRequestOriginatorIP OriginatorIP { get; set; }

		[JsonPropertyAttribute("olo")]
		[XmlElementAttribute("olo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public LocationRegion OriginatorLocation { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("orid")]
		[XmlElementAttribute("orid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> OriginatorRoleIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OriginatorRoleIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OriginatorRoleIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OriginatorRoleIDsSpecified => (this.OriginatorRoleIDs.Count != 0);

		[JsonPropertyAttribute("rts")]
		[XmlElementAttribute("rts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string RequestTimestamp { get; set; }

		[JsonPropertyAttribute("trid")]
		[XmlElementAttribute("trid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string TargetedResourceID { get; set; }

		[JsonPropertyAttribute("ppl")]
		[XmlElementAttribute("ppl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ProposedPrivilegesLifetime { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("rfa")]
		[XmlElementAttribute("rfa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> RoleIDsFromACPs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoleIDsFromACPs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RoleIDsFromACPs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RoleIDsFromACPsSpecified => (this.RoleIDsFromACPs.Count != 0);
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tids")]
		[XmlElementAttribute("tids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> TokenIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TokenIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TokenIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TokenIDsSpecified => (this.TokenIDs.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("DynAuthDasRequestOriginatorIP", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("DynAuthDasRequestOriginatorIP")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthDasRequestOriginatorIP
	{
		/// <summary>
		/// <para>An IP version 4 address, with optional CIDR suffix in the range /0
		///				... /32.</para>
		/// <para xml:lang="en">Pattern: ((25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])(/([0-9]|[1-2][0-9]|3[0-2]))?)|([0-9A-Fa-f]{8}(/([0-9]|[1-2][0-9]|3[0-2]))?).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])" +
			"\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9" +
			"])(/([0-9]|[1-2][0-9]|3[0-2]))?)|([0-9A-Fa-f]{8}(/([0-9]|[1-2][0-9]|3[0-2]))?)")]
		[JsonPropertyAttribute("ip4")]
		[XmlElementAttribute("ip4", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string Ipv4Address { get; set; }
		
		/// <summary>
		/// <para>An IP version 6 address, based on RFC 1884, with optional CIDR suffix
		///				in the range /0 ... /128.</para>
		/// <para xml:lang="en">Pattern: ([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(:(:[0-9A-Fa-f]{1,4}){1,7})|(([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,7}:(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(((:(:0{1,4}){0,3}(:(0{1,4}|[fF]{4}))?)|(0{1,4}:(:0{1,4}){0,2}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){2}(:0{1,4})?(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){3}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){4}(0{1,4}|[fF]{4})?)):(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9]))|(::(/0)?).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"([0-9A-Fa-f]{1,4}(:[0-9A-Fa-f]{1,4}){7}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(:(:[0-9A-Fa-f]{1,4}){1,7})|(([0-9A-Fa-f]{1,4}:){1,6}(:[0-9A-Fa-f]{1,4}){1}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,5}(:[0-9A-Fa-f]{1,4}){1,2}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,4}(:[0-9A-Fa-f]{1,4}){1,3}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,3}(:[0-9A-Fa-f]{1,4}){1,4}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,2}(:[0-9A-Fa-f]{1,4}){1,5}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1}(:[0-9A-Fa-f]{1,4}){1,6}(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(([0-9A-Fa-f]{1,4}:){1,7}:(/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?)|(((:(:0{1,4}){0,3}(:(0{1,4}|[fF]{4}))?)|(0{1,4}:(:0{1,4}){0,2}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){2}(:0{1,4})?(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){3}(:(0{1,4}|[fF]{4}))?)|((0{1,4}:){4}(0{1,4}|[fF]{4})?)):(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9])\.(25[0-5]|2[0-4][0-9]|[0-1]?[0-9]?[0-9]))|(::(/0)?)")]
		[JsonPropertyAttribute("ip6")]
		[XmlElementAttribute("ip6", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string Ipv6Address { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("bop", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("bop")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class BackOffParameters
	{
		[JsonPropertyAttribute("bops")]
		[XmlElementAttribute("bops", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<BackOffParametersBackOffParametersSet> BackOffParametersSet { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("BackOffParametersBackOffParametersSet", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("BackOffParametersBackOffParametersSet")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class BackOffParametersBackOffParametersSet
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("nwa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.NetworkAction NetworkActionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NetworkAction-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the NetworkAction property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NetworkActionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("nwa")]
		public Aetheros.OneM2M.Binding.NetworkAction? NetworkAction
		{
			get
			{
				return this.NetworkActionValueSpecified ? this.NetworkActionValue : default(Aetheros.OneM2M.Binding.NetworkAction?);
			}
			set
			{
				this.NetworkActionValue = value.GetValueOrDefault();
				this.NetworkActionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ibt")]
		[XmlElementAttribute("ibt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long InitialBackoffTime { get; set; }

		[JsonPropertyAttribute("abt")]
		[XmlElementAttribute("abt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long AdditionalBackoffTime { get; set; }

		[JsonPropertyAttribute("mbt")]
		[XmlElementAttribute("mbt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaximumBackoffTime { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rbt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long OptionalRandomBackoffTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OptionalRandomBackoffTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OptionalRandomBackoffTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OptionalRandomBackoffTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rbt")]
		public long? OptionalRandomBackoffTime
		{
			get
			{
				return this.OptionalRandomBackoffTimeValueSpecified ? this.OptionalRandomBackoffTimeValue : default(long?);
			}
			set
			{
				this.OptionalRandomBackoffTimeValue = value.GetValueOrDefault();
				this.OptionalRandomBackoffTimeValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("listOfDataLinks", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("listOfDataLinks")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ListOfDataLinks
	{
		[JsonPropertyAttribute("dle")]
		[XmlElementAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<DataLink> DataLinkEntry { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dali", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dali")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DataLink
	{
		[JsonPropertyAttribute("nm")]
		[XmlElementAttribute("nm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Name { get; set; }

		[JsonPropertyAttribute("dcid")]
		[XmlElementAttribute("dcid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string DataContainerID { get; set; }

		[JsonPropertyAttribute("atn")]
		[XmlElementAttribute("atn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string AttributeName { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rce", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rce")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_resource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AccessControlPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AccessControlPolicyAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ActiveCmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AE))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AEAnnc))]
	[XmlIncludeAttribute(typeof(AnnounceableResource))]
	[XmlIncludeAttribute(typeof(AnnounceableSubordinateResource))]
	[XmlIncludeAttribute(typeof(AnnouncedMgmtResource))]
	[XmlIncludeAttribute(typeof(AnnouncedResource))]
	[XmlIncludeAttribute(typeof(AnnouncedSubordinateResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Battery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.BatteryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhBuffer))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefaults))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefEcValue))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhEcDefParamValues))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhLimits))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNetworkAccessRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNwAccessRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Container))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContainerAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContentInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContentInstanceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CSEBase))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Delivery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapability))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapabilityAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DynamicAuthorizationConsultation))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventConfig))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLog))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLogAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ExecInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Firmware))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.FirmwareAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Group))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GroupAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.LocationPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.LocationPolicyAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.M2MServiceSubscriptionProfile))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Memory))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.MemoryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.MgmtCmd))]
	[XmlIncludeAttribute(typeof(MgmtResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Node))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NodeAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NotificationTargetMgmtPolicyRef))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NotificationTargetPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.PolicyDeletionRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.PollingChannel))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Reboot))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RebootAnnc))]
	[XmlIncludeAttribute(typeof(RegularResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RemoteCSE))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RemoteCSEAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Request))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Role))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Schedule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ScheduleAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SemanticDescriptor))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SemanticDescriptorAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ServiceSubscribedAppRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ServiceSubscribedNode))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Software))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SoftwareAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.StatsCollect))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.StatsConfig))]
	[XmlIncludeAttribute(typeof(SubordinateResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Subscription))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeries))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesInstanceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Token))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TrafficPattern))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TrafficPatternAnnc))]
	public partial class Resource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType ResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ty")]
		public Aetheros.OneM2M.Binding.ResourceType? ResourceType
		{
			get
			{
				return this.ResourceTypeValueSpecified ? this.ResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.ResourceTypeValue = value.GetValueOrDefault();
				this.ResourceTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ri")]
		[XmlElementAttribute("ri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ResourceID { get; set; }

		[JsonPropertyAttribute("pi")]
		[XmlElementAttribute("pi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ParentID { get; set; }

		[JsonPropertyAttribute("ct")]
		[XmlElementAttribute("ct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreationTime { get; set; }

		[JsonPropertyAttribute("lt")]
		[XmlElementAttribute("lt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset LastModifiedTime { get; set; }

		[JsonPropertyAttribute("lbl")]
		[XmlElementAttribute("lbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Labels { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Labels-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Labels collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LabelsSpecified => (this.Labels.Count != 0);

		[JsonPropertyAttribute("rn")]
		[XmlAttributeAttribute("rn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string ResourceName { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("regularResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("regularResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_regularResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ActiveCmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AE))]
	[XmlIncludeAttribute(typeof(AnnounceableResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Battery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhBuffer))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefaults))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefEcValue))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhEcDefParamValues))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhLimits))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNetworkAccessRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNwAccessRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Container))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Delivery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapability))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DynamicAuthorizationConsultation))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventConfig))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLog))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ExecInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Firmware))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Group))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.LocationPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.M2MServiceSubscriptionProfile))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Memory))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.MgmtCmd))]
	[XmlIncludeAttribute(typeof(MgmtResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Node))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NotificationTargetMgmtPolicyRef))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NotificationTargetPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.PolicyDeletionRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Reboot))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RemoteCSE))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Request))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Role))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SemanticDescriptor))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ServiceSubscribedAppRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ServiceSubscribedNode))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Software))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.StatsCollect))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.StatsConfig))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Subscription))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeries))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Token))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TrafficPattern))]
	public partial class RegularResource : Resource
	{
		[JsonPropertyAttribute("acpi")]
		[XmlElementAttribute("acpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlPolicyIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyIDsSpecified => (this.AccessControlPolicyIDs.Count != 0);

		[JsonPropertyAttribute("et")]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTime { get; set; }

		[JsonPropertyAttribute("daci")]
		[XmlElementAttribute("daci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> DynamicAuthorizationConsultationIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicAuthorizationConsultationIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DynamicAuthorizationConsultationIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DynamicAuthorizationConsultationIDsSpecified => (this.DynamicAuthorizationConsultationIDs.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("announceableResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("announceableResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announceableResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ActiveCmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AE))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Battery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhBuffer))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefaults))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefEcValue))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhEcDefParamValues))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhLimits))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNetworkAccessRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNwAccessRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Container))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapability))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLog))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Firmware))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Group))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.LocationPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Memory))]
	[XmlIncludeAttribute(typeof(MgmtResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Node))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Reboot))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RemoteCSE))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SemanticDescriptor))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Software))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeries))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TrafficPattern))]
	public partial class AnnounceableResource : RegularResource
	{
		[JsonPropertyAttribute("at")]
		[XmlElementAttribute("at", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AnnounceTo { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnounceTo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnounceTo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnounceToSpecified => (this.AnnounceTo.Count != 0);

		[JsonPropertyAttribute("aa")]
		[XmlElementAttribute("aa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public ICollection<string> AnnouncedAttribute { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnouncedAttribute-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnouncedAttribute collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnouncedAttributeSpecified => (this.AnnouncedAttribute.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("announcedResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("announcedResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announcedResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AEAnnc))]
	[XmlIncludeAttribute(typeof(AnnouncedMgmtResource))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.BatteryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContainerAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapabilityAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLogAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.FirmwareAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GroupAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.LocationPolicyAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.MemoryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.NodeAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RebootAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RemoteCSEAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SemanticDescriptorAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SoftwareAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TrafficPatternAnnc))]
	public partial class AnnouncedResource : Resource
	{
		[JsonPropertyAttribute("acpi")]
		[XmlElementAttribute("acpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlPolicyIDs { get; set; }

		[JsonPropertyAttribute("et")]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTime { get; set; }

		[JsonPropertyAttribute("lnk")]
		[XmlElementAttribute("lnk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Link { get; set; }

		[JsonPropertyAttribute("daci")]
		[XmlElementAttribute("daci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> DynamicAuthorizationConsultationIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicAuthorizationConsultationIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DynamicAuthorizationConsultationIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DynamicAuthorizationConsultationIDsSpecified => (this.DynamicAuthorizationConsultationIDs.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("announceableSubordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("announceableSubordinateResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announceableSubordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AccessControlPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContentInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Schedule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesInstance))]
	public partial class AnnounceableSubordinateResource : Resource
	{
		[JsonPropertyAttribute("et")]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTime { get; set; }

		[JsonPropertyAttribute("at")]
		[XmlElementAttribute("at", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AnnounceTo { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnounceTo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnounceTo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnounceToSpecified => (this.AnnounceTo.Count != 0);

		[JsonPropertyAttribute("aa")]
		[XmlElementAttribute("aa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public ICollection<string> AnnouncedAttribute { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnouncedAttribute-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnouncedAttribute collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnouncedAttributeSpecified => (this.AnnouncedAttribute.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("subordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("subordinateResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_subordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.PollingChannel))]
	public partial class SubordinateResource : Resource
	{
		[JsonPropertyAttribute("et")]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTime { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("announcedSubordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("announcedSubordinateResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announcedSubordinateResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AccessControlPolicyAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ContentInstanceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ScheduleAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.TimeSeriesInstanceAnnc))]
	public partial class AnnouncedSubordinateResource : Resource
	{
		[JsonPropertyAttribute("et")]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTime { get; set; }

		[JsonPropertyAttribute("lnk")]
		[XmlElementAttribute("lnk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Link { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mgRsc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mgRsc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_mgmtResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.ActiveCmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Battery))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhBuffer))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefaults))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhDefEcValue))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhEcDefParamValues))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhLimits))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNetworkAccessRules))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhNwAccessRule))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.CmdhPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapability))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfo))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLog))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Firmware))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Memory))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Reboot))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.Software))]
	public partial class MgmtResource : AnnounceableResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mgd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MgmtDefinition MgmtDefinitionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MgmtDefinition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MgmtDefinition property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MgmtDefinitionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mgd")]
		public Aetheros.OneM2M.Binding.MgmtDefinition? MgmtDefinition
		{
			get
			{
				return this.MgmtDefinitionValueSpecified ? this.MgmtDefinitionValue : default(Aetheros.OneM2M.Binding.MgmtDefinition?);
			}
			set
			{
				this.MgmtDefinitionValue = value.GetValueOrDefault();
				this.MgmtDefinitionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("obis")]
		[XmlElementAttribute("obis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ObjectIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ObjectIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ObjectIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ObjectIDsSpecified => (this.ObjectIDs.Count != 0);

		[JsonPropertyAttribute("obps")]
		[XmlElementAttribute("obps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ObjectPaths { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ObjectPaths-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ObjectPaths collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ObjectPathsSpecified => (this.ObjectPaths.Count != 0);

		[JsonPropertyAttribute("dc")]
		[XmlElementAttribute("dc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Description { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mgoA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mgoA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announcedMgmtResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkDeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AreaNwkInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.BatteryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceCapabilityAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.DeviceInfoAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.EventLogAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.FirmwareAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.MemoryAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.RebootAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SoftwareAnnc))]
	public partial class AnnouncedMgmtResource : AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mgd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MgmtDefinition MgmtDefinitionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MgmtDefinition-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MgmtDefinition property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MgmtDefinitionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mgd")]
		public Aetheros.OneM2M.Binding.MgmtDefinition? MgmtDefinition
		{
			get
			{
				return this.MgmtDefinitionValueSpecified ? this.MgmtDefinitionValue : default(Aetheros.OneM2M.Binding.MgmtDefinition?);
			}
			set
			{
				this.MgmtDefinitionValue = value.GetValueOrDefault();
				this.MgmtDefinitionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("obis")]
		[XmlElementAttribute("obis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ObjectIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ObjectIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ObjectIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ObjectIDsSpecified => (this.ObjectIDs.Count != 0);

		[JsonPropertyAttribute("obps")]
		[XmlElementAttribute("obps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ObjectPaths { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ObjectPaths-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ObjectPaths collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ObjectPathsSpecified => (this.ObjectPaths.Count != 0);

		[JsonPropertyAttribute("dc")]
		[XmlElementAttribute("dc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Description { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("flexContainerResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("flexContainerResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_flexContainerResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynApp))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynInterface))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynMethod))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynMethodCall))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynProperty))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynSvcObject))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GenericInterworkingOperationInstance))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GenericInterworkingService))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SvcFwWrapper))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SvcObjWrapper))]
	public partial class FlexContainerResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType ResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ty")]
		public Aetheros.OneM2M.Binding.ResourceType? ResourceType
		{
			get
			{
				return this.ResourceTypeValueSpecified ? this.ResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.ResourceTypeValue = value.GetValueOrDefault();
				this.ResourceTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ri")]
		[XmlElementAttribute("ri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ResourceID { get; set; }

		[JsonPropertyAttribute("pi")]
		[XmlElementAttribute("pi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ParentID { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ct")]
		public System.DateTimeOffset? CreationTime
		{
			get
			{
				return this.CreationTimeValueSpecified ? this.CreationTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreationTimeValue = value.GetValueOrDefault();
				this.CreationTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset LastModifiedTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastModifiedTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LastModifiedTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LastModifiedTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lt")]
		public System.DateTimeOffset? LastModifiedTime
		{
			get
			{
				return this.LastModifiedTimeValueSpecified ? this.LastModifiedTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.LastModifiedTimeValue = value.GetValueOrDefault();
				this.LastModifiedTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lbl")]
		[XmlElementAttribute("lbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Labels { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Labels-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Labels collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LabelsSpecified => (this.Labels.Count != 0);

		[JsonPropertyAttribute("acpi")]
		[XmlElementAttribute("acpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlPolicyIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyIDsSpecified => (this.AccessControlPolicyIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpirationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpirationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("et")]
		public System.DateTimeOffset? ExpirationTime
		{
			get
			{
				return this.ExpirationTimeValueSpecified ? this.ExpirationTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpirationTimeValue = value.GetValueOrDefault();
				this.ExpirationTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("daci")]
		[XmlElementAttribute("daci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> DynamicAuthorizationConsultationIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicAuthorizationConsultationIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DynamicAuthorizationConsultationIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DynamicAuthorizationConsultationIDsSpecified => (this.DynamicAuthorizationConsultationIDs.Count != 0);

		[JsonPropertyAttribute("at")]
		[XmlElementAttribute("at", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AnnounceTo { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnounceTo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnounceTo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnounceToSpecified => (this.AnnounceTo.Count != 0);

		[JsonPropertyAttribute("aa")]
		[XmlElementAttribute("aa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public ICollection<string> AnnouncedAttribute { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AnnouncedAttribute-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AnnouncedAttribute collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AnnouncedAttributeSpecified => (this.AnnouncedAttribute.Count != 0);

		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("cnd")]
		[XmlElementAttribute("cnd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ContainerDefinition { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("rn")]
		[XmlAttributeAttribute("rn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string ResourceName { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("announcedFlexContainerResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("announcedFlexContainerResource")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("sg_announcedFlexContainerResource", Namespace="http://www.onem2m.org/xml/protocols")]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynAppAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynInterfaceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynMethodAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynMethodCallAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynPropertyAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.AllJoynSvcObjectAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GenericInterworkingOperationInstanceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.GenericInterworkingServiceAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SvcFwWrapperAnnc))]
	[XmlIncludeAttribute(typeof(Aetheros.OneM2M.Binding.SvcObjWrapperAnnc))]
	public partial class AnnouncedFlexContainerResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType ResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ty")]
		public Aetheros.OneM2M.Binding.ResourceType? ResourceType
		{
			get
			{
				return this.ResourceTypeValueSpecified ? this.ResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.ResourceTypeValue = value.GetValueOrDefault();
				this.ResourceTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ri")]
		[XmlElementAttribute("ri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ResourceID { get; set; }

		[JsonPropertyAttribute("pi")]
		[XmlElementAttribute("pi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ParentID { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ct")]
		public System.DateTimeOffset? CreationTime
		{
			get
			{
				return this.CreationTimeValueSpecified ? this.CreationTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreationTimeValue = value.GetValueOrDefault();
				this.CreationTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset LastModifiedTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LastModifiedTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LastModifiedTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LastModifiedTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lt")]
		public System.DateTimeOffset? LastModifiedTime
		{
			get
			{
				return this.LastModifiedTimeValueSpecified ? this.LastModifiedTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.LastModifiedTimeValue = value.GetValueOrDefault();
				this.LastModifiedTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lbl")]
		[XmlElementAttribute("lbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public ICollection<string> Labels { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Labels-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Labels collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LabelsSpecified => (this.Labels.Count != 0);

		[JsonPropertyAttribute("acpi")]
		[XmlElementAttribute("acpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlPolicyIDs { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("et", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpirationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpirationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpirationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("et")]
		public System.DateTimeOffset? ExpirationTime
		{
			get
			{
				return this.ExpirationTimeValueSpecified ? this.ExpirationTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpirationTimeValue = value.GetValueOrDefault();
				this.ExpirationTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lnk")]
		[XmlElementAttribute("lnk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Link { get; set; }

		[JsonPropertyAttribute("daci")]
		[XmlElementAttribute("daci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> DynamicAuthorizationConsultationIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicAuthorizationConsultationIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DynamicAuthorizationConsultationIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DynamicAuthorizationConsultationIDsSpecified => (this.DynamicAuthorizationConsultationIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTag-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTag property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("st")]
		public long? StateTag
		{
			get
			{
				return this.StateTagValueSpecified ? this.StateTagValue : default(long?);
			}
			set
			{
				this.StateTagValue = value.GetValueOrDefault();
				this.StateTagValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cnd")]
		[XmlElementAttribute("cnd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ContainerDefinition { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("rn")]
		[XmlAttributeAttribute("rn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public string ResourceName { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("enc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("enc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class EventNotificationCriteria
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("crb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreatedBeforeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreatedBefore-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreatedBefore property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreatedBeforeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("crb")]
		public System.DateTimeOffset? CreatedBefore
		{
			get
			{
				return this.CreatedBeforeValueSpecified ? this.CreatedBeforeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreatedBeforeValue = value.GetValueOrDefault();
				this.CreatedBeforeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cra", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset CreatedAfterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CreatedAfter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CreatedAfter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CreatedAfterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cra")]
		public System.DateTimeOffset? CreatedAfter
		{
			get
			{
				return this.CreatedAfterValueSpecified ? this.CreatedAfterValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.CreatedAfterValue = value.GetValueOrDefault();
				this.CreatedAfterValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ms", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ModifiedSinceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ModifiedSince-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ModifiedSince property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ModifiedSinceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ms")]
		public System.DateTimeOffset? ModifiedSince
		{
			get
			{
				return this.ModifiedSinceValueSpecified ? this.ModifiedSinceValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ModifiedSinceValue = value.GetValueOrDefault();
				this.ModifiedSinceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("us", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset UnmodifiedSinceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die UnmodifiedSince-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the UnmodifiedSince property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool UnmodifiedSinceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("us")]
		public System.DateTimeOffset? UnmodifiedSince
		{
			get
			{
				return this.UnmodifiedSinceValueSpecified ? this.UnmodifiedSinceValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.UnmodifiedSinceValue = value.GetValueOrDefault();
				this.UnmodifiedSinceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagSmallerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTagSmaller-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTagSmaller property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagSmallerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sts")]
		public long? StateTagSmaller
		{
			get
			{
				return this.StateTagSmallerValueSpecified ? this.StateTagSmallerValue : default(long?);
			}
			set
			{
				this.StateTagSmallerValue = value.GetValueOrDefault();
				this.StateTagSmallerValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("stb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagBiggerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTagBigger-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTagBigger property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagBiggerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("stb")]
		public long? StateTagBigger
		{
			get
			{
				return this.StateTagBiggerValueSpecified ? this.StateTagBiggerValue : default(long?);
			}
			set
			{
				this.StateTagBiggerValue = value.GetValueOrDefault();
				this.StateTagBiggerValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpireBeforeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpireBefore-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpireBefore property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpireBeforeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exb")]
		public System.DateTimeOffset? ExpireBefore
		{
			get
			{
				return this.ExpireBeforeValueSpecified ? this.ExpireBeforeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpireBeforeValue = value.GetValueOrDefault();
				this.ExpireBeforeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ExpireAfterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpireAfter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpireAfter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpireAfterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exa")]
		public System.DateTimeOffset? ExpireAfter
		{
			get
			{
				return this.ExpireAfterValueSpecified ? this.ExpireAfterValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ExpireAfterValue = value.GetValueOrDefault();
				this.ExpireAfterValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sza", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SizeAboveValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SizeAbove-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SizeAbove property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SizeAboveValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sza")]
		public long? SizeAbove
		{
			get
			{
				return this.SizeAboveValueSpecified ? this.SizeAboveValue : default(long?);
			}
			set
			{
				this.SizeAboveValue = value.GetValueOrDefault();
				this.SizeAboveValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("szb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SizeBelowValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SizeBelow-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SizeBelow property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SizeBelowValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("szb")]
		public long? SizeBelow
		{
			get
			{
				return this.SizeBelowValueSpecified ? this.SizeBelowValue : default(long?);
			}
			set
			{
				this.SizeBelowValue = value.GetValueOrDefault();
				this.SizeBelowValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("om")]
		[XmlElementAttribute("om", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Operation> OperationMonitor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Operation>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationMonitor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OperationMonitor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationMonitorSpecified => (this.OperationMonitor.Count != 0);

		[JsonPropertyAttribute("atr")]
		[XmlElementAttribute("atr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Attribute> Attribute { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Attribute>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Attribute-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Attribute collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AttributeSpecified => (this.Attribute.Count != 0);

		[JsonPropertyAttribute("net")]
		[XmlElementAttribute("net", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.NotificationEventType> NotificationEventType { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.NotificationEventType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationEventType-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NotificationEventType collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationEventTypeSpecified => (this.NotificationEventType.Count != 0);

		[JsonPropertyAttribute("md")]
		[XmlElementAttribute("md", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MissingData MissingData { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("bn", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("bn")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class BatchNotify
	{
		[JsonPropertyAttribute("num")]
		[XmlElementAttribute("num", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Number { get; set; }

		[JsonPropertyAttribute("dur")]
		[XmlElementAttribute("dur", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan Duration { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rl", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rl")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class RateLimit
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mnn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfNotifyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfNotify-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfNotify property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfNotifyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mnn")]
		public long? MaxNrOfNotify
		{
			get
			{
				return this.MaxNrOfNotifyValueSpecified ? this.MaxNrOfNotifyValue : default(long?);
			}
			set
			{
				this.MaxNrOfNotifyValue = value.GetValueOrDefault();
				this.MaxNrOfNotifyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("tww", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan TimeWindowValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeWindow-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the TimeWindow property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeWindowValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("tww")]
		public System.TimeSpan? TimeWindow
		{
			get
			{
				return this.TimeWindowValueSpecified ? this.TimeWindowValue : default(System.TimeSpan?);
			}
			set
			{
				this.TimeWindowValue = value.GetValueOrDefault();
				this.TimeWindowValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("resourceWrapper", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("resourceWrapper")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("resource", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ResourceWrapper
	{
		[JsonPropertyAttribute("sg_resource")]
		[XmlElementAttribute("sg_resource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Resource Sg_Resource { get; set; }

		[JsonPropertyAttribute("sg_regularResource")]
		[XmlElementAttribute("sg_regularResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.RegularResource Sg_RegularResource { get; set; }

		[JsonPropertyAttribute("sg_announcedResource")]
		[XmlElementAttribute("sg_announcedResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnouncedResource Sg_AnnouncedResource { get; set; }

		[JsonPropertyAttribute("sg_announceableResource")]
		[XmlElementAttribute("sg_announceableResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnounceableResource Sg_AnnounceableResource { get; set; }

		[JsonPropertyAttribute("sg_subordinateResource")]
		[XmlElementAttribute("sg_subordinateResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.SubordinateResource Sg_SubordinateResource { get; set; }

		[JsonPropertyAttribute("sg_announcedSubordinateResource")]
		[XmlElementAttribute("sg_announcedSubordinateResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnouncedSubordinateResource Sg_AnnouncedSubordinateResource { get; set; }

		[JsonPropertyAttribute("sg_announceableSubordinateResource")]
		[XmlElementAttribute("sg_announceableSubordinateResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnounceableSubordinateResource Sg_AnnounceableSubordinateResource { get; set; }

		[JsonPropertyAttribute("sg_mgmtResource")]
		[XmlElementAttribute("sg_mgmtResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MgmtResource Sg_MgmtResource { get; set; }

		[JsonPropertyAttribute("sg_announcedMgmtResource")]
		[XmlElementAttribute("sg_announcedMgmtResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnouncedMgmtResource Sg_AnnouncedMgmtResource { get; set; }

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.FlexContainerResource Sg_FlexContainerResource { get; set; }

		[JsonPropertyAttribute("sg_announcedFlexContainerResource")]
		[XmlElementAttribute("sg_announcedFlexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource Sg_AnnouncedFlexContainerResource { get; set; }

		[JsonPropertyAttribute("uri")]
		[XmlElementAttribute("uri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URI { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("agr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("agr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("aggregatedResponse", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AggregatedResponse
	{
		[JsonPropertyAttribute("ri")]
		[XmlElementAttribute("ri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ResourceID { get; set; }

		[JsonPropertyAttribute("rsp")]
		[XmlElementAttribute("rsp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<ResponsePrimitive> ResponsePrimitive { get; set; } = System.Array.Empty<ResponsePrimitive>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResponsePrimitive-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ResponsePrimitive collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResponsePrimitiveSpecified => (this.ResponsePrimitive.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rsp", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("rsp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("responsePrimitive", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ResponsePrimitive
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rsc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResponseStatusCode ResponseStatusCodeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResponseStatusCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResponseStatusCode property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResponseStatusCodeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rsc")]
		public Aetheros.OneM2M.Binding.ResponseStatusCode? ResponseStatusCode
		{
			get
			{
				return this.ResponseStatusCodeValueSpecified ? this.ResponseStatusCodeValue : default(Aetheros.OneM2M.Binding.ResponseStatusCode?);
			}
			set
			{
				this.ResponseStatusCodeValue = value.GetValueOrDefault();
				this.ResponseStatusCodeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rqi")]
		[XmlElementAttribute("rqi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string RequestIdentifier { get; set; }

		[JsonPropertyAttribute("pc")]
		[XmlElementAttribute("pc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PrimitiveContent PrimitiveContent { get; set; }

		[JsonPropertyAttribute("to")]
		[XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string To { get; set; }

		[JsonPropertyAttribute("fr")]
		[XmlElementAttribute("fr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string From { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset OriginatingTimestampValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OriginatingTimestamp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OriginatingTimestamp property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OriginatingTimestampValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ot")]
		public System.DateTimeOffset? OriginatingTimestamp
		{
			get
			{
				return this.OriginatingTimestampValueSpecified ? this.OriginatingTimestampValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.OriginatingTimestampValue = value.GetValueOrDefault();
				this.OriginatingTimestampValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rset")]
		[XmlElementAttribute("rset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("ec")]
		[XmlElementAttribute("ec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EventCategory { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cnst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ContentStatus ContentStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cnst")]
		public Aetheros.OneM2M.Binding.ContentStatus? ContentStatus
		{
			get
			{
				return this.ContentStatusValueSpecified ? this.ContentStatusValue : default(Aetheros.OneM2M.Binding.ContentStatus?);
			}
			set
			{
				this.ContentStatusValue = value.GetValueOrDefault();
				this.ContentStatusValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cnot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ContentOffsetValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentOffset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentOffset property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentOffsetValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cnot")]
		public long? ContentOffset
		{
			get
			{
				return this.ContentOffsetValueSpecified ? this.ContentOffsetValue : default(long?);
			}
			set
			{
				this.ContentOffsetValue = value.GetValueOrDefault();
				this.ContentOffsetValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ati")]
		[JsonConverter(typeof(JsonArrayItem<DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment>), "ltia")]
		[XmlArrayAttribute("ati", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("ltia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment> AssignedTokenIdentifiers { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DynAuthLocalTokenIdAssignmentsLocalTokenIdAssignment>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AssignedTokenIdentifiers-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AssignedTokenIdentifiers collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AssignedTokenIdentifiersSpecified => (this.AssignedTokenIdentifiers.Count != 0);

		[JsonPropertyAttribute("tokenReqInfo")]
		[JsonConverter(typeof(JsonArrayItem<DynAuthTokenReqInfoDasInfo>), "dasi")]
		[XmlArrayAttribute("tokenReqInfo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dasi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DynAuthTokenReqInfoDasInfo> TokenReqInfo { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DynAuthTokenReqInfoDasInfo>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TokenReqInfo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TokenReqInfo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TokenReqInfoSpecified => (this.TokenReqInfo.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("listOfChildResourceRef", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("listOfChildResourceRef")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("resourceRefList", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ListOfChildResourceRef
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("agn", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("agn")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("aggregatedNotification", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AggregatedNotification
	{
		[JsonPropertyAttribute("sgn")]
		[XmlElementAttribute("sgn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Notification> Notification { get; set; } = System.Array.Empty<Notification>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Notification-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Notification collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationSpecified => (this.Notification.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sgn", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("sgn")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("notification", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Notification
	{
		[JsonPropertyAttribute("nev")]
		[XmlElementAttribute("nev", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public NotificationNotificationEvent NotificationEvent { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("vrq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool VerificationRequestValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VerificationRequest-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VerificationRequest property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VerificationRequestValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("vrq")]
		public bool? VerificationRequest
		{
			get
			{
				return this.VerificationRequestValueSpecified ? this.VerificationRequestValue : default(bool?);
			}
			set
			{
				this.VerificationRequestValue = value.GetValueOrDefault();
				this.VerificationRequestValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sud", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool SubscriptionDeletionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SubscriptionDeletion-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SubscriptionDeletion property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionDeletionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sud")]
		public bool? SubscriptionDeletion
		{
			get
			{
				return this.SubscriptionDeletionValueSpecified ? this.SubscriptionDeletionValue : default(bool?);
			}
			set
			{
				this.SubscriptionDeletionValue = value.GetValueOrDefault();
				this.SubscriptionDeletionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("sur")]
		[XmlElementAttribute("sur", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string SubscriptionReference { get; set; }

		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("nfu")]
		[XmlElementAttribute("nfu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NotificationForwardingURI { get; set; }

		[JsonPropertyAttribute("idr")]
		[XmlElementAttribute("idr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public NotificationIPEDiscoveryRequest IPEDiscoveryRequest { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("NotificationNotificationEvent", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("NotificationNotificationEvent")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class NotificationNotificationEvent
	{
		[JsonPropertyAttribute("rep")]
		[XmlElementAttribute("rep", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object Representation { get; set; }

		[JsonPropertyAttribute("om")]
		[XmlElementAttribute("om", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public NotificationNotificationEventOperationMonitor OperationMonitor { get; set; }

		[JsonPropertyAttribute("net")]
		[XmlElementAttribute("net", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.NotificationEventType> NotificationEventType { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.NotificationEventType>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationEventType-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NotificationEventType collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationEventTypeSpecified => (this.NotificationEventType.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("NotificationNotificationEventOperationMonitor", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("NotificationNotificationEventOperationMonitor")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class NotificationNotificationEventOperationMonitor
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("op", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Operation OperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Operation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("op")]
		public Aetheros.OneM2M.Binding.Operation? Operation
		{
			get
			{
				return this.OperationValueSpecified ? this.OperationValue : default(Aetheros.OneM2M.Binding.Operation?);
			}
			set
			{
				this.OperationValue = value.GetValueOrDefault();
				this.OperationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("org")]
		[XmlElementAttribute("org", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Originator { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("NotificationIPEDiscoveryRequest", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("NotificationIPEDiscoveryRequest")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class NotificationIPEDiscoveryRequest
	{
		[JsonPropertyAttribute("org")]
		[XmlElementAttribute("org", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Originator { get; set; }

		[JsonPropertyAttribute("fc")]
		[XmlElementAttribute("fc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.FilterCriteria FilterCriteria { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("seci", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("seci")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("securityInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SecurityInfo
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public SecurityInfoType SecurityInfoTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SecurityInfoType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SecurityInfoType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SecurityInfoTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sit")]
		public SecurityInfoType? SecurityInfoType
		{
			get
			{
				return this.SecurityInfoTypeValueSpecified ? this.SecurityInfoTypeValue : default(SecurityInfoType?);
			}
			set
			{
				this.SecurityInfoTypeValue = value.GetValueOrDefault();
				this.SecurityInfoTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("daq")]
		[XmlElementAttribute("daq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.DynAuthDasRequest DasRequest { get; set; }

		[JsonPropertyAttribute("dres")]
		[XmlElementAttribute("dres", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public DynAuthDasResponse DasResponse { get; set; }

		[JsonPropertyAttribute("ero")]
		[XmlElementAttribute("ero", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ReceiverESPrimRandObject EsprimRandObject { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\-_=]+)\.([a-zA-Z0-9\-_=]*)\.([a-zA-Z0-9\-_=]*)\.([a-zA-Z0-9\-_=]*)\.([A-Za-z0-9\-_=])+.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\-_=]+)\\.([a-zA-Z0-9\\-_=]*)\\.([a-zA-Z0-9\\-_=]*)\\.([a-zA-Z0-9\\-_=]*)\\.(" +
			"[A-Za-z0-9\\-_=])+")]
		[JsonPropertyAttribute("epo")]
		[XmlElementAttribute("epo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EsprimObject { get; set; }

		[JsonPropertyAttribute("eckm")]
		[XmlElementAttribute("eckm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
		public byte[] EscertkeMessage { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sit", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum SecurityInfoType
	{
		[XmlEnumAttribute("1")]
		DynamicAuthorizationRequest = 1,

		[XmlEnumAttribute("2")]
		DynamicAuthorizationResponse = 2,

		[XmlEnumAttribute("3")]
		ReceiverE2eRandObjectRequest = 3,

		[XmlEnumAttribute("4")]
		ReceiverE2eRandObjectResponse = 4,

		[XmlEnumAttribute("5")]
		EsprimObject = 5,

		[XmlEnumAttribute("6")]
		EscertkeMessage = 6,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dynAuthDasResponse", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dynAuthDasResponse")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthDasResponse
	{
		[JsonPropertyAttribute("dai")]
		[XmlElementAttribute("dai", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public DynAuthDasResponseDynamicACPInfo DynamicACPInfo { get; set; }

		[JsonPropertyAttribute("tkns")]
		[XmlElementAttribute("tkns", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<string> Tokens { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Tokens-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Tokens collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TokensSpecified => (this.Tokens.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("DynAuthDasResponseDynamicACPInfo", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("DynAuthDasResponseDynamicACPInfo")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class DynAuthDasResponseDynamicACPInfo
	{
		[JsonPropertyAttribute("gp")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("gp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlRule> GrantedPrivileges { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlRule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GrantedPrivileges-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GrantedPrivileges collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GrantedPrivilegesSpecified => (this.GrantedPrivileges.Count != 0);

		[JsonPropertyAttribute("pl")]
		[XmlElementAttribute("pl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string PrivilegesLifetime { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("responseContent", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("responseContent")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ResponseContent : Aetheros.OneM2M.Binding.PrimitiveContent
	{
		[JsonPropertyAttribute("rce")]
		[XmlElementAttribute("rce", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceWrapper Resource { get; set; }

		[JsonPropertyAttribute("uril")]
		[XmlElementAttribute("uril", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> URIList { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die URIList-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the URIList collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool URIListSpecified => (this.URIList.Count != 0);

		[JsonPropertyAttribute("uri")]
		[XmlElementAttribute("uri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URI { get; set; }

		[JsonPropertyAttribute("agr")]
		[XmlElementAttribute("agr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AggregatedResponse AggregatedResponse { get; set; }

		[JsonPropertyAttribute("rrl")]
		[JsonConverter(typeof(JsonArrayItem<ChildResourceRef>), "ch")]
		[XmlArrayAttribute("rrl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ResourceRefList { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceRefList-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ResourceRefList collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceRefListSpecified => (this.ResourceRefList.Count != 0);

		[JsonPropertyAttribute("dbg")]
		[XmlElementAttribute("dbg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DebugInfo { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sch", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("sch")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("schedule", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Schedule : Aetheros.OneM2M.Binding.AnnounceableSubordinateResource
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("se")]
		[XmlArrayAttribute("se", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("sce", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> ScheduleElement { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Subscription> Subscription { get; set; } = System.Array.Empty<Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sub", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("sub")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("subscription", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Subscription : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("enc")]
		[XmlElementAttribute("enc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.EventNotificationCriteria EventNotificationCriteria { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ExpirationCounterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExpirationCounter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExpirationCounter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExpirationCounterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exc")]
		public long? ExpirationCounter
		{
			get
			{
				return this.ExpirationCounterValueSpecified ? this.ExpirationCounterValue : default(long?);
			}
			set
			{
				this.ExpirationCounterValue = value.GetValueOrDefault();
				this.ExpirationCounterValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("nu")]
		[XmlElementAttribute("nu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> NotificationURI { get; set; }

		[JsonPropertyAttribute("gpi")]
		[XmlElementAttribute("gpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string GroupID { get; set; }

		[JsonPropertyAttribute("nfu")]
		[XmlElementAttribute("nfu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NotificationForwardingURI { get; set; }

		[JsonPropertyAttribute("bn")]
		[XmlElementAttribute("bn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.BatchNotify BatchNotify { get; set; }

		[JsonPropertyAttribute("rl")]
		[XmlElementAttribute("rl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.RateLimit RateLimit { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("psn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PreSubscriptionNotifyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PreSubscriptionNotify-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PreSubscriptionNotify property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PreSubscriptionNotifyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("psn")]
		public long? PreSubscriptionNotify
		{
			get
			{
				return this.PreSubscriptionNotifyValueSpecified ? this.PreSubscriptionNotifyValue : default(long?);
			}
			set
			{
				this.PreSubscriptionNotifyValue = value.GetValueOrDefault();
				this.PreSubscriptionNotifyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PendingNotification PendingNotificationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PendingNotification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PendingNotification property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PendingNotificationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pn")]
		public Aetheros.OneM2M.Binding.PendingNotification? PendingNotification
		{
			get
			{
				return this.PendingNotificationValueSpecified ? this.PendingNotificationValue : default(Aetheros.OneM2M.Binding.PendingNotification?);
			}
			set
			{
				this.PendingNotificationValue = value.GetValueOrDefault();
				this.PendingNotificationValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("nsp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long NotificationStoragePriorityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationStoragePriority-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the NotificationStoragePriority property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationStoragePriorityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("nsp")]
		public long? NotificationStoragePriority
		{
			get
			{
				return this.NotificationStoragePriorityValueSpecified ? this.NotificationStoragePriorityValue : default(long?);
			}
			set
			{
				this.NotificationStoragePriorityValue = value.GetValueOrDefault();
				this.NotificationStoragePriorityValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ln", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool LatestNotifyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LatestNotify-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LatestNotify property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LatestNotifyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ln")]
		public bool? LatestNotify
		{
			get
			{
				return this.LatestNotifyValueSpecified ? this.LatestNotifyValue : default(bool?);
			}
			set
			{
				this.LatestNotifyValue = value.GetValueOrDefault();
				this.LatestNotifyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("nct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.NotificationContentType NotificationContentTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationContentType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the NotificationContentType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationContentTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("nct")]
		public Aetheros.OneM2M.Binding.NotificationContentType? NotificationContentType
		{
			get
			{
				return this.NotificationContentTypeValueSpecified ? this.NotificationContentTypeValue : default(Aetheros.OneM2M.Binding.NotificationContentType?);
			}
			set
			{
				this.NotificationContentTypeValue = value.GetValueOrDefault();
				this.NotificationContentTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("nec")]
		[XmlElementAttribute("nec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string NotificationEventCat { get; set; }

		[JsonPropertyAttribute("su")]
		[XmlElementAttribute("su", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string SubscriberURI { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sch")]
		[XmlElementAttribute("sch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Schedule> Schedule { get; set; } = System.Array.Empty<Schedule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Schedule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Schedule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleSpecified => (this.Schedule.Count != 0);

		[JsonPropertyAttribute("ntpr")]
		[XmlElementAttribute("ntpr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<NotificationTargetMgmtPolicyRef> NotificationTargetMgmtPolicyRef { get; set; } = System.Array.Empty<NotificationTargetMgmtPolicyRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationTargetMgmtPolicyRef-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NotificationTargetMgmtPolicyRef collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationTargetMgmtPolicyRefSpecified => (this.NotificationTargetMgmtPolicyRef.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ntpr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ntpr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("notificationTargetMgmtPolicyRef", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class NotificationTargetMgmtPolicyRef : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("ntu")]
		[XmlElementAttribute("ntu", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> NotificationTargetURI { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotificationTargetURI-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NotificationTargetURI collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotificationTargetURISpecified => (this.NotificationTargetURI.Count != 0);

		[JsonPropertyAttribute("npi")]
		[XmlElementAttribute("npi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NotificationlPolicyID { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Subscription> Subscription { get; set; } = System.Array.Empty<Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("schA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("schA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("scheduleAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ScheduleAnnc : Aetheros.OneM2M.Binding.AnnouncedSubordinateResource
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("se")]
		[XmlArrayAttribute("se", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("sce", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> ScheduleElement { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScheduleElement-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ScheduleElement collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleElementSpecified => (this.ScheduleElement.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("acp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("acp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("accessControlPolicy", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AccessControlPolicy : Aetheros.OneM2M.Binding.AnnounceableSubordinateResource
	{
		[JsonPropertyAttribute("pv")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("pv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlRule> Privileges { get; set; }

		[JsonPropertyAttribute("pvs")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("pvs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlRule> SelfPrivileges { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("acpA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("acpA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("accessControlPolicyAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AccessControlPolicyAnnc : Aetheros.OneM2M.Binding.AnnouncedSubordinateResource
	{
		[JsonPropertyAttribute("pv")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("pv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlRule> Privileges { get; set; }

		[JsonPropertyAttribute("pvs")]
		[JsonConverter(typeof(JsonArrayItem<AccessControlRule>), "acr")]
		[XmlArrayAttribute("pvs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("acr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlRule> SelfPrivileges { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("acmp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("acmp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("activeCmdhPolicy", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ActiveCmdhPolicy : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("acmlk")]
		[XmlElementAttribute("acmlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string ActiveCmdhPolicyLink { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("smd", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("smd")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("semanticDescriptor", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SemanticDescriptor : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: application\/rdf\+xml\:1.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("application\\/rdf\\+xml\\:1")]
		[JsonPropertyAttribute("dcrp")]
		[XmlElementAttribute("dcrp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DescriptorRepresentation { get; set; }

		[JsonPropertyAttribute("soe")]
		[XmlElementAttribute("soe", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SemanticOpExec { get; set; }

		[JsonPropertyAttribute("dsp")]
		[XmlElementAttribute("dsp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
		public byte[] Descriptor { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("rels")]
		[XmlElementAttribute("rels", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> RelatedSemantics { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RelatedSemantics-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RelatedSemantics collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RelatedSemanticsSpecified => (this.RelatedSemantics.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("smdA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("smdA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("semanticDescriptorAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SemanticDescriptorAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: application\/rdf\+xml\:1.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("application\\/rdf\\+xml\\:1")]
		[JsonPropertyAttribute("dcrp")]
		[XmlElementAttribute("dcrp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DescriptorRepresentation { get; set; }

		[JsonPropertyAttribute("soe")]
		[XmlElementAttribute("soe", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SemanticOpExec { get; set; }

		[JsonPropertyAttribute("dsp")]
		[XmlElementAttribute("dsp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="base64Binary")]
		public byte[] Descriptor { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("rels")]
		[XmlElementAttribute("rels", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> RelatedSemantics { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RelatedSemantics-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RelatedSemantics collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RelatedSemanticsSpecified => (this.RelatedSemantics.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cin", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cin")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("contentInstance", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ContentInstance : Aetheros.OneM2M.Binding.AnnounceableSubordinateResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([\w/!#$^_.+&\-]+(:[0-2])?)|([\w/!#$^_.+&\-]+((:[0-2])?)+((:[0-5])?)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([\\w/!#$^_.+&\\-]+(:[0-2])?)|([\\w/!#$^_.+&\\-]+((:[0-2])?)+((:[0-5])?))")]
		[JsonPropertyAttribute("cnf")]
		[XmlElementAttribute("cnf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ContentInfo { get; set; }

		[JsonPropertyAttribute("cs")]
		[XmlElementAttribute("cs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ContentSize { get; set; }

		[JsonPropertyAttribute("conr")]
		[JsonConverter(typeof(JsonArrayItem<ContentRefURIReference>), "urir")]
		[XmlArrayAttribute("conr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("urir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContentRefURIReference> ContentRef { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContentRefURIReference>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentRef-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentRef collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentRefSpecified => (this.ContentRef.Count != 0);

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("con")]
		[XmlElementAttribute("con", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object Content { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cinA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cinA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("contentInstanceAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ContentInstanceAnnc : Aetheros.OneM2M.Binding.AnnouncedSubordinateResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([\w/!#$^_.+&\-]+(:[0-2])?)|([\w/!#$^_.+&\-]+((:[0-2])?)+((:[0-5])?)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([\\w/!#$^_.+&\\-]+(:[0-2])?)|([\\w/!#$^_.+&\\-]+((:[0-2])?)+((:[0-5])?))")]
		[JsonPropertyAttribute("cnf")]
		[XmlElementAttribute("cnf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ContentInfo { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ContentSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ContentSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cs")]
		public long? ContentSize
		{
			get
			{
				return this.ContentSizeValueSpecified ? this.ContentSizeValue : default(long?);
			}
			set
			{
				this.ContentSizeValue = value.GetValueOrDefault();
				this.ContentSizeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("con")]
		[XmlElementAttribute("con", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object Content { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cnt", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cnt")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("container", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Container : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfInstancesValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfInstances-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfInstances property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfInstancesValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mni")]
		public long? MaxNrOfInstances
		{
			get
			{
				return this.MaxNrOfInstancesValueSpecified ? this.MaxNrOfInstancesValue : default(long?);
			}
			set
			{
				this.MaxNrOfInstancesValue = value.GetValueOrDefault();
				this.MaxNrOfInstancesValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxByteSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxByteSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxByteSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxByteSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mbs")]
		public long? MaxByteSize
		{
			get
			{
				return this.MaxByteSizeValueSpecified ? this.MaxByteSizeValue : default(long?);
			}
			set
			{
				this.MaxByteSizeValue = value.GetValueOrDefault();
				this.MaxByteSizeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxInstanceAgeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxInstanceAge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxInstanceAge property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxInstanceAgeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mia")]
		public long? MaxInstanceAge
		{
			get
			{
				return this.MaxInstanceAgeValueSpecified ? this.MaxInstanceAgeValue : default(long?);
			}
			set
			{
				this.MaxInstanceAgeValue = value.GetValueOrDefault();
				this.MaxInstanceAgeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cni")]
		[XmlElementAttribute("cni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfInstances { get; set; }

		[JsonPropertyAttribute("cbs")]
		[XmlElementAttribute("cbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentByteSize { get; set; }

		[JsonPropertyAttribute("li")]
		[XmlElementAttribute("li", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationID { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("disr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DisableRetrievalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisableRetrieval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DisableRetrieval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DisableRetrievalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("disr")]
		public bool? DisableRetrieval
		{
			get
			{
				return this.DisableRetrievalValueSpecified ? this.DisableRetrievalValue : default(bool?);
			}
			set
			{
				this.DisableRetrievalValue = value.GetValueOrDefault();
				this.DisableRetrievalValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("cin")]
		[XmlElementAttribute("cin", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContentInstance> ContentInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContentInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentInstanceSpecified => (this.ContentInstance.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Container> ContainerProperty { get; set; } = System.Array.Empty<Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerPropertySpecified => (this.ContainerProperty.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cntA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cntA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("containerAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ContainerAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfInstancesValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfInstances-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfInstances property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfInstancesValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mni")]
		public long? MaxNrOfInstances
		{
			get
			{
				return this.MaxNrOfInstancesValueSpecified ? this.MaxNrOfInstancesValue : default(long?);
			}
			set
			{
				this.MaxNrOfInstancesValue = value.GetValueOrDefault();
				this.MaxNrOfInstancesValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxByteSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxByteSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxByteSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxByteSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mbs")]
		public long? MaxByteSize
		{
			get
			{
				return this.MaxByteSizeValueSpecified ? this.MaxByteSizeValue : default(long?);
			}
			set
			{
				this.MaxByteSizeValue = value.GetValueOrDefault();
				this.MaxByteSizeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxInstanceAgeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxInstanceAge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxInstanceAge property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxInstanceAgeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mia")]
		public long? MaxInstanceAge
		{
			get
			{
				return this.MaxInstanceAgeValueSpecified ? this.MaxInstanceAgeValue : default(long?);
			}
			set
			{
				this.MaxInstanceAgeValue = value.GetValueOrDefault();
				this.MaxInstanceAgeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfInstancesValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentNrOfInstances-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentNrOfInstances property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentNrOfInstancesValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cni")]
		public long? CurrentNrOfInstances
		{
			get
			{
				return this.CurrentNrOfInstancesValueSpecified ? this.CurrentNrOfInstancesValue : default(long?);
			}
			set
			{
				this.CurrentNrOfInstancesValue = value.GetValueOrDefault();
				this.CurrentNrOfInstancesValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentByteSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentByteSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentByteSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentByteSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cbs")]
		public long? CurrentByteSize
		{
			get
			{
				return this.CurrentByteSizeValueSpecified ? this.CurrentByteSizeValue : default(long?);
			}
			set
			{
				this.CurrentByteSizeValue = value.GetValueOrDefault();
				this.CurrentByteSizeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("li")]
		[XmlElementAttribute("li", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationID { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("disr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DisableRetrievalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DisableRetrieval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DisableRetrieval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DisableRetrievalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("disr")]
		public bool? DisableRetrieval
		{
			get
			{
				return this.DisableRetrievalValueSpecified ? this.DisableRetrievalValue : default(bool?);
			}
			set
			{
				this.DisableRetrievalValue = value.GetValueOrDefault();
				this.DisableRetrievalValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("cin")]
		[XmlElementAttribute("cin", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContentInstance> ContentInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContentInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentInstanceSpecified => (this.ContentInstance.Count != 0);

		[JsonPropertyAttribute("cinA")]
		[XmlElementAttribute("cinA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContentInstanceAnnc> ContentInstanceAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContentInstanceAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentInstanceAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentInstanceAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentInstanceAnncSpecified => (this.ContentInstanceAnnc.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Container> Container { get; set; } = System.Array.Empty<Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("cntA")]
		[XmlElementAttribute("cntA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<ContainerAnnc> ContainerAnncProperty { get; set; } = System.Array.Empty<ContainerAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerAnncProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerAnncProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerAnncPropertySpecified => (this.ContainerAnncProperty.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);

		[JsonPropertyAttribute("sg_announcedFlexContainerResource")]
		[XmlElementAttribute("sg_announcedFlexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource> Sg_AnnouncedFlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_AnnouncedFlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_AnnouncedFlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_AnnouncedFlexContainerResourceSpecified => (this.Sg_AnnouncedFlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("grp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("grp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("group", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Group : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MemberType MemberTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemberType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MemberType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemberTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mt")]
		public Aetheros.OneM2M.Binding.MemberType? MemberType
		{
			get
			{
				return this.MemberTypeValueSpecified ? this.MemberTypeValue : default(Aetheros.OneM2M.Binding.MemberType?);
			}
			set
			{
				this.MemberTypeValue = value.GetValueOrDefault();
				this.MemberTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cnm")]
		[XmlElementAttribute("cnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfMembers { get; set; }

		[JsonPropertyAttribute("mnm")]
		[XmlElementAttribute("mnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfMembers { get; set; }

		[JsonPropertyAttribute("mid")]
		[XmlElementAttribute("mid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> MemberIDs { get; set; }

		[JsonPropertyAttribute("macp")]
		[XmlElementAttribute("macp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> MembersAccessControlPolicyIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MembersAccessControlPolicyIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the MembersAccessControlPolicyIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MembersAccessControlPolicyIDsSpecified => (this.MembersAccessControlPolicyIDs.Count != 0);

		[JsonPropertyAttribute("mtv")]
		[XmlElementAttribute("mtv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool MemberTypeValidated { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("csy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ConsistencyStrategy ConsistencyStrategyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConsistencyStrategy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ConsistencyStrategy property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ConsistencyStrategyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("csy")]
		public Aetheros.OneM2M.Binding.ConsistencyStrategy? ConsistencyStrategy
		{
			get
			{
				return this.ConsistencyStrategyValueSpecified ? this.ConsistencyStrategyValue : default(Aetheros.OneM2M.Binding.ConsistencyStrategy?);
			}
			set
			{
				this.ConsistencyStrategyValue = value.GetValueOrDefault();
				this.ConsistencyStrategyValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("gn")]
		[XmlElementAttribute("gn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string GroupName { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("grpA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("grpA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("groupAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class GroupAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MemberType MemberTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemberType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MemberType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemberTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mt")]
		public Aetheros.OneM2M.Binding.MemberType? MemberType
		{
			get
			{
				return this.MemberTypeValueSpecified ? this.MemberTypeValue : default(Aetheros.OneM2M.Binding.MemberType?);
			}
			set
			{
				this.MemberTypeValue = value.GetValueOrDefault();
				this.MemberTypeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfMembersValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentNrOfMembers-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentNrOfMembers property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentNrOfMembersValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cnm")]
		public long? CurrentNrOfMembers
		{
			get
			{
				return this.CurrentNrOfMembersValueSpecified ? this.CurrentNrOfMembersValue : default(long?);
			}
			set
			{
				this.CurrentNrOfMembersValue = value.GetValueOrDefault();
				this.CurrentNrOfMembersValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfMembersValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfMembers-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfMembers property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfMembersValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mnm")]
		public long? MaxNrOfMembers
		{
			get
			{
				return this.MaxNrOfMembersValueSpecified ? this.MaxNrOfMembersValue : default(long?);
			}
			set
			{
				this.MaxNrOfMembersValue = value.GetValueOrDefault();
				this.MaxNrOfMembersValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("mid")]
		[XmlElementAttribute("mid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string[] MemberIDs { get; set; }

		[JsonPropertyAttribute("macp")]
		[XmlElementAttribute("macp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> MembersAccessControlPolicyIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MembersAccessControlPolicyIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the MembersAccessControlPolicyIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MembersAccessControlPolicyIDsSpecified => (this.MembersAccessControlPolicyIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mtv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool MemberTypeValidatedValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemberTypeValidated-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MemberTypeValidated property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemberTypeValidatedValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mtv")]
		public bool? MemberTypeValidated
		{
			get
			{
				return this.MemberTypeValidatedValueSpecified ? this.MemberTypeValidatedValue : default(bool?);
			}
			set
			{
				this.MemberTypeValidatedValue = value.GetValueOrDefault();
				this.MemberTypeValidatedValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("csy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ConsistencyStrategy ConsistencyStrategyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ConsistencyStrategy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ConsistencyStrategy property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ConsistencyStrategyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("csy")]
		public Aetheros.OneM2M.Binding.ConsistencyStrategy? ConsistencyStrategy
		{
			get
			{
				return this.ConsistencyStrategyValueSpecified ? this.ConsistencyStrategyValue : default(Aetheros.OneM2M.Binding.ConsistencyStrategy?);
			}
			set
			{
				this.ConsistencyStrategyValue = value.GetValueOrDefault();
				this.ConsistencyStrategyValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("gn")]
		[XmlElementAttribute("gn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string GroupName { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pch", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("pch")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("pollingChannel", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class PollingChannel : Aetheros.OneM2M.Binding.SubordinateResource
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tsi", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tsi")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("timeSeriesInstance", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TimeSeriesInstance : Aetheros.OneM2M.Binding.AnnounceableSubordinateResource
	{
		[JsonPropertyAttribute("dgt")]
		[XmlElementAttribute("dgt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string DataGenerationTime { get; set; }

		[JsonPropertyAttribute("con")]
		[XmlElementAttribute("con", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string Content { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("snr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SequenceNrValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SequenceNr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SequenceNr property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SequenceNrValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("snr")]
		public long? SequenceNr
		{
			get
			{
				return this.SequenceNrValueSpecified ? this.SequenceNrValue : default(long?);
			}
			set
			{
				this.SequenceNrValue = value.GetValueOrDefault();
				this.SequenceNrValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tsia", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tsia")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("timeSeriesInstanceAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TimeSeriesInstanceAnnc : Aetheros.OneM2M.Binding.AnnouncedSubordinateResource
	{
		[JsonPropertyAttribute("dgt")]
		[XmlElementAttribute("dgt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string DataGenerationTime { get; set; }

		[JsonPropertyAttribute("con")]
		[XmlElementAttribute("con", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string Content { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("snr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SequenceNrValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SequenceNr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SequenceNr property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SequenceNrValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("snr")]
		public long? SequenceNr
		{
			get
			{
				return this.SequenceNrValueSpecified ? this.SequenceNrValue : default(long?);
			}
			set
			{
				this.SequenceNrValue = value.GetValueOrDefault();
				this.SequenceNrValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ts", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ts")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("timeSeries", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TimeSeries : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfInstancesValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfInstances-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfInstances property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfInstancesValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mni")]
		public long? MaxNrOfInstances
		{
			get
			{
				return this.MaxNrOfInstancesValueSpecified ? this.MaxNrOfInstancesValue : default(long?);
			}
			set
			{
				this.MaxNrOfInstancesValue = value.GetValueOrDefault();
				this.MaxNrOfInstancesValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxByteSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxByteSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxByteSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxByteSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mbs")]
		public long? MaxByteSize
		{
			get
			{
				return this.MaxByteSizeValueSpecified ? this.MaxByteSizeValue : default(long?);
			}
			set
			{
				this.MaxByteSizeValue = value.GetValueOrDefault();
				this.MaxByteSizeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxInstanceAgeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxInstanceAge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxInstanceAge property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxInstanceAgeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mia")]
		public long? MaxInstanceAge
		{
			get
			{
				return this.MaxInstanceAgeValueSpecified ? this.MaxInstanceAgeValue : default(long?);
			}
			set
			{
				this.MaxInstanceAgeValue = value.GetValueOrDefault();
				this.MaxInstanceAgeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cni")]
		[XmlElementAttribute("cni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfInstances { get; set; }

		[JsonPropertyAttribute("cbs")]
		[XmlElementAttribute("cbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentByteSize { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PeriodicIntervalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicInterval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIntervalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pei")]
		public long? PeriodicInterval
		{
			get
			{
				return this.PeriodicIntervalValueSpecified ? this.PeriodicIntervalValue : default(long?);
			}
			set
			{
				this.PeriodicIntervalValue = value.GetValueOrDefault();
				this.PeriodicIntervalValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool MissingDataDetectValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataDetect-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataDetect property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataDetectValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdd")]
		public bool? MissingDataDetect
		{
			get
			{
				return this.MissingDataDetectValueSpecified ? this.MissingDataDetectValue : default(bool?);
			}
			set
			{
				this.MissingDataDetectValue = value.GetValueOrDefault();
				this.MissingDataDetectValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MissingDataMaxNrValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataMaxNr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataMaxNr property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataMaxNrValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdn")]
		public long? MissingDataMaxNr
		{
			get
			{
				return this.MissingDataMaxNrValueSpecified ? this.MissingDataMaxNrValue : default(long?);
			}
			set
			{
				this.MissingDataMaxNrValue = value.GetValueOrDefault();
				this.MissingDataMaxNrValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("mdl")]
		[XmlElementAttribute("mdl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string MissingDataList { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MissingDataCurrentNrValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataCurrentNr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataCurrentNr property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataCurrentNrValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdc")]
		public long? MissingDataCurrentNr
		{
			get
			{
				return this.MissingDataCurrentNrValueSpecified ? this.MissingDataCurrentNrValue : default(long?);
			}
			set
			{
				this.MissingDataCurrentNrValue = value.GetValueOrDefault();
				this.MissingDataCurrentNrValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MissingDataDetectTimerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataDetectTimer-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataDetectTimer property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataDetectTimerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdt")]
		public long? MissingDataDetectTimer
		{
			get
			{
				return this.MissingDataDetectTimerValueSpecified ? this.MissingDataDetectTimerValue : default(long?);
			}
			set
			{
				this.MissingDataDetectTimerValue = value.GetValueOrDefault();
				this.MissingDataDetectTimerValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("la")]
		[XmlElementAttribute("la", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Latest { get; set; }

		[JsonPropertyAttribute("ol")]
		[XmlElementAttribute("ol", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Oldest { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("tsi")]
		[XmlElementAttribute("tsi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesInstance> TimeSeriesInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesInstanceSpecified => (this.TimeSeriesInstance.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tsa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tsa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("timeSeriesAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TimeSeriesAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTagValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StateTag-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StateTag property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StateTagValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("st")]
		public long? StateTag
		{
			get
			{
				return this.StateTagValueSpecified ? this.StateTagValue : default(long?);
			}
			set
			{
				this.StateTagValue = value.GetValueOrDefault();
				this.StateTagValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxNrOfInstancesValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxNrOfInstances-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxNrOfInstances property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxNrOfInstancesValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mni")]
		public long? MaxNrOfInstances
		{
			get
			{
				return this.MaxNrOfInstancesValueSpecified ? this.MaxNrOfInstancesValue : default(long?);
			}
			set
			{
				this.MaxNrOfInstancesValue = value.GetValueOrDefault();
				this.MaxNrOfInstancesValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxByteSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxByteSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxByteSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxByteSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mbs")]
		public long? MaxByteSize
		{
			get
			{
				return this.MaxByteSizeValueSpecified ? this.MaxByteSizeValue : default(long?);
			}
			set
			{
				this.MaxByteSizeValue = value.GetValueOrDefault();
				this.MaxByteSizeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxInstanceAgeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxInstanceAge-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxInstanceAge property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxInstanceAgeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mia")]
		public long? MaxInstanceAge
		{
			get
			{
				return this.MaxInstanceAgeValueSpecified ? this.MaxInstanceAgeValue : default(long?);
			}
			set
			{
				this.MaxInstanceAgeValue = value.GetValueOrDefault();
				this.MaxInstanceAgeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cni")]
		[XmlElementAttribute("cni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentNrOfInstances { get; set; }

		[JsonPropertyAttribute("cbs")]
		[XmlElementAttribute("cbs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentByteSize { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PeriodicIntervalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicInterval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIntervalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pei")]
		public long? PeriodicInterval
		{
			get
			{
				return this.PeriodicIntervalValueSpecified ? this.PeriodicIntervalValue : default(long?);
			}
			set
			{
				this.PeriodicIntervalValue = value.GetValueOrDefault();
				this.PeriodicIntervalValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool MissingDataDetectValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataDetect-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataDetect property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataDetectValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdd")]
		public bool? MissingDataDetect
		{
			get
			{
				return this.MissingDataDetectValueSpecified ? this.MissingDataDetectValue : default(bool?);
			}
			set
			{
				this.MissingDataDetectValue = value.GetValueOrDefault();
				this.MissingDataDetectValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("mdl")]
		[XmlElementAttribute("mdl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string MissingDataList { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MissingDataCurrentNrValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataCurrentNr-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataCurrentNr property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataCurrentNrValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdc")]
		public long? MissingDataCurrentNr
		{
			get
			{
				return this.MissingDataCurrentNrValueSpecified ? this.MissingDataCurrentNrValue : default(long?);
			}
			set
			{
				this.MissingDataCurrentNrValue = value.GetValueOrDefault();
				this.MissingDataCurrentNrValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MissingDataDetectTimerValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MissingDataDetectTimer-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MissingDataDetectTimer property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MissingDataDetectTimerValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mdt")]
		public long? MissingDataDetectTimer
		{
			get
			{
				return this.MissingDataDetectTimerValueSpecified ? this.MissingDataDetectTimerValue : default(long?);
			}
			set
			{
				this.MissingDataDetectTimerValue = value.GetValueOrDefault();
				this.MissingDataDetectTimerValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("tsi")]
		[XmlElementAttribute("tsi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesInstance> TimeSeriesInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesInstanceSpecified => (this.TimeSeriesInstance.Count != 0);

		[JsonPropertyAttribute("tsia")]
		[XmlElementAttribute("tsia", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesInstanceAnnc> TimeSeriesInstanceAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesInstanceAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesInstanceAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesInstanceAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesInstanceAnncSpecified => (this.TimeSeriesInstanceAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("trpt", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("trpt")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("trafficPattern", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TrafficPattern : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("provideToNSE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ProvideToNSEValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProvideToNSE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ProvideToNSE property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ProvideToNSEValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("provideToNSE")]
		public bool? ProvideToNSE
		{
			get
			{
				return this.ProvideToNSEValueSpecified ? this.ProvideToNSEValue : default(bool?);
			}
			set
			{
				this.ProvideToNSEValue = value.GetValueOrDefault();
				this.ProvideToNSEValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PeriodicIndicator PeriodicIndicatorValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicIndicator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicIndicator property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIndicatorValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pri")]
		public Aetheros.OneM2M.Binding.PeriodicIndicator? PeriodicIndicator
		{
			get
			{
				return this.PeriodicIndicatorValueSpecified ? this.PeriodicIndicatorValue : default(Aetheros.OneM2M.Binding.PeriodicIndicator?);
			}
			set
			{
				this.PeriodicIndicatorValue = value.GetValueOrDefault();
				this.PeriodicIndicatorValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint PeriodicDurationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicDurationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicDurationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicDurationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pdt")]
		public uint? PeriodicDurationTime
		{
			get
			{
				return this.PeriodicDurationTimeValueSpecified ? this.PeriodicDurationTimeValue : default(uint?);
			}
			set
			{
				this.PeriodicDurationTimeValue = value.GetValueOrDefault();
				this.PeriodicDurationTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint PeriodicIntervalTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicIntervalTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicIntervalTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIntervalTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pit")]
		public uint? PeriodicIntervalTime
		{
			get
			{
				return this.PeriodicIntervalTimeValueSpecified ? this.PeriodicIntervalTimeValue : default(uint?);
			}
			set
			{
				this.PeriodicIntervalTimeValue = value.GetValueOrDefault();
				this.PeriodicIntervalTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sti", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.StationaryIndication StationaryIndicationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StationaryIndication-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StationaryIndication property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StationaryIndicationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sti")]
		public Aetheros.OneM2M.Binding.StationaryIndication? StationaryIndication
		{
			get
			{
				return this.StationaryIndicationValueSpecified ? this.StationaryIndicationValue : default(Aetheros.OneM2M.Binding.StationaryIndication?);
			}
			set
			{
				this.StationaryIndicationValue = value.GetValueOrDefault();
				this.StationaryIndicationValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dsi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DataSizeIndicatorValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataSizeIndicator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DataSizeIndicator property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DataSizeIndicatorValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dsi")]
		public long? DataSizeIndicator
		{
			get
			{
				return this.DataSizeIndicatorValueSpecified ? this.DataSizeIndicatorValue : default(long?);
			}
			set
			{
				this.DataSizeIndicatorValue = value.GetValueOrDefault();
				this.DataSizeIndicatorValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("vdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ValidityTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ValidityTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ValidityTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ValidityTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("vdt")]
		public System.DateTimeOffset? ValidityTime
		{
			get
			{
				return this.ValidityTimeValueSpecified ? this.ValidityTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ValidityTimeValue = value.GetValueOrDefault();
				this.ValidityTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ttn")]
		[XmlElementAttribute("ttn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> TargetNetwork { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("sch")]
		[XmlElementAttribute("sch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Schedule> Schedule { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Schedule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Schedule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Schedule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleSpecified => (this.Schedule.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("trptA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("trptA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("trafficPatternAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class TrafficPatternAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("provideToNSE", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ProvideToNSEValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProvideToNSE-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ProvideToNSE property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ProvideToNSEValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("provideToNSE")]
		public bool? ProvideToNSE
		{
			get
			{
				return this.ProvideToNSEValueSpecified ? this.ProvideToNSEValue : default(bool?);
			}
			set
			{
				this.ProvideToNSEValue = value.GetValueOrDefault();
				this.ProvideToNSEValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PeriodicIndicator PeriodicIndicatorValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicIndicator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicIndicator property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIndicatorValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pri")]
		public Aetheros.OneM2M.Binding.PeriodicIndicator? PeriodicIndicator
		{
			get
			{
				return this.PeriodicIndicatorValueSpecified ? this.PeriodicIndicatorValue : default(Aetheros.OneM2M.Binding.PeriodicIndicator?);
			}
			set
			{
				this.PeriodicIndicatorValue = value.GetValueOrDefault();
				this.PeriodicIndicatorValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint PeriodicDurationTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicDurationTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicDurationTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicDurationTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pdt")]
		public uint? PeriodicDurationTime
		{
			get
			{
				return this.PeriodicDurationTimeValueSpecified ? this.PeriodicDurationTimeValue : default(uint?);
			}
			set
			{
				this.PeriodicDurationTimeValue = value.GetValueOrDefault();
				this.PeriodicDurationTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pit", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint PeriodicIntervalTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PeriodicIntervalTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PeriodicIntervalTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PeriodicIntervalTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pit")]
		public uint? PeriodicIntervalTime
		{
			get
			{
				return this.PeriodicIntervalTimeValueSpecified ? this.PeriodicIntervalTimeValue : default(uint?);
			}
			set
			{
				this.PeriodicIntervalTimeValue = value.GetValueOrDefault();
				this.PeriodicIntervalTimeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sti", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.StationaryIndication StationaryIndicationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StationaryIndication-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StationaryIndication property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StationaryIndicationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sti")]
		public Aetheros.OneM2M.Binding.StationaryIndication? StationaryIndication
		{
			get
			{
				return this.StationaryIndicationValueSpecified ? this.StationaryIndicationValue : default(Aetheros.OneM2M.Binding.StationaryIndication?);
			}
			set
			{
				this.StationaryIndicationValue = value.GetValueOrDefault();
				this.StationaryIndicationValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dsi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DataSizeIndicatorValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataSizeIndicator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DataSizeIndicator property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DataSizeIndicatorValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dsi")]
		public long? DataSizeIndicator
		{
			get
			{
				return this.DataSizeIndicatorValueSpecified ? this.DataSizeIndicatorValue : default(long?);
			}
			set
			{
				this.DataSizeIndicatorValue = value.GetValueOrDefault();
				this.DataSizeIndicatorValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("vdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset ValidityTimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ValidityTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ValidityTime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ValidityTimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("vdt")]
		public System.DateTimeOffset? ValidityTime
		{
			get
			{
				return this.ValidityTimeValueSpecified ? this.ValidityTimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.ValidityTimeValue = value.GetValueOrDefault();
				this.ValidityTimeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ttn")]
		[XmlElementAttribute("ttn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> TargetNetwork { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TargetNetwork-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TargetNetwork collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TargetNetworkSpecified => (this.TargetNetwork.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("schA")]
		[XmlElementAttribute("schA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ScheduleAnnc> ScheduleAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ScheduleAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScheduleAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ScheduleAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleAnncSpecified => (this.ScheduleAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ae", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ae")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("AE", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AE : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("apn")]
		[XmlElementAttribute("apn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string AppName { get; set; }

		[JsonPropertyAttribute("api")]
		[XmlElementAttribute("api", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string App_ID { get; set; }

		[JsonPropertyAttribute("aei")]
		[XmlElementAttribute("aei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string AE_ID { get; set; }

		[JsonPropertyAttribute("poa")]
		[XmlElementAttribute("poa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> PointOfAccess { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointOfAccess-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PointOfAccess collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PointOfAccessSpecified => (this.PointOfAccess.Count != 0);

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("nl")]
		[XmlElementAttribute("nl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NodeLink { get; set; }

		[JsonPropertyAttribute("rr")]
		[XmlElementAttribute("rr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestReachability { get; set; }

		[JsonPropertyAttribute("csz")]
		[XmlElementAttribute("csz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PermittedMediaTypes> ContentSerialization { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PermittedMediaTypes>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentSerialization-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentSerialization collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentSerializationSpecified => (this.ContentSerialization.Count != 0);

		[JsonPropertyAttribute("esi")]
		[XmlElementAttribute("esi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.E2ESecInfo E2ESecInfo { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("grp")]
		[XmlElementAttribute("grp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Group> Group { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Group>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Group-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupSpecified => (this.Group.Count != 0);

		[JsonPropertyAttribute("acp")]
		[XmlElementAttribute("acp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicy> AccessControlPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicySpecified => (this.AccessControlPolicy.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("pch")]
		[XmlElementAttribute("pch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PollingChannel> PollingChannel { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PollingChannel>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PollingChannel-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PollingChannel collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PollingChannelSpecified => (this.PollingChannel.Count != 0);

		[JsonPropertyAttribute("sch")]
		[XmlElementAttribute("sch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Schedule> Schedule { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Schedule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Schedule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Schedule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleSpecified => (this.Schedule.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("ts")]
		[XmlElementAttribute("ts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeries> TimeSeries { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeries>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeries-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeries collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesSpecified => (this.TimeSeries.Count != 0);

		[JsonPropertyAttribute("trpt")]
		[XmlElementAttribute("trpt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TrafficPattern> TrafficPattern { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TrafficPattern>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrafficPattern-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TrafficPattern collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TrafficPatternSpecified => (this.TrafficPattern.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("aeA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("aeA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("AEAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AEAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[JsonPropertyAttribute("apn")]
		[XmlElementAttribute("apn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string AppName { get; set; }

		[JsonPropertyAttribute("api")]
		[XmlElementAttribute("api", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string App_ID { get; set; }

		[JsonPropertyAttribute("aei")]
		[XmlElementAttribute("aei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string AE_ID { get; set; }

		[JsonPropertyAttribute("poa")]
		[XmlElementAttribute("poa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> PointOfAccess { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointOfAccess-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PointOfAccess collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PointOfAccessSpecified => (this.PointOfAccess.Count != 0);

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string OntologyRef { get; set; }

		[JsonPropertyAttribute("nl")]
		[XmlElementAttribute("nl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NodeLink { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestReachabilityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestReachability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RequestReachability property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestReachabilityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rr")]
		public bool? RequestReachability
		{
			get
			{
				return this.RequestReachabilityValueSpecified ? this.RequestReachabilityValue : default(bool?);
			}
			set
			{
				this.RequestReachabilityValue = value.GetValueOrDefault();
				this.RequestReachabilityValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("csz")]
		[XmlElementAttribute("csz", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PermittedMediaTypes> ContentSerialization { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PermittedMediaTypes>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContentSerialization-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContentSerialization collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContentSerializationSpecified => (this.ContentSerialization.Count != 0);

		[JsonPropertyAttribute("esi")]
		[XmlElementAttribute("esi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.E2ESecInfo E2ESecInfo { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("cntA")]
		[XmlElementAttribute("cntA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContainerAnnc> ContainerAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContainerAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerAnncSpecified => (this.ContainerAnnc.Count != 0);

		[JsonPropertyAttribute("grp")]
		[XmlElementAttribute("grp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Group> Group { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Group>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Group-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupSpecified => (this.Group.Count != 0);

		[JsonPropertyAttribute("grpA")]
		[XmlElementAttribute("grpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.GroupAnnc> GroupAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.GroupAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GroupAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupAnncSpecified => (this.GroupAnnc.Count != 0);

		[JsonPropertyAttribute("acp")]
		[XmlElementAttribute("acp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicy> AccessControlPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicySpecified => (this.AccessControlPolicy.Count != 0);

		[JsonPropertyAttribute("acpA")]
		[XmlElementAttribute("acpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc> AccessControlPolicyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyAnncSpecified => (this.AccessControlPolicyAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("schA")]
		[XmlElementAttribute("schA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ScheduleAnnc> ScheduleAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ScheduleAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScheduleAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ScheduleAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleAnncSpecified => (this.ScheduleAnnc.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("ts")]
		[XmlElementAttribute("ts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeries> TimeSeries { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeries>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeries-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeries collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesSpecified => (this.TimeSeries.Count != 0);

		[JsonPropertyAttribute("tsa")]
		[XmlElementAttribute("tsa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesAnnc> TimeSeriesAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesAnncSpecified => (this.TimeSeriesAnnc.Count != 0);

		[JsonPropertyAttribute("trptA")]
		[XmlElementAttribute("trptA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TrafficPatternAnnc> TrafficPatternAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TrafficPatternAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrafficPatternAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TrafficPatternAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TrafficPatternAnncSpecified => (this.TrafficPatternAnnc.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);

		[JsonPropertyAttribute("sg_announcedFlexContainerResource")]
		[XmlElementAttribute("sg_announcedFlexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource> Sg_AnnouncedFlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_AnnouncedFlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_AnnouncedFlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_AnnouncedFlexContainerResourceSpecified => (this.Sg_AnnouncedFlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajmc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajmc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynMethodCall", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynMethodCall : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("inp")]
		[XmlElementAttribute("inp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Input { get; set; }

		[JsonPropertyAttribute("clst")]
		[XmlElementAttribute("clst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CallStatus { get; set; }

		[JsonPropertyAttribute("out")]
		[XmlElementAttribute("out", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Output { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajmca", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajmca")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynMethodCallAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynMethodCallAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajmd", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajmd")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynMethod", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynMethod : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajmc")]
		[XmlElementAttribute("ajmc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethodCall> AllJoynMethodCall { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethodCall>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethodCall-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethodCall collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodCallSpecified => (this.AllJoynMethodCall.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajmda", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajmda")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynMethodAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynMethodAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajmc")]
		[XmlElementAttribute("ajmc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethodCall> AllJoynMethodCall { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethodCall>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethodCall-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethodCall collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodCallSpecified => (this.AllJoynMethodCall.Count != 0);

		[JsonPropertyAttribute("ajmca")]
		[XmlElementAttribute("ajmca", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethodCallAnnc> AllJoynMethodCallAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethodCallAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethodCallAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethodCallAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodCallAnncSpecified => (this.AllJoynMethodCallAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajpr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajpr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynProperty", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynProperty : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("crv")]
		[XmlElementAttribute("crv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CurrentValue { get; set; }

		[JsonPropertyAttribute("rqv")]
		[XmlElementAttribute("rqv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string RequestedValue { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajpra", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajpra")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynPropertyAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynPropertyAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajif", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajif")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynInterface", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynInterface : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("ajir")]
		[XmlElementAttribute("ajir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string InterfaceIntrospectXmlRef { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajmd")]
		[XmlElementAttribute("ajmd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethod> AllJoynMethod { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethod>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethod-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethod collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodSpecified => (this.AllJoynMethod.Count != 0);

		[JsonPropertyAttribute("ajpr")]
		[XmlElementAttribute("ajpr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynProperty> AllJoynProperty { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynProperty>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynPropertySpecified => (this.AllJoynProperty.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajifa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajifa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynInterfaceAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynInterfaceAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ajir")]
		[XmlElementAttribute("ajir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string InterfaceIntrospectXmlRef { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajmd")]
		[XmlElementAttribute("ajmd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethod> AllJoynMethod { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethod>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethod-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethod collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodSpecified => (this.AllJoynMethod.Count != 0);

		[JsonPropertyAttribute("ajmda")]
		[XmlElementAttribute("ajmda", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynMethodAnnc> AllJoynMethodAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynMethodAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynMethodAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynMethodAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynMethodAnncSpecified => (this.AllJoynMethodAnnc.Count != 0);

		[JsonPropertyAttribute("ajpr")]
		[XmlElementAttribute("ajpr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynProperty> AllJoynProperty { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynProperty>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynPropertySpecified => (this.AllJoynProperty.Count != 0);

		[JsonPropertyAttribute("ajpra")]
		[XmlElementAttribute("ajpra", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynPropertyAnnc> AllJoynPropertyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynPropertyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynPropertyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynPropertyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynPropertyAnncSpecified => (this.AllJoynPropertyAnnc.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("cntA")]
		[XmlElementAttribute("cntA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContainerAnnc> ContainerAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContainerAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerAnncSpecified => (this.ContainerAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajso", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajso")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynSvcObject", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynSvcObject : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("ajop")]
		[XmlElementAttribute("ajop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ObjectPath { get; set; }

		[JsonPropertyAttribute("ena")]
		[XmlElementAttribute("ena", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool Enable { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajif")]
		[XmlElementAttribute("ajif", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynInterface> AllJoynInterface { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynInterface>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynInterface-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynInterface collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynInterfaceSpecified => (this.AllJoynInterface.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajsoa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajsoa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynSvcObjectAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynSvcObjectAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ajop")]
		[XmlElementAttribute("ajop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ObjectPath { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ena", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool EnableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Enable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EnableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ena")]
		public bool? Enable
		{
			get
			{
				return this.EnableValueSpecified ? this.EnableValue : default(bool?);
			}
			set
			{
				this.EnableValue = value.GetValueOrDefault();
				this.EnableValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajif")]
		[XmlElementAttribute("ajif", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynInterface> AllJoynInterface { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynInterface>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynInterface-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynInterface collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynInterfaceSpecified => (this.AllJoynInterface.Count != 0);

		[JsonPropertyAttribute("ajifa")]
		[XmlElementAttribute("ajifa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynInterfaceAnnc> AllJoynInterfaceAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynInterfaceAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynInterfaceAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynInterfaceAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynInterfaceAnncSpecified => (this.AllJoynInterfaceAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajap", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajap")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynApp", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynApp : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AllJoynDirection DirectionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Direction-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Direction property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DirectionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dir")]
		public Aetheros.OneM2M.Binding.AllJoynDirection? Direction
		{
			get
			{
				return this.DirectionValueSpecified ? this.DirectionValue : default(Aetheros.OneM2M.Binding.AllJoynDirection?);
			}
			set
			{
				this.DirectionValue = value.GetValueOrDefault();
				this.DirectionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajso")]
		[XmlElementAttribute("ajso", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynSvcObject> AllJoynSvcObject { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynSvcObject>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynSvcObject-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynSvcObject collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynSvcObjectSpecified => (this.AllJoynSvcObject.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajapa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajapa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("allJoynAppAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AllJoynAppAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dir", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.AllJoynDirection DirectionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Direction-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Direction property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DirectionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dir")]
		public Aetheros.OneM2M.Binding.AllJoynDirection? Direction
		{
			get
			{
				return this.DirectionValueSpecified ? this.DirectionValue : default(Aetheros.OneM2M.Binding.AllJoynDirection?);
			}
			set
			{
				this.DirectionValue = value.GetValueOrDefault();
				this.DirectionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajso")]
		[XmlElementAttribute("ajso", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynSvcObject> AllJoynSvcObject { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynSvcObject>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynSvcObject-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynSvcObject collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynSvcObjectSpecified => (this.AllJoynSvcObject.Count != 0);

		[JsonPropertyAttribute("ajsoa")]
		[XmlElementAttribute("ajsoa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynSvcObjectAnnc> AllJoynSvcObjectAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynSvcObjectAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynSvcObjectAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynSvcObjectAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynSvcObjectAnncSpecified => (this.AllJoynSvcObjectAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("andi", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("andi")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("areaNwkDeviceInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AreaNwkDeviceInfo : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("devID")]
		[XmlElementAttribute("devID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevID { get; set; }

		[JsonPropertyAttribute("dvt")]
		[XmlElementAttribute("dvt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevType { get; set; }

		[JsonPropertyAttribute("awi")]
		[XmlElementAttribute("awi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string AreaNwkId { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sli", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SleepIntervalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SleepInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SleepInterval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SleepIntervalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sli")]
		public long? SleepInterval
		{
			get
			{
				return this.SleepIntervalValueSpecified ? this.SleepIntervalValue : default(long?);
			}
			set
			{
				this.SleepIntervalValue = value.GetValueOrDefault();
				this.SleepIntervalValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sld", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SleepDurationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SleepDuration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SleepDuration property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SleepDurationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sld")]
		public long? SleepDuration
		{
			get
			{
				return this.SleepDurationValueSpecified ? this.SleepDurationValue : default(long?);
			}
			set
			{
				this.SleepDurationValue = value.GetValueOrDefault();
				this.SleepDurationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ss")]
		[XmlElementAttribute("ss", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevStatus { get; set; }

		[JsonPropertyAttribute("lnh")]
		[XmlElementAttribute("lnh", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ListOfNeighbors { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("andiA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("andiA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("areaNwkDeviceInfoAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AreaNwkDeviceInfoAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("devID")]
		[XmlElementAttribute("devID", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevID { get; set; }

		[JsonPropertyAttribute("dvt")]
		[XmlElementAttribute("dvt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevType { get; set; }

		[JsonPropertyAttribute("awi")]
		[XmlElementAttribute("awi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string AreaNwkId { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sli", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SleepIntervalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SleepInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SleepInterval property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SleepIntervalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sli")]
		public long? SleepInterval
		{
			get
			{
				return this.SleepIntervalValueSpecified ? this.SleepIntervalValue : default(long?);
			}
			set
			{
				this.SleepIntervalValue = value.GetValueOrDefault();
				this.SleepIntervalValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sld", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SleepDurationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SleepDuration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the SleepDuration property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SleepDurationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sld")]
		public long? SleepDuration
		{
			get
			{
				return this.SleepDurationValueSpecified ? this.SleepDurationValue : default(long?);
			}
			set
			{
				this.SleepDurationValue = value.GetValueOrDefault();
				this.SleepDurationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ss")]
		[XmlElementAttribute("ss", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DevStatus { get; set; }

		[JsonPropertyAttribute("lnh")]
		[XmlElementAttribute("lnh", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ListOfNeighbors { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ListOfNeighbors-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ListOfNeighbors collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ListOfNeighborsSpecified => (this.ListOfNeighbors.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ani", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ani")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("areaNwkInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AreaNwkInfo : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("ant")]
		[XmlElementAttribute("ant", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string AreaNwkType { get; set; }

		[JsonPropertyAttribute("ldv")]
		[XmlElementAttribute("ldv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ListOfDevices { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("aniA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("aniA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("areaNwkInfoAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class AreaNwkInfoAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("ant")]
		[XmlElementAttribute("ant", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string AreaNwkType { get; set; }

		[JsonPropertyAttribute("ldv")]
		[XmlElementAttribute("ldv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ListOfDevices { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ListOfDevices-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ListOfDevices collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ListOfDevicesSpecified => (this.ListOfDevices.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("bat", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("bat")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("battery", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Battery : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("btl")]
		[XmlElementAttribute("btl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint BatteryLevel { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("bts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.BatteryStatus BatteryStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BatteryStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the BatteryStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BatteryStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("bts")]
		public Aetheros.OneM2M.Binding.BatteryStatus? BatteryStatus
		{
			get
			{
				return this.BatteryStatusValueSpecified ? this.BatteryStatusValue : default(Aetheros.OneM2M.Binding.BatteryStatus?);
			}
			set
			{
				this.BatteryStatusValue = value.GetValueOrDefault();
				this.BatteryStatusValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("batA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("batA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("batteryAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class BatteryAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("btl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint BatteryLevelValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BatteryLevel-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the BatteryLevel property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BatteryLevelValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("btl")]
		public uint? BatteryLevel
		{
			get
			{
				return this.BatteryLevelValueSpecified ? this.BatteryLevelValue : default(uint?);
			}
			set
			{
				this.BatteryLevelValue = value.GetValueOrDefault();
				this.BatteryLevelValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("bts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.BatteryStatus BatteryStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BatteryStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the BatteryStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BatteryStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("bts")]
		public Aetheros.OneM2M.Binding.BatteryStatus? BatteryStatus
		{
			get
			{
				return this.BatteryStatusValueSpecified ? this.BatteryStatusValue : default(Aetheros.OneM2M.Binding.BatteryStatus?);
			}
			set
			{
				this.BatteryStatusValue = value.GetValueOrDefault();
				this.BatteryStatusValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmbf", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmbf")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhBuffer", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhBuffer : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("aec")]
		[XmlElementAttribute("aec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<string> ApplicableEventCategory { get; set; }

		[JsonPropertyAttribute("mbfs")]
		[XmlElementAttribute("mbfs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxBufferSize { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Maximum exclusive value: 11.</para>
		/// </summary>
		[JsonPropertyAttribute("sgp")]
		[XmlElementAttribute("sgp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StoragePriority { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmdf", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmdf")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhDefaults", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhDefaults : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("cmlk")]
		[XmlElementAttribute("cmlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.MgmtLinkRef> MgmtLink { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmdv", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmdv")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhDefEcValue", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhDefEcValue : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("od")]
		[XmlElementAttribute("od", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Order { get; set; }

		[JsonPropertyAttribute("dev")]
		[XmlElementAttribute("dev", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string DefEcValue { get; set; }

		[JsonPropertyAttribute("ror")]
		[XmlElementAttribute("ror", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> RequestOrigin { get; set; }

		[JsonPropertyAttribute("rct")]
		[XmlElementAttribute("rct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object RequestContext { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rctn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestContextNotificationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestContextNotification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RequestContextNotification property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestContextNotificationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rctn")]
		public bool? RequestContextNotification
		{
			get
			{
				return this.RequestContextNotificationValueSpecified ? this.RequestContextNotificationValue : default(bool?);
			}
			set
			{
				this.RequestContextNotificationValue = value.GetValueOrDefault();
				this.RequestContextNotificationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rch")]
		[XmlElementAttribute("rch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object RequestCharacteristics { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmpv", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmpv")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhEcDefParamValues", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhEcDefParamValues : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("aec")]
		[XmlElementAttribute("aec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<string> ApplicableEventCategory { get; set; }

		[JsonPropertyAttribute("dqet")]
		[XmlElementAttribute("dqet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long DefaultRequestExpTime { get; set; }

		[JsonPropertyAttribute("dset")]
		[XmlElementAttribute("dset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long DefaultResultExpTime { get; set; }

		[JsonPropertyAttribute("doet")]
		[XmlElementAttribute("doet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long DefaultOpExecTime { get; set; }

		[JsonPropertyAttribute("drp")]
		[XmlElementAttribute("drp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long DefaultRespPersistence { get; set; }

		[JsonPropertyAttribute("dda")]
		[XmlElementAttribute("dda", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DefaultDelAggregation { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cml", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cml")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhLimits", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhLimits : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("od")]
		[XmlElementAttribute("od", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Order { get; set; }

		[JsonPropertyAttribute("ror")]
		[XmlElementAttribute("ror", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> RequestOrigin { get; set; }

		[JsonPropertyAttribute("rct")]
		[XmlElementAttribute("rct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object RequestContext { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rctn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestContextNotificationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestContextNotification-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RequestContextNotification property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestContextNotificationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rctn")]
		public bool? RequestContextNotification
		{
			get
			{
				return this.RequestContextNotificationValueSpecified ? this.RequestContextNotificationValue : default(bool?);
			}
			set
			{
				this.RequestContextNotificationValue = value.GetValueOrDefault();
				this.RequestContextNotificationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rch")]
		[XmlElementAttribute("rch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object RequestCharacteristics { get; set; }

		[JsonPropertyAttribute("lec")]
		[XmlElementAttribute("lec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<string> LimitsEventCategory { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: -1.</para>
		/// </summary>
		[JsonPropertyAttribute("lqet")]
		[XmlElementAttribute("lqet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public ICollection<long> LimitsRequestExpTime { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: -1.</para>
		/// </summary>
		[JsonPropertyAttribute("lset")]
		[XmlElementAttribute("lset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public ICollection<long> LimitsResultExpTime { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: -1.</para>
		/// </summary>
		[JsonPropertyAttribute("loet")]
		[XmlElementAttribute("loet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public ICollection<long> LimitsOpExecTime { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: -1.</para>
		/// </summary>
		[JsonPropertyAttribute("lrp")]
		[XmlElementAttribute("lrp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public ICollection<long> LimitsRespPersistence { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lda", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public CmdhLimitsLimitsDelAggregation LimitsDelAggregationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LimitsDelAggregation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LimitsDelAggregation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LimitsDelAggregationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lda")]
		public CmdhLimitsLimitsDelAggregation? LimitsDelAggregation
		{
			get
			{
				return this.LimitsDelAggregationValueSpecified ? this.LimitsDelAggregationValue : default(CmdhLimitsLimitsDelAggregation?);
			}
			set
			{
				this.LimitsDelAggregationValue = value.GetValueOrDefault();
				this.LimitsDelAggregationValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("CmdhLimitsLimitsDelAggregation", Namespace="http://www.onem2m.org/xml/protocols")]
	public enum CmdhLimitsLimitsDelAggregation
	{
		[XmlEnumAttribute("0")]
		False = 0,

		[XmlEnumAttribute("1")]
		True = 1,

		[XmlEnumAttribute("0 1")]
		TrueAndFalse,
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmnr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmnr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhNetworkAccessRules", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhNetworkAccessRules : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("aecs")]
		[XmlElementAttribute("aecs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<string> ApplicableEventCategories { get; set; }

		[JsonPropertyAttribute("cmlk")]
		[XmlElementAttribute("cmlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.MgmtLinkRef> MgmtLink { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.MgmtLinkRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MgmtLink-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the MgmtLink collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MgmtLinkSpecified => (this.MgmtLink.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmwr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmwr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhNwAccessRule", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhNwAccessRule : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("ttn")]
		[XmlElementAttribute("ttn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> TargetNetwork { get; set; }

		[JsonPropertyAttribute("mrv")]
		[XmlElementAttribute("mrv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MinReqVolume { get; set; }

		[JsonPropertyAttribute("swt")]
		[XmlElementAttribute("swt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SpreadingWaitTime { get; set; }

		[JsonPropertyAttribute("bop")]
		[JsonConverter(typeof(JsonArrayItem<BackOffParametersBackOffParametersSet>), "bops")]
		[XmlArrayAttribute("bop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("bops", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.BackOffParametersBackOffParametersSet> BackOffParameters { get; set; }

		[JsonPropertyAttribute("ohc")]
		[XmlElementAttribute("ohc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public object OtherConditions { get; set; }

		[JsonPropertyAttribute("cmlk")]
		[XmlElementAttribute("cmlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MgmtLinkRef MgmtLink { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cmp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cmp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("cmdhPolicy", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CmdhPolicy : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("cpn")]
		[XmlElementAttribute("cpn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CmdhPolicyName { get; set; }

		[JsonPropertyAttribute("cmlk")]
		[XmlElementAttribute("cmlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.MgmtLinkRef> MgmtLink { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mem", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mem")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("memory", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Memory : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("mma")]
		[XmlElementAttribute("mma", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedLong")]
		public ulong MemAvailable { get; set; }

		[JsonPropertyAttribute("mmt")]
		[XmlElementAttribute("mmt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedLong")]
		public ulong MemTotal { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("memA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("memA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("memoryAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class MemoryAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mma", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedLong")]
		public ulong MemAvailableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemAvailable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MemAvailable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemAvailableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mma")]
		public ulong? MemAvailable
		{
			get
			{
				return this.MemAvailableValueSpecified ? this.MemAvailableValue : default(ulong?);
			}
			set
			{
				this.MemAvailableValue = value.GetValueOrDefault();
				this.MemAvailableValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mmt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedLong")]
		public ulong MemTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MemTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemTotalValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mmt")]
		public ulong? MemTotal
		{
			get
			{
				return this.MemTotalValueSpecified ? this.MemTotalValue : default(ulong?);
			}
			set
			{
				this.MemTotalValue = value.GetValueOrDefault();
				this.MemTotalValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("fwr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("fwr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("firmware", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Firmware : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("fwn")]
		[XmlElementAttribute("fwn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FirmwareName { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("ud")]
		[XmlElementAttribute("ud", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool Update { get; set; }

		[JsonPropertyAttribute("uds")]
		[XmlElementAttribute("uds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus UpdateStatus { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("fwrA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("fwrA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("firmwareAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class FirmwareAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("fwn")]
		[XmlElementAttribute("fwn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FirmwareName { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ud", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool UpdateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Update-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Update property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool UpdateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ud")]
		public bool? Update
		{
			get
			{
				return this.UpdateValueSpecified ? this.UpdateValue : default(bool?);
			}
			set
			{
				this.UpdateValue = value.GetValueOrDefault();
				this.UpdateValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("uds")]
		[XmlElementAttribute("uds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus UpdateStatus { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("swr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("swr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("software", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Software : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("swn")]
		[XmlElementAttribute("swn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SoftwareName { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[JsonPropertyAttribute("in")]
		[XmlElementAttribute("in", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool Install { get; set; }

		[JsonPropertyAttribute("un")]
		[XmlElementAttribute("un", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool Uninstall { get; set; }

		[JsonPropertyAttribute("ins")]
		[XmlElementAttribute("ins", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus InstallStatus { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("act", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ActivateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Activate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Activate property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("act")]
		public bool? Activate
		{
			get
			{
				return this.ActivateValueSpecified ? this.ActivateValue : default(bool?);
			}
			set
			{
				this.ActivateValue = value.GetValueOrDefault();
				this.ActivateValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DeactivateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Deactivate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Deactivate property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeactivateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dea")]
		public bool? Deactivate
		{
			get
			{
				return this.DeactivateValueSpecified ? this.DeactivateValue : default(bool?);
			}
			set
			{
				this.DeactivateValue = value.GetValueOrDefault();
				this.DeactivateValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("acts")]
		[XmlElementAttribute("acts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus ActiveStatus { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("swrA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("swrA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("softwareAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SoftwareAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("swn")]
		[XmlElementAttribute("swn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SoftwareName { get; set; }

		[JsonPropertyAttribute("url")]
		[XmlElementAttribute("url", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string URL { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("in", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool InstallValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Install-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Install property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InstallValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("in")]
		public bool? Install
		{
			get
			{
				return this.InstallValueSpecified ? this.InstallValue : default(bool?);
			}
			set
			{
				this.InstallValue = value.GetValueOrDefault();
				this.InstallValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("un", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool UninstallValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Uninstall-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Uninstall property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool UninstallValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("un")]
		public bool? Uninstall
		{
			get
			{
				return this.UninstallValueSpecified ? this.UninstallValue : default(bool?);
			}
			set
			{
				this.UninstallValue = value.GetValueOrDefault();
				this.UninstallValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ins")]
		[XmlElementAttribute("ins", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus InstallStatus { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("act", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ActivateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Activate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Activate property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("act")]
		public bool? Activate
		{
			get
			{
				return this.ActivateValueSpecified ? this.ActivateValue : default(bool?);
			}
			set
			{
				this.ActivateValue = value.GetValueOrDefault();
				this.ActivateValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dea", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DeactivateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Deactivate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Deactivate property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeactivateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dea")]
		public bool? Deactivate
		{
			get
			{
				return this.DeactivateValueSpecified ? this.DeactivateValue : default(bool?);
			}
			set
			{
				this.DeactivateValue = value.GetValueOrDefault();
				this.DeactivateValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("acts")]
		[XmlElementAttribute("acts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus ActiveStatus { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dvi", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dvi")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("deviceInfo", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class DeviceInfo : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("dlb")]
		[XmlElementAttribute("dlb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DeviceLabel { get; set; }

		[JsonPropertyAttribute("man")]
		[XmlElementAttribute("man", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Manufacturer { get; set; }

		[JsonPropertyAttribute("mod")]
		[XmlElementAttribute("mod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Model { get; set; }

		[JsonPropertyAttribute("dty")]
		[XmlElementAttribute("dty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DeviceType { get; set; }

		[JsonPropertyAttribute("fwv")]
		[XmlElementAttribute("fwv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FwVersion { get; set; }

		[JsonPropertyAttribute("swv")]
		[XmlElementAttribute("swv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SwVersion { get; set; }

		[JsonPropertyAttribute("hwv")]
		[XmlElementAttribute("hwv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string HwVersion { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dviA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dviA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("deviceInfoAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class DeviceInfoAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("dlb")]
		[XmlElementAttribute("dlb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DeviceLabel { get; set; }

		[JsonPropertyAttribute("man")]
		[XmlElementAttribute("man", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Manufacturer { get; set; }

		[JsonPropertyAttribute("mod")]
		[XmlElementAttribute("mod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Model { get; set; }

		[JsonPropertyAttribute("dty")]
		[XmlElementAttribute("dty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DeviceType { get; set; }

		[JsonPropertyAttribute("fwv")]
		[XmlElementAttribute("fwv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FwVersion { get; set; }

		[JsonPropertyAttribute("swv")]
		[XmlElementAttribute("swv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SwVersion { get; set; }

		[JsonPropertyAttribute("hwv")]
		[XmlElementAttribute("hwv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string HwVersion { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dvc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dvc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("deviceCapability", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class DeviceCapability : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("can")]
		[XmlElementAttribute("can", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CapabilityName { get; set; }

		[JsonPropertyAttribute("att")]
		[XmlElementAttribute("att", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool Attached { get; set; }

		[JsonPropertyAttribute("cas")]
		[XmlElementAttribute("cas", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus CapabilityActionStatus { get; set; }

		[JsonPropertyAttribute("cus")]
		[XmlElementAttribute("cus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool CurrentState { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ena", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool EnableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Enable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EnableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ena")]
		public bool? Enable
		{
			get
			{
				return this.EnableValueSpecified ? this.EnableValue : default(bool?);
			}
			set
			{
				this.EnableValue = value.GetValueOrDefault();
				this.EnableValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DisableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Disable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Disable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DisableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dis")]
		public bool? Disable
		{
			get
			{
				return this.DisableValueSpecified ? this.DisableValue : default(bool?);
			}
			set
			{
				this.DisableValue = value.GetValueOrDefault();
				this.DisableValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dvcA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dvcA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("deviceCapabilityAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class DeviceCapabilityAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[JsonPropertyAttribute("can")]
		[XmlElementAttribute("can", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CapabilityName { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("att", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool AttachedValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Attached-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Attached property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AttachedValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("att")]
		public bool? Attached
		{
			get
			{
				return this.AttachedValueSpecified ? this.AttachedValue : default(bool?);
			}
			set
			{
				this.AttachedValue = value.GetValueOrDefault();
				this.AttachedValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("cas")]
		[XmlElementAttribute("cas", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ActionStatus CapabilityActionStatus { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cus", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool CurrentStateValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentState-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentState property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentStateValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cus")]
		public bool? CurrentState
		{
			get
			{
				return this.CurrentStateValueSpecified ? this.CurrentStateValue : default(bool?);
			}
			set
			{
				this.CurrentStateValue = value.GetValueOrDefault();
				this.CurrentStateValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ena", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool EnableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Enable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Enable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EnableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ena")]
		public bool? Enable
		{
			get
			{
				return this.EnableValueSpecified ? this.EnableValue : default(bool?);
			}
			set
			{
				this.EnableValue = value.GetValueOrDefault();
				this.EnableValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DisableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Disable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Disable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DisableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dis")]
		public bool? Disable
		{
			get
			{
				return this.DisableValueSpecified ? this.DisableValue : default(bool?);
			}
			set
			{
				this.DisableValue = value.GetValueOrDefault();
				this.DisableValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rbo", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rbo")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("reboot", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Reboot : Aetheros.OneM2M.Binding.MgmtResource
	{
		[JsonPropertyAttribute("rbo")]
		[XmlElementAttribute("rbo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RebootProperty { get; set; }

		[JsonPropertyAttribute("far")]
		[XmlElementAttribute("far", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool FactoryReset { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rboA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rboA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("rebootAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class RebootAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rbo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RebootValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reboot-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Reboot property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RebootValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rbo")]
		public bool? Reboot
		{
			get
			{
				return this.RebootValueSpecified ? this.RebootValue : default(bool?);
			}
			set
			{
				this.RebootValue = value.GetValueOrDefault();
				this.RebootValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("far", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool FactoryResetValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FactoryReset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the FactoryReset property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FactoryResetValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("far")]
		public bool? FactoryReset
		{
			get
			{
				return this.FactoryResetValueSpecified ? this.FactoryResetValue : default(bool?);
			}
			set
			{
				this.FactoryResetValue = value.GetValueOrDefault();
				this.FactoryResetValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("evl", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("evl")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("eventLog", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class EventLog : Aetheros.OneM2M.Binding.MgmtResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lgt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogTypeId LogTypeIdValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogTypeId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogTypeId property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogTypeIdValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lgt")]
		public Aetheros.OneM2M.Binding.LogTypeId? LogTypeId
		{
			get
			{
				return this.LogTypeIdValueSpecified ? this.LogTypeIdValue : default(Aetheros.OneM2M.Binding.LogTypeId?);
			}
			set
			{
				this.LogTypeIdValue = value.GetValueOrDefault();
				this.LogTypeIdValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lgd")]
		[XmlElementAttribute("lgd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LogData { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lgst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogStatus LogStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lgst")]
		public Aetheros.OneM2M.Binding.LogStatus? LogStatus
		{
			get
			{
				return this.LogStatusValueSpecified ? this.LogStatusValue : default(Aetheros.OneM2M.Binding.LogStatus?);
			}
			set
			{
				this.LogStatusValue = value.GetValueOrDefault();
				this.LogStatusValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lga")]
		[XmlElementAttribute("lga", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool LogStart { get; set; }

		[JsonPropertyAttribute("lgo")]
		[XmlElementAttribute("lgo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool LogStop { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("evlA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("evlA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("eventLogAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class EventLogAnnc : Aetheros.OneM2M.Binding.AnnouncedMgmtResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lgt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogTypeId LogTypeIdValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogTypeId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogTypeId property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogTypeIdValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lgt")]
		public Aetheros.OneM2M.Binding.LogTypeId? LogTypeId
		{
			get
			{
				return this.LogTypeIdValueSpecified ? this.LogTypeIdValue : default(Aetheros.OneM2M.Binding.LogTypeId?);
			}
			set
			{
				this.LogTypeIdValue = value.GetValueOrDefault();
				this.LogTypeIdValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lgd")]
		[XmlElementAttribute("lgd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LogData { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lgst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogStatus LogStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lgst")]
		public Aetheros.OneM2M.Binding.LogStatus? LogStatus
		{
			get
			{
				return this.LogStatusValueSpecified ? this.LogStatusValue : default(Aetheros.OneM2M.Binding.LogStatus?);
			}
			set
			{
				this.LogStatusValue = value.GetValueOrDefault();
				this.LogStatusValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lga", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool LogStartValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogStart-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogStart property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogStartValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lga")]
		public bool? LogStart
		{
			get
			{
				return this.LogStartValueSpecified ? this.LogStartValue : default(bool?);
			}
			set
			{
				this.LogStartValue = value.GetValueOrDefault();
				this.LogStartValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lgo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool LogStopValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LogStop-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LogStop property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LogStopValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lgo")]
		public bool? LogStop
		{
			get
			{
				return this.LogStopValueSpecified ? this.LogStopValue : default(bool?);
			}
			set
			{
				this.LogStopValue = value.GetValueOrDefault();
				this.LogStopValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("nod", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("nod")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("node", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Node : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[JsonPropertyAttribute("ni")]
		[XmlElementAttribute("ni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string NodeID { get; set; }

		[JsonPropertyAttribute("hcl")]
		[XmlElementAttribute("hcl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string HostedCSELink { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("mem")]
		[XmlElementAttribute("mem", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Memory> Memory { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Memory>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Memory-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Memory collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemorySpecified => (this.Memory.Count != 0);

		[JsonPropertyAttribute("bat")]
		[XmlElementAttribute("bat", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Battery> Battery { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Battery>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Battery-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Battery collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BatterySpecified => (this.Battery.Count != 0);

		[JsonPropertyAttribute("ani")]
		[XmlElementAttribute("ani", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AreaNwkInfo> AreaNwkInfo { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AreaNwkInfo>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaNwkInfo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AreaNwkInfo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AreaNwkInfoSpecified => (this.AreaNwkInfo.Count != 0);

		[JsonPropertyAttribute("andi")]
		[XmlElementAttribute("andi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AreaNwkDeviceInfo> AreaNwkDeviceInfo { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AreaNwkDeviceInfo>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaNwkDeviceInfo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AreaNwkDeviceInfo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AreaNwkDeviceInfoSpecified => (this.AreaNwkDeviceInfo.Count != 0);

		[JsonPropertyAttribute("fwr")]
		[XmlElementAttribute("fwr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Firmware> Firmware { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Firmware>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Firmware-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Firmware collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FirmwareSpecified => (this.Firmware.Count != 0);

		[JsonPropertyAttribute("swr")]
		[XmlElementAttribute("swr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Software> Software { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Software>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Software-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Software collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SoftwareSpecified => (this.Software.Count != 0);

		[JsonPropertyAttribute("dvi")]
		[XmlElementAttribute("dvi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DeviceInfo> DeviceInfo { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DeviceInfo>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceInfo-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DeviceInfo collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeviceInfoSpecified => (this.DeviceInfo.Count != 0);

		[JsonPropertyAttribute("dvc")]
		[XmlElementAttribute("dvc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DeviceCapability> DeviceCapability { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DeviceCapability>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceCapability-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DeviceCapability collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeviceCapabilitySpecified => (this.DeviceCapability.Count != 0);

		[JsonPropertyAttribute("rbo")]
		[XmlElementAttribute("rbo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Reboot> Reboot { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Reboot>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Reboot-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Reboot collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RebootSpecified => (this.Reboot.Count != 0);

		[JsonPropertyAttribute("evl")]
		[XmlElementAttribute("evl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EventLog> EventLog { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.EventLog>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventLog-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the EventLog collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventLogSpecified => (this.EventLog.Count != 0);

		[JsonPropertyAttribute("cmp")]
		[XmlElementAttribute("cmp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.CmdhPolicy> CmdhPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.CmdhPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CmdhPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the CmdhPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CmdhPolicySpecified => (this.CmdhPolicy.Count != 0);

		[JsonPropertyAttribute("acmp")]
		[XmlElementAttribute("acmp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ActiveCmdhPolicy> ActiveCmdhPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ActiveCmdhPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveCmdhPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ActiveCmdhPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveCmdhPolicySpecified => (this.ActiveCmdhPolicy.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("trpt")]
		[XmlElementAttribute("trpt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TrafficPattern> TrafficPattern { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TrafficPattern>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrafficPattern-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TrafficPattern collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TrafficPatternSpecified => (this.TrafficPattern.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("nodA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("nodA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("nodeAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class NodeAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[JsonPropertyAttribute("ni")]
		[XmlElementAttribute("ni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string NodeID { get; set; }

		[JsonPropertyAttribute("hcl")]
		[XmlElementAttribute("hcl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string HostedCSELink { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("memA")]
		[XmlElementAttribute("memA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.MemoryAnnc> MemoryAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.MemoryAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MemoryAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the MemoryAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MemoryAnncSpecified => (this.MemoryAnnc.Count != 0);

		[JsonPropertyAttribute("batA")]
		[XmlElementAttribute("batA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.BatteryAnnc> BatteryAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.BatteryAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BatteryAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the BatteryAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BatteryAnncSpecified => (this.BatteryAnnc.Count != 0);

		[JsonPropertyAttribute("aniA")]
		[XmlElementAttribute("aniA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AreaNwkInfoAnnc> AreaNwkInfoAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AreaNwkInfoAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaNwkInfoAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AreaNwkInfoAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AreaNwkInfoAnncSpecified => (this.AreaNwkInfoAnnc.Count != 0);

		[JsonPropertyAttribute("andiA")]
		[XmlElementAttribute("andiA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AreaNwkDeviceInfoAnnc> AreaNwkDeviceInfoAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AreaNwkDeviceInfoAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AreaNwkDeviceInfoAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AreaNwkDeviceInfoAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AreaNwkDeviceInfoAnncSpecified => (this.AreaNwkDeviceInfoAnnc.Count != 0);

		[JsonPropertyAttribute("fwrA")]
		[XmlElementAttribute("fwrA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FirmwareAnnc> FirmwareAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FirmwareAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FirmwareAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the FirmwareAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FirmwareAnncSpecified => (this.FirmwareAnnc.Count != 0);

		[JsonPropertyAttribute("swrA")]
		[XmlElementAttribute("swrA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SoftwareAnnc> SoftwareAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SoftwareAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SoftwareAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SoftwareAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SoftwareAnncSpecified => (this.SoftwareAnnc.Count != 0);

		[JsonPropertyAttribute("dviA")]
		[XmlElementAttribute("dviA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DeviceInfoAnnc> DeviceInfoAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DeviceInfoAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceInfoAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DeviceInfoAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeviceInfoAnncSpecified => (this.DeviceInfoAnnc.Count != 0);

		[JsonPropertyAttribute("dvcA")]
		[XmlElementAttribute("dvcA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DeviceCapabilityAnnc> DeviceCapabilityAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DeviceCapabilityAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceCapabilityAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the DeviceCapabilityAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeviceCapabilityAnncSpecified => (this.DeviceCapabilityAnnc.Count != 0);

		[JsonPropertyAttribute("rboA")]
		[XmlElementAttribute("rboA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.RebootAnnc> RebootAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.RebootAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RebootAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RebootAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RebootAnncSpecified => (this.RebootAnnc.Count != 0);

		[JsonPropertyAttribute("evlA")]
		[XmlElementAttribute("evlA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EventLogAnnc> EventLogAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.EventLogAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventLogAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the EventLogAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventLogAnncSpecified => (this.EventLogAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("trptA")]
		[XmlElementAttribute("trptA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TrafficPatternAnnc> TrafficPatternAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TrafficPatternAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TrafficPatternAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TrafficPatternAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TrafficPatternAnncSpecified => (this.TrafficPatternAnnc.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lcp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("lcp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("locationPolicy", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class LocationPolicy : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("los", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LocationSource LocationSourceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationSource-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LocationSource property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationSourceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("los")]
		public Aetheros.OneM2M.Binding.LocationSource? LocationSource
		{
			get
			{
				return this.LocationSourceValueSpecified ? this.LocationSourceValue : default(Aetheros.OneM2M.Binding.LocationSource?);
			}
			set
			{
				this.LocationSourceValue = value.GetValueOrDefault();
				this.LocationSourceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lou", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public System.TimeSpan LocationUpdatePeriodValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationUpdatePeriod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LocationUpdatePeriod property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationUpdatePeriodValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lou")]
		public System.TimeSpan? LocationUpdatePeriod
		{
			get
			{
				return this.LocationUpdatePeriodValueSpecified ? this.LocationUpdatePeriodValue : default(System.TimeSpan?);
			}
			set
			{
				this.LocationUpdatePeriodValue = value.GetValueOrDefault();
				this.LocationUpdatePeriodValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lot")]
		[XmlElementAttribute("lot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string LocationTargetID { get; set; }

		[JsonPropertyAttribute("lor")]
		[XmlElementAttribute("lor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationServer { get; set; }

		[JsonPropertyAttribute("loi")]
		[XmlElementAttribute("loi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationContainerID { get; set; }

		[JsonPropertyAttribute("lon")]
		[XmlElementAttribute("lon", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LocationContainerName { get; set; }

		[JsonPropertyAttribute("lost")]
		[XmlElementAttribute("lost", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LocationStatus { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lcpA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("lcpA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("locationPolicyAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class LocationPolicyAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("los", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LocationSource LocationSourceValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationSource-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LocationSource property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationSourceValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("los")]
		public Aetheros.OneM2M.Binding.LocationSource? LocationSource
		{
			get
			{
				return this.LocationSourceValueSpecified ? this.LocationSourceValue : default(Aetheros.OneM2M.Binding.LocationSource?);
			}
			set
			{
				this.LocationSourceValue = value.GetValueOrDefault();
				this.LocationSourceValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lou", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public System.TimeSpan LocationUpdatePeriodValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationUpdatePeriod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LocationUpdatePeriod property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationUpdatePeriodValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lou")]
		public System.TimeSpan? LocationUpdatePeriod
		{
			get
			{
				return this.LocationUpdatePeriodValueSpecified ? this.LocationUpdatePeriodValue : default(System.TimeSpan?);
			}
			set
			{
				this.LocationUpdatePeriodValue = value.GetValueOrDefault();
				this.LocationUpdatePeriodValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("lot")]
		[XmlElementAttribute("lot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string LocationTargetID { get; set; }

		[JsonPropertyAttribute("lor")]
		[XmlElementAttribute("lor", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationServer { get; set; }

		[JsonPropertyAttribute("loi")]
		[XmlElementAttribute("loi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string LocationContainerID { get; set; }

		[JsonPropertyAttribute("lon")]
		[XmlElementAttribute("lon", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LocationContainerName { get; set; }

		[JsonPropertyAttribute("lost")]
		[XmlElementAttribute("lost", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string LocationStatus { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("csr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("csr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("remoteCSE", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class RemoteCSE : Aetheros.OneM2M.Binding.AnnounceableResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.CseTypeID CseTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CseType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CseType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CseTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cst")]
		public Aetheros.OneM2M.Binding.CseTypeID? CseType
		{
			get
			{
				return this.CseTypeValueSpecified ? this.CseTypeValue : default(Aetheros.OneM2M.Binding.CseTypeID?);
			}
			set
			{
				this.CseTypeValue = value.GetValueOrDefault();
				this.CseTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("poa")]
		[XmlElementAttribute("poa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> PointOfAccess { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointOfAccess-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PointOfAccess collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PointOfAccessSpecified => (this.PointOfAccess.Count != 0);

		[JsonPropertyAttribute("cb")]
		[XmlElementAttribute("cb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSEBase { get; set; }

		[JsonPropertyAttribute("csi")]
		[XmlElementAttribute("csi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSE_ID { get; set; }

		[JsonPropertyAttribute("mei")]
		[XmlElementAttribute("mei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string M2M_Ext_ID { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: 0.</para>
		/// <para xml:lang="en">Maximum inclusive value: 65535.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RangeAttribute(typeof(uint), "0", "65535")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("tri", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint Trigger_Recipient_IDValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Trigger_Recipient_ID-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Trigger_Recipient_ID property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Trigger_Recipient_IDValueSpecified { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Minimum inclusive value: 0.</para>
		/// <para xml:lang="en">Maximum inclusive value: 65535.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("tri")]
		public uint? Trigger_Recipient_ID
		{
			get
			{
				return this.Trigger_Recipient_IDValueSpecified ? this.Trigger_Recipient_IDValue : default(uint?);
			}
			set
			{
				this.Trigger_Recipient_IDValue = value.GetValueOrDefault();
				this.Trigger_Recipient_IDValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rr")]
		[XmlElementAttribute("rr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestReachability { get; set; }

		[JsonPropertyAttribute("nl")]
		[XmlElementAttribute("nl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NodeLink { get; set; }

		[JsonPropertyAttribute("esi")]
		[XmlElementAttribute("esi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.E2ESecInfo E2ESecInfo { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("trn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="unsignedInt")]
		public uint TriggerReferenceNumberValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TriggerReferenceNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the TriggerReferenceNumber property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TriggerReferenceNumberValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("trn")]
		public uint? TriggerReferenceNumber
		{
			get
			{
				return this.TriggerReferenceNumberValueSpecified ? this.TriggerReferenceNumberValue : default(uint?);
			}
			set
			{
				this.TriggerReferenceNumberValue = value.GetValueOrDefault();
				this.TriggerReferenceNumberValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("nodA")]
		[XmlElementAttribute("nodA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.NodeAnnc> NodeAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.NodeAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NodeAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NodeAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NodeAnncSpecified => (this.NodeAnnc.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("cntA")]
		[XmlElementAttribute("cntA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContainerAnnc> ContainerAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContainerAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerAnncSpecified => (this.ContainerAnnc.Count != 0);

		[JsonPropertyAttribute("grp")]
		[XmlElementAttribute("grp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Group> Group { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Group>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Group-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupSpecified => (this.Group.Count != 0);

		[JsonPropertyAttribute("grpA")]
		[XmlElementAttribute("grpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.GroupAnnc> GroupAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.GroupAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GroupAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupAnncSpecified => (this.GroupAnnc.Count != 0);

		[JsonPropertyAttribute("acp")]
		[XmlElementAttribute("acp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicy> AccessControlPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicySpecified => (this.AccessControlPolicy.Count != 0);

		[JsonPropertyAttribute("acpA")]
		[XmlElementAttribute("acpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc> AccessControlPolicyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyAnncSpecified => (this.AccessControlPolicyAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("pch")]
		[XmlElementAttribute("pch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PollingChannel> PollingChannel { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PollingChannel>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PollingChannel-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PollingChannel collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PollingChannelSpecified => (this.PollingChannel.Count != 0);

		[JsonPropertyAttribute("sch")]
		[XmlElementAttribute("sch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Schedule> Schedule { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Schedule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Schedule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Schedule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleSpecified => (this.Schedule.Count != 0);

		[JsonPropertyAttribute("ts")]
		[XmlElementAttribute("ts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeries> TimeSeries { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeries>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeries-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeries collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesSpecified => (this.TimeSeries.Count != 0);

		[JsonPropertyAttribute("tsa")]
		[XmlElementAttribute("tsa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesAnnc> TimeSeriesAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesAnncSpecified => (this.TimeSeriesAnnc.Count != 0);

		[JsonPropertyAttribute("lcpA")]
		[XmlElementAttribute("lcpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.LocationPolicyAnnc> LocationPolicyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.LocationPolicyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationPolicyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the LocationPolicyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationPolicyAnncSpecified => (this.LocationPolicyAnnc.Count != 0);

		[JsonPropertyAttribute("aeA")]
		[XmlElementAttribute("aeA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AEAnnc> AEAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AEAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AEAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AEAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AEAnncSpecified => (this.AEAnnc.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);

		[JsonPropertyAttribute("sg_announcedFlexContainerResource")]
		[XmlElementAttribute("sg_announcedFlexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource> Sg_AnnouncedFlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_AnnouncedFlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_AnnouncedFlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_AnnouncedFlexContainerResourceSpecified => (this.Sg_AnnouncedFlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("csrA", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("csrA")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("remoteCSEAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class RemoteCSEAnnc : Aetheros.OneM2M.Binding.AnnouncedResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.CseTypeID CseTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CseType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CseType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CseTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cst")]
		public Aetheros.OneM2M.Binding.CseTypeID? CseType
		{
			get
			{
				return this.CseTypeValueSpecified ? this.CseTypeValue : default(Aetheros.OneM2M.Binding.CseTypeID?);
			}
			set
			{
				this.CseTypeValue = value.GetValueOrDefault();
				this.CseTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("poa")]
		[XmlElementAttribute("poa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> PointOfAccess { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointOfAccess-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PointOfAccess collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PointOfAccessSpecified => (this.PointOfAccess.Count != 0);

		[JsonPropertyAttribute("cb")]
		[XmlElementAttribute("cb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSEBase { get; set; }

		[JsonPropertyAttribute("csi")]
		[XmlElementAttribute("csi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSE_ID { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool RequestReachabilityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestReachability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RequestReachability property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestReachabilityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rr")]
		public bool? RequestReachability
		{
			get
			{
				return this.RequestReachabilityValueSpecified ? this.RequestReachabilityValue : default(bool?);
			}
			set
			{
				this.RequestReachabilityValue = value.GetValueOrDefault();
				this.RequestReachabilityValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("nl")]
		[XmlElementAttribute("nl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NodeLink { get; set; }

		[JsonPropertyAttribute("esi")]
		[XmlElementAttribute("esi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.E2ESecInfo E2ESecInfo { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("nodA")]
		[XmlElementAttribute("nodA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.NodeAnnc> NodeAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.NodeAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NodeAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the NodeAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NodeAnncSpecified => (this.NodeAnnc.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("cntA")]
		[XmlElementAttribute("cntA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ContainerAnnc> ContainerAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ContainerAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ContainerAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ContainerAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerAnncSpecified => (this.ContainerAnnc.Count != 0);

		[JsonPropertyAttribute("grp")]
		[XmlElementAttribute("grp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Group> Group { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Group>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Group-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupSpecified => (this.Group.Count != 0);

		[JsonPropertyAttribute("grpA")]
		[XmlElementAttribute("grpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.GroupAnnc> GroupAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.GroupAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GroupAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GroupAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupAnncSpecified => (this.GroupAnnc.Count != 0);

		[JsonPropertyAttribute("acp")]
		[XmlElementAttribute("acp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicy> AccessControlPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicySpecified => (this.AccessControlPolicy.Count != 0);

		[JsonPropertyAttribute("acpA")]
		[XmlElementAttribute("acpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc> AccessControlPolicyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyAnncSpecified => (this.AccessControlPolicyAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("pch")]
		[XmlElementAttribute("pch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PollingChannel> PollingChannel { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PollingChannel>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PollingChannel-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PollingChannel collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PollingChannelSpecified => (this.PollingChannel.Count != 0);

		[JsonPropertyAttribute("schA")]
		[XmlElementAttribute("schA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ScheduleAnnc> ScheduleAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ScheduleAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ScheduleAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ScheduleAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleAnncSpecified => (this.ScheduleAnnc.Count != 0);

		[JsonPropertyAttribute("lcpA")]
		[XmlElementAttribute("lcpA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.LocationPolicyAnnc> LocationPolicyAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.LocationPolicyAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationPolicyAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the LocationPolicyAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationPolicyAnncSpecified => (this.LocationPolicyAnnc.Count != 0);

		[JsonPropertyAttribute("ts")]
		[XmlElementAttribute("ts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeries> TimeSeries { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeries>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeries-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeries collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesSpecified => (this.TimeSeries.Count != 0);

		[JsonPropertyAttribute("tsa")]
		[XmlElementAttribute("tsa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.TimeSeriesAnnc> TimeSeriesAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.TimeSeriesAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeSeriesAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the TimeSeriesAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TimeSeriesAnncSpecified => (this.TimeSeriesAnnc.Count != 0);

		[JsonPropertyAttribute("aeA")]
		[XmlElementAttribute("aeA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AEAnnc> AEAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AEAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AEAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AEAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AEAnncSpecified => (this.AEAnnc.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);

		[JsonPropertyAttribute("sg_announcedFlexContainerResource")]
		[XmlElementAttribute("sg_announcedFlexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource> Sg_AnnouncedFlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_AnnouncedFlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_AnnouncedFlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_AnnouncedFlexContainerResourceSpecified => (this.Sg_AnnouncedFlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("exin", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("exin")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("execInstance", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ExecInstance : Aetheros.OneM2M.Binding.RegularResource
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecStatusType ExecStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exs")]
		public Aetheros.OneM2M.Binding.ExecStatusType? ExecStatus
		{
			get
			{
				return this.ExecStatusValueSpecified ? this.ExecStatusValue : default(Aetheros.OneM2M.Binding.ExecStatusType?);
			}
			set
			{
				this.ExecStatusValue = value.GetValueOrDefault();
				this.ExecStatusValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecResultType ExecResultValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecResult-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecResult property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecResultValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exr")]
		public Aetheros.OneM2M.Binding.ExecResultType? ExecResult
		{
			get
			{
				return this.ExecResultValueSpecified ? this.ExecResultValue : default(Aetheros.OneM2M.Binding.ExecResultType?);
			}
			set
			{
				this.ExecResultValue = value.GetValueOrDefault();
				this.ExecResultValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ExecDisableValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecDisable-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecDisable property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecDisableValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exd")]
		public bool? ExecDisable
		{
			get
			{
				return this.ExecDisableValueSpecified ? this.ExecDisableValue : default(bool?);
			}
			set
			{
				this.ExecDisableValue = value.GetValueOrDefault();
				this.ExecDisableValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ext")]
		[XmlElementAttribute("ext", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string ExecTarget { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecModeType ExecModeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecMode property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecModeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exm")]
		public Aetheros.OneM2M.Binding.ExecModeType? ExecMode
		{
			get
			{
				return this.ExecModeValueSpecified ? this.ExecModeValue : default(Aetheros.OneM2M.Binding.ExecModeType?);
			}
			set
			{
				this.ExecModeValue = value.GetValueOrDefault();
				this.ExecModeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan ExecFrequencyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecFrequency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecFrequency property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecFrequencyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exf")]
		public System.TimeSpan? ExecFrequency
		{
			get
			{
				return this.ExecFrequencyValueSpecified ? this.ExecFrequencyValue : default(System.TimeSpan?);
			}
			set
			{
				this.ExecFrequencyValue = value.GetValueOrDefault();
				this.ExecFrequencyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan ExecDelayValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecDelay-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecDelay property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecDelayValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exy")]
		public System.TimeSpan? ExecDelay
		{
			get
			{
				return this.ExecDelayValueSpecified ? this.ExecDelayValue : default(System.TimeSpan?);
			}
			set
			{
				this.ExecDelayValue = value.GetValueOrDefault();
				this.ExecDelayValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ExecNumberValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecNumber property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecNumberValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exn")]
		public long? ExecNumber
		{
			get
			{
				return this.ExecNumberValueSpecified ? this.ExecNumberValue : default(long?);
			}
			set
			{
				this.ExecNumberValue = value.GetValueOrDefault();
				this.ExecNumberValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("exra")]
		[XmlElementAttribute("exra", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecReqArgsListType ExecReqArgs { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mgc", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mgc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("mgmtCmd", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class MgmtCmd : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("dc")]
		[XmlElementAttribute("dc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Description { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cmt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.CmdType CmdTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CmdType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CmdType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CmdTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cmt")]
		public Aetheros.OneM2M.Binding.CmdType? CmdType
		{
			get
			{
				return this.CmdTypeValueSpecified ? this.CmdTypeValue : default(Aetheros.OneM2M.Binding.CmdType?);
			}
			set
			{
				this.CmdTypeValue = value.GetValueOrDefault();
				this.CmdTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("exra")]
		[XmlElementAttribute("exra", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecReqArgsListType ExecReqArgs { get; set; }

		[JsonPropertyAttribute("exe")]
		[XmlElementAttribute("exe", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ExecEnable { get; set; }

		[JsonPropertyAttribute("ext")]
		[XmlElementAttribute("ext", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string ExecTarget { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ExecModeType ExecModeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecMode property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecModeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exm")]
		public Aetheros.OneM2M.Binding.ExecModeType? ExecMode
		{
			get
			{
				return this.ExecModeValueSpecified ? this.ExecModeValue : default(Aetheros.OneM2M.Binding.ExecModeType?);
			}
			set
			{
				this.ExecModeValue = value.GetValueOrDefault();
				this.ExecModeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan ExecFrequencyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecFrequency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecFrequency property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecFrequencyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exf")]
		public System.TimeSpan? ExecFrequency
		{
			get
			{
				return this.ExecFrequencyValueSpecified ? this.ExecFrequencyValue : default(System.TimeSpan?);
			}
			set
			{
				this.ExecFrequencyValue = value.GetValueOrDefault();
				this.ExecFrequencyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="duration")]
		public System.TimeSpan ExecDelayValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecDelay-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecDelay property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecDelayValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exy")]
		public System.TimeSpan? ExecDelay
		{
			get
			{
				return this.ExecDelayValueSpecified ? this.ExecDelayValue : default(System.TimeSpan?);
			}
			set
			{
				this.ExecDelayValue = value.GetValueOrDefault();
				this.ExecDelayValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("exn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ExecNumberValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecNumber-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ExecNumber property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecNumberValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("exn")]
		public long? ExecNumber
		{
			get
			{
				return this.ExecNumberValueSpecified ? this.ExecNumberValue : default(long?);
			}
			set
			{
				this.ExecNumberValue = value.GetValueOrDefault();
				this.ExecNumberValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("exin")]
		[XmlElementAttribute("exin", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ExecInstance> ExecInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ExecInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExecInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ExecInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ExecInstanceSpecified => (this.ExecInstance.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("evcg", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("evcg")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("eventConfig", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class EventConfig : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("evi")]
		[XmlElementAttribute("evi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EventID { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("evt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.EventType EventTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the EventType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("evt")]
		public Aetheros.OneM2M.Binding.EventType? EventType
		{
			get
			{
				return this.EventTypeValueSpecified ? this.EventTypeValue : default(Aetheros.OneM2M.Binding.EventType?);
			}
			set
			{
				this.EventTypeValue = value.GetValueOrDefault();
				this.EventTypeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eventStart", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset EventStartValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventStart-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the EventStart property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventStartValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eventStart")]
		public System.DateTimeOffset? EventStart
		{
			get
			{
				return this.EventStartValueSpecified ? this.EventStartValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.EventStartValue = value.GetValueOrDefault();
				this.EventStartValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eve", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset EventEndValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventEnd-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the EventEnd property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventEndValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eve")]
		public System.DateTimeOffset? EventEnd
		{
			get
			{
				return this.EventEndValueSpecified ? this.EventEndValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.EventEndValue = value.GetValueOrDefault();
				this.EventEndValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("opt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long OperationTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OperationType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("opt")]
		public long? OperationType
		{
			get
			{
				return this.OperationTypeValueSpecified ? this.OperationTypeValue : default(long?);
			}
			set
			{
				this.OperationTypeValue = value.GetValueOrDefault();
				this.OperationTypeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DataSizeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataSize-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DataSize property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DataSizeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ds")]
		public long? DataSize
		{
			get
			{
				return this.DataSizeValueSpecified ? this.DataSizeValue : default(long?);
			}
			set
			{
				this.DataSizeValue = value.GetValueOrDefault();
				this.DataSizeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("stcg", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("stcg")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("statsConfig", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class StatsConfig : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("evcg")]
		[XmlElementAttribute("evcg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.EventConfig> EventConfig { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.EventConfig>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die EventConfig-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the EventConfig collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool EventConfigSpecified => (this.EventConfig.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("stcl", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("stcl")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("statsCollect", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class StatsCollect : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[JsonPropertyAttribute("sci")]
		[XmlElementAttribute("sci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string StatsCollectID { get; set; }

		[JsonPropertyAttribute("cei")]
		[XmlElementAttribute("cei", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CollectingEntityID { get; set; }

		[JsonPropertyAttribute("cdi")]
		[XmlElementAttribute("cdi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CollectedEntityID { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("srs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.StatsRuleStatusType StatsRuleStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatsRuleStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StatsRuleStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StatsRuleStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("srs")]
		public Aetheros.OneM2M.Binding.StatsRuleStatusType? StatsRuleStatus
		{
			get
			{
				return this.StatsRuleStatusValueSpecified ? this.StatsRuleStatusValue : default(Aetheros.OneM2M.Binding.StatsRuleStatusType?);
			}
			set
			{
				this.StatsRuleStatusValue = value.GetValueOrDefault();
				this.StatsRuleStatusValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("sm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.StatModelType StatModelValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatModel-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the StatModel property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StatModelValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("sm")]
		public Aetheros.OneM2M.Binding.StatModelType? StatModel
		{
			get
			{
				return this.StatModelValueSpecified ? this.StatModelValue : default(Aetheros.OneM2M.Binding.StatModelType?);
			}
			set
			{
				this.StatModelValue = value.GetValueOrDefault();
				this.StatModelValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para xml:lang="en">Pattern: (([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*)).</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute(@"(([*]|[1-5]?\d([,-/][1-5]?\d)*)\s+){2}([*]|((1?\d|2[0-3])([,-/](1?\d|2[0-3]))*))\s+([*]|(([1-9]|1\d|2\d|3[01])([,-/]([1-9]|1\d|2\d|3[01]))*))\s+([*]|(([1-9]|1[0-2])([,-/]([1-9]|1[0-2]))*))\s+([*]|([0-6]([,-/][0-6])*))\s+([*]|([2-9]\d\d\d)(([,-]([2-9]\d\d\d)([/][\d]?[\d]?[\d]?[\d])?)*))")]
		[JsonPropertyAttribute("cp")]
		[XmlArrayAttribute("cp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("sce", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> CollectPeriod { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CollectPeriod-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the CollectPeriod collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CollectPeriodSpecified => (this.CollectPeriod.Count != 0);

		[JsonPropertyAttribute("evi")]
		[XmlElementAttribute("evi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EventID { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("req", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("req")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("request", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Request : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("op", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Operation OperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Operation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("op")]
		public Aetheros.OneM2M.Binding.Operation? Operation
		{
			get
			{
				return this.OperationValueSpecified ? this.OperationValue : default(Aetheros.OneM2M.Binding.Operation?);
			}
			set
			{
				this.OperationValue = value.GetValueOrDefault();
				this.OperationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("tg")]
		[XmlElementAttribute("tg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Target { get; set; }

		[JsonPropertyAttribute("or")]
		[XmlElementAttribute("or", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Originator { get; set; }

		[JsonPropertyAttribute("rid")]
		[XmlElementAttribute("rid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string RequestID { get; set; }

		[JsonPropertyAttribute("mi")]
		[XmlElementAttribute("mi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.MetaInformation MetaInformation { get; set; }

		[JsonPropertyAttribute("pc")]
		[XmlElementAttribute("pc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PrimitiveContent PrimitiveContent { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.RequestStatus RequestStatusValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RequestStatus-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RequestStatus property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestStatusValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rs")]
		public Aetheros.OneM2M.Binding.RequestStatus? RequestStatus
		{
			get
			{
				return this.RequestStatusValueSpecified ? this.RequestStatusValue : default(Aetheros.OneM2M.Binding.RequestStatus?);
			}
			set
			{
				this.RequestStatusValue = value.GetValueOrDefault();
				this.RequestStatusValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ors")]
		[XmlElementAttribute("ors", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.OperationResult OperationResult { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dlv", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dlv")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("delivery", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Delivery : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("st")]
		[XmlElementAttribute("st", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long StateTag { get; set; }

		[JsonPropertyAttribute("sr")]
		[XmlElementAttribute("sr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Source { get; set; }

		[JsonPropertyAttribute("tg")]
		[XmlElementAttribute("tg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Target { get; set; }

		[JsonPropertyAttribute("Ls")]
		[XmlElementAttribute("Ls", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset Lifespan { get; set; }

		[JsonPropertyAttribute("ec")]
		[XmlElementAttribute("ec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EventCat { get; set; }

		[JsonPropertyAttribute("dmd")]
		[XmlElementAttribute("dmd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.DeliveryMetaData DeliveryMetaData { get; set; }

		[JsonPropertyAttribute("arq")]
		[JsonConverter(typeof(JsonArrayItem<AggregatedRequestRequest>), "req")]
		[XmlArrayAttribute("arq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("req", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AggregatedRequestRequest> AggregatedRequest { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("svsn", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("svsn")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("serviceSubscribedNode", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ServiceSubscribedNode : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("ni")]
		[XmlElementAttribute("ni", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string NodeID { get; set; }

		[JsonPropertyAttribute("csi")]
		[XmlElementAttribute("csi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSE_ID { get; set; }

		[JsonPropertyAttribute("di")]
		[XmlElementAttribute("di", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string[] DeviceIdentifier { get; set; }

		[JsonPropertyAttribute("rlk")]
		[XmlElementAttribute("rlk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> RuleLinks { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RuleLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RuleLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RuleLinksSpecified => (this.RuleLinks.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mssp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("mssp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("m2mServiceSubscriptionProfile", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class M2MServiceSubscriptionProfile : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("svsn")]
		[XmlElementAttribute("svsn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ServiceSubscribedNode> ServiceSubscribedNode { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ServiceSubscribedNode>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceSubscribedNode-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ServiceSubscribedNode collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ServiceSubscribedNodeSpecified => (this.ServiceSubscribedNode.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("asar", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("asar")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("serviceSubscribedAppRule", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class ServiceSubscribedAppRule : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("apci")]
		[XmlElementAttribute("apci", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> ApplicableCredIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApplicableCredIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ApplicableCredIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApplicableCredIDsSpecified => (this.ApplicableCredIDs.Count != 0);

		[JsonPropertyAttribute("aai")]
		[XmlElementAttribute("aai", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AllowedApp_IDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllowedApp_IDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllowedApp_IDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllowedApp_IDsSpecified => (this.AllowedApp_IDs.Count != 0);

		[JsonPropertyAttribute("aae")]
		[XmlElementAttribute("aae", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AllowedAEs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllowedAEs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllowedAEs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllowedAEsSpecified => (this.AllowedAEs.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rol", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("rol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("role", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Role : Aetheros.OneM2M.Binding.RegularResource
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("rlid")]
		[XmlElementAttribute("rlid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string RoleID { get; set; }

		[JsonPropertyAttribute("tkis")]
		[XmlElementAttribute("tkis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Issuer { get; set; }

		[JsonPropertyAttribute("tkhd")]
		[XmlElementAttribute("tkhd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Holder { get; set; }

		[JsonPropertyAttribute("tknb")]
		[XmlElementAttribute("tknb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotBefore { get; set; }

		[JsonPropertyAttribute("tkna")]
		[XmlElementAttribute("tkna", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotAfter { get; set; }

		[JsonPropertyAttribute("rlnm")]
		[XmlElementAttribute("rlnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string RoleName { get; set; }

		[JsonPropertyAttribute("rltl")]
		[XmlElementAttribute("rltl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string TokenLink { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("tk", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("tk")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("token", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class Token : Aetheros.OneM2M.Binding.RegularResource
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tkid")]
		[XmlElementAttribute("tkid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenID { get; set; }

		[JsonPropertyAttribute("tkob")]
		[XmlElementAttribute("tkob", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string TokenObject { get; set; }

		[JsonPropertyAttribute("vr")]
		[XmlElementAttribute("vr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Version { get; set; }

		[JsonPropertyAttribute("tkis")]
		[XmlElementAttribute("tkis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Issuer { get; set; }

		[JsonPropertyAttribute("tkhd")]
		[XmlElementAttribute("tkhd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Holder { get; set; }

		[JsonPropertyAttribute("tknb")]
		[XmlElementAttribute("tknb", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotBefore { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("tkna", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset NotAfterValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NotAfter-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the NotAfter property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NotAfterValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("tkna")]
		public System.DateTimeOffset? NotAfter
		{
			get
			{
				return this.NotAfterValueSpecified ? this.NotAfterValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.NotAfterValue = value.GetValueOrDefault();
				this.NotAfterValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("tknm")]
		[XmlElementAttribute("tknm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenName { get; set; }

		[JsonPropertyAttribute("tkau")]
		[XmlElementAttribute("tkau", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> Audience { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Audience-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Audience collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AudienceSpecified => (this.Audience.Count != 0);

		[JsonPropertyAttribute("tkps")]
		[XmlElementAttribute("tkps", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public TokenPermissionsItem Permissions { get; set; }

		[JsonPropertyAttribute("tkex")]
		[XmlElementAttribute("tkex", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Extension { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("TokenPermissionsItem", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("TokenPermissionsItem")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class TokenPermissionsItem
	{
		[JsonPropertyAttribute("pm")]
		[XmlElementAttribute("pm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.TokenPermission Permission { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cb", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("cb")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("CSEBase", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class CSEBase : Aetheros.OneM2M.Binding.Resource
	{
		[JsonPropertyAttribute("acpi")]
		[XmlElementAttribute("acpi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> AccessControlPolicyIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicyIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicyIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicyIDsSpecified => (this.AccessControlPolicyIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.CseTypeID CseTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CseType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CseType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CseTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cst")]
		public Aetheros.OneM2M.Binding.CseTypeID? CseType
		{
			get
			{
				return this.CseTypeValueSpecified ? this.CseTypeValue : default(Aetheros.OneM2M.Binding.CseTypeID?);
			}
			set
			{
				this.CseTypeValue = value.GetValueOrDefault();
				this.CseTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("csi")]
		[XmlElementAttribute("csi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string CSE_ID { get; set; }

		[JsonPropertyAttribute("srt")]
		[XmlElementAttribute("srt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SupportedResourceType { get; set; }

		[JsonPropertyAttribute("poa")]
		[XmlElementAttribute("poa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> PointOfAccess { get; set; }

		[JsonPropertyAttribute("nl")]
		[XmlElementAttribute("nl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string NodeLink { get; set; }

		[JsonPropertyAttribute("esi")]
		[XmlElementAttribute("esi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.E2ESecInfo E2ESecInfo { get; set; }

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("csr")]
		[XmlElementAttribute("csr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.RemoteCSE> RemoteCSE { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.RemoteCSE>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoteCSE-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RemoteCSE collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RemoteCSESpecified => (this.RemoteCSE.Count != 0);

		[JsonPropertyAttribute("csrA")]
		[XmlElementAttribute("csrA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.RemoteCSEAnnc> RemoteCSEAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.RemoteCSEAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RemoteCSEAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RemoteCSEAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RemoteCSEAnncSpecified => (this.RemoteCSEAnnc.Count != 0);

		[JsonPropertyAttribute("nod")]
		[XmlElementAttribute("nod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Node> Node { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Node>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Node-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Node collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NodeSpecified => (this.Node.Count != 0);

		[JsonPropertyAttribute("ae")]
		[XmlElementAttribute("ae", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AE> AE { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AE>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AE-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AE collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AESpecified => (this.AE.Count != 0);

		[JsonPropertyAttribute("cnt")]
		[XmlElementAttribute("cnt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Container> Container { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Container>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Container-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Container collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ContainerSpecified => (this.Container.Count != 0);

		[JsonPropertyAttribute("grp")]
		[XmlElementAttribute("grp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Group> Group { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Group>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Group-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Group collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GroupSpecified => (this.Group.Count != 0);

		[JsonPropertyAttribute("acp")]
		[XmlElementAttribute("acp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AccessControlPolicy> AccessControlPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AccessControlPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AccessControlPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AccessControlPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AccessControlPolicySpecified => (this.AccessControlPolicy.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("mgc")]
		[XmlElementAttribute("mgc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.MgmtCmd> MgmtCmd { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.MgmtCmd>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MgmtCmd-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the MgmtCmd collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MgmtCmdSpecified => (this.MgmtCmd.Count != 0);

		[JsonPropertyAttribute("lcp")]
		[XmlElementAttribute("lcp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.LocationPolicy> LocationPolicy { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.LocationPolicy>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocationPolicy-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the LocationPolicy collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocationPolicySpecified => (this.LocationPolicy.Count != 0);

		[JsonPropertyAttribute("stcg")]
		[XmlElementAttribute("stcg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.StatsConfig> StatsConfig { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.StatsConfig>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatsConfig-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the StatsConfig collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StatsConfigSpecified => (this.StatsConfig.Count != 0);

		[JsonPropertyAttribute("stcl")]
		[XmlElementAttribute("stcl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.StatsCollect> StatsCollect { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.StatsCollect>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die StatsCollect-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the StatsCollect collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool StatsCollectSpecified => (this.StatsCollect.Count != 0);

		[JsonPropertyAttribute("req")]
		[XmlElementAttribute("req", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Request> Request { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Request>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Request-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Request collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RequestSpecified => (this.Request.Count != 0);

		[JsonPropertyAttribute("dlv")]
		[XmlElementAttribute("dlv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Delivery> Delivery { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Delivery>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Delivery-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Delivery collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeliverySpecified => (this.Delivery.Count != 0);

		[JsonPropertyAttribute("sch")]
		[XmlElementAttribute("sch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Schedule> Schedule { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Schedule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Schedule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Schedule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ScheduleSpecified => (this.Schedule.Count != 0);

		[JsonPropertyAttribute("mssp")]
		[XmlElementAttribute("mssp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.M2MServiceSubscriptionProfile> M2MServiceSubscriptionProfile { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.M2MServiceSubscriptionProfile>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die M2MServiceSubscriptionProfile-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the M2MServiceSubscriptionProfile collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool M2MServiceSubscriptionProfileSpecified => (this.M2MServiceSubscriptionProfile.Count != 0);

		[JsonPropertyAttribute("asar")]
		[XmlElementAttribute("asar", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ServiceSubscribedAppRule> ServiceSubscribedAppRule { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ServiceSubscribedAppRule>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ServiceSubscribedAppRule-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ServiceSubscribedAppRule collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ServiceSubscribedAppRuleSpecified => (this.ServiceSubscribedAppRule.Count != 0);

		[JsonPropertyAttribute("rol")]
		[XmlElementAttribute("rol", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Role> Role { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Role>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Role-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Role collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RoleSpecified => (this.Role.Count != 0);

		[JsonPropertyAttribute("tk")]
		[XmlElementAttribute("tk", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Token> Token { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Token>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Token-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Token collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TokenSpecified => (this.Token.Count != 0);

		[JsonPropertyAttribute("sg_flexContainerResource")]
		[XmlElementAttribute("sg_flexContainerResource", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.FlexContainerResource> Sg_FlexContainerResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.FlexContainerResource>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Sg_FlexContainerResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Sg_FlexContainerResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool Sg_FlexContainerResourceSpecified => (this.Sg_FlexContainerResource.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("dac", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("dac")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("dynamicAuthorizationConsultation", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class DynamicAuthorizationConsultation : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("dae")]
		[XmlElementAttribute("dae", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DynamicAuthorizationEnabled { get; set; }

		[JsonPropertyAttribute("dap")]
		[XmlElementAttribute("dap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public ICollection<string> DynamicAuthorizationPoA { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dal", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset DynamicAuthorizationLifetimeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DynamicAuthorizationLifetime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DynamicAuthorizationLifetime property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DynamicAuthorizationLifetimeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dal")]
		public System.DateTimeOffset? DynamicAuthorizationLifetime
		{
			get
			{
				return this.DynamicAuthorizationLifetimeValueSpecified ? this.DynamicAuthorizationLifetimeValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.DynamicAuthorizationLifetimeValue = value.GetValueOrDefault();
				this.DynamicAuthorizationLifetimeValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("gio", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("gio")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("genericInterworkingOperationInstance", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class GenericInterworkingOperationInstance : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("gion")]
		[XmlElementAttribute("gion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string OperationName { get; set; }

		[JsonPropertyAttribute("gios")]
		[XmlElementAttribute("gios", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string OperationState { get; set; }

		[JsonPropertyAttribute("giip")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> InputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the InputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InputDataPointLinksSpecified => (this.InputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("giop")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> OutputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputDataPointLinksSpecified => (this.OutputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("giil")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giil", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> InputLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the InputLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InputLinksSpecified => (this.InputLinks.Count != 0);

		[JsonPropertyAttribute("giol")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giol", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> OutputLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputLinksSpecified => (this.OutputLinks.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("gioa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("gioa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("genericInterworkingOperationInstanceAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class GenericInterworkingOperationInstanceAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("gion")]
		[XmlElementAttribute("gion", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string OperationName { get; set; }

		[JsonPropertyAttribute("gios")]
		[XmlElementAttribute("gios", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string OperationState { get; set; }

		[JsonPropertyAttribute("giip")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> InputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the InputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InputDataPointLinksSpecified => (this.InputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("giop")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> OutputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputDataPointLinksSpecified => (this.OutputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("giil")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giil", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> InputLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the InputLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InputLinksSpecified => (this.InputLinks.Count != 0);

		[JsonPropertyAttribute("giol")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giol", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> OutputLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputLinksSpecified => (this.OutputLinks.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("gis", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("gis")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("genericInterworkingService", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class GenericInterworkingService : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("gisn")]
		[XmlElementAttribute("gisn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ServiceName { get; set; }

		[JsonPropertyAttribute("giip")]
		[XmlElementAttribute("giip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string InputDataPointLinks { get; set; }

		[JsonPropertyAttribute("giop")]
		[XmlElementAttribute("giop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> OutputDataPointLinks { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputDataPointLinksSpecified => (this.OutputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("gis")]
		[XmlElementAttribute("gis", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<GenericInterworkingService> GenericInterworkingServiceProperty { get; set; } = System.Array.Empty<GenericInterworkingService>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GenericInterworkingServiceProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GenericInterworkingServiceProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GenericInterworkingServicePropertySpecified => (this.GenericInterworkingServiceProperty.Count != 0);

		[JsonPropertyAttribute("gio")]
		[XmlElementAttribute("gio", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.GenericInterworkingOperationInstance> GenericInterworkingOperationInstance { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.GenericInterworkingOperationInstance>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GenericInterworkingOperationInstance-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GenericInterworkingOperationInstance collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GenericInterworkingOperationInstanceSpecified => (this.GenericInterworkingOperationInstance.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("gisa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("gisa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("genericInterworkingServiceAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class GenericInterworkingServiceAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("gisn")]
		[XmlElementAttribute("gisn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ServiceName { get; set; }

		[JsonPropertyAttribute("giip")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giip", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> InputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die InputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the InputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool InputDataPointLinksSpecified => (this.InputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("giop")]
		[JsonConverter(typeof(JsonArrayItem<DataLink>), "dle")]
		[XmlArrayAttribute("giop", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		[XmlArrayItemAttribute("dle", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.DataLink> OutputDataPointLinks { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.DataLink>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutputDataPointLinks-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the OutputDataPointLinks collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OutputDataPointLinksSpecified => (this.OutputDataPointLinks.Count != 0);

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("gisa")]
		[XmlElementAttribute("gisa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<GenericInterworkingServiceAnnc> GenericInterworkingServiceAnncProperty { get; set; } = System.Array.Empty<GenericInterworkingServiceAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GenericInterworkingServiceAnncProperty-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GenericInterworkingServiceAnncProperty collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GenericInterworkingServiceAnncPropertySpecified => (this.GenericInterworkingServiceAnncProperty.Count != 0);

		[JsonPropertyAttribute("gioa")]
		[XmlElementAttribute("gioa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.GenericInterworkingOperationInstanceAnnc> GenericInterworkingOperationInstanceAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.GenericInterworkingOperationInstanceAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GenericInterworkingOperationInstanceAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the GenericInterworkingOperationInstanceAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool GenericInterworkingOperationInstanceAnncSpecified => (this.GenericInterworkingOperationInstanceAnnc.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rqp", Namespace="http://www.onem2m.org/xml/protocols", AnonymousType=true)]
	[JsonObjectAttribute("rqp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("requestPrimitive", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class RequestPrimitive
	{
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("op", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.Operation OperationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Operation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Operation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OperationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("op")]
		public Aetheros.OneM2M.Binding.Operation? Operation
		{
			get
			{
				return this.OperationValueSpecified ? this.OperationValue : default(Aetheros.OneM2M.Binding.Operation?);
			}
			set
			{
				this.OperationValue = value.GetValueOrDefault();
				this.OperationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("to")]
		[XmlElementAttribute("to", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string To { get; set; }

		[JsonPropertyAttribute("fr")]
		[XmlElementAttribute("fr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string From { get; set; }

		[JsonPropertyAttribute("rqi")]
		[XmlElementAttribute("rqi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string RequestIdentifier { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResourceType ResourceTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResourceType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResourceType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResourceTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ty")]
		public Aetheros.OneM2M.Binding.ResourceType? ResourceType
		{
			get
			{
				return this.ResourceTypeValueSpecified ? this.ResourceTypeValue : default(Aetheros.OneM2M.Binding.ResourceType?);
			}
			set
			{
				this.ResourceTypeValue = value.GetValueOrDefault();
				this.ResourceTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("pc")]
		[XmlElementAttribute("pc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.PrimitiveContent PrimitiveContent { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("rids")]
		[XmlElementAttribute("rids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public ICollection<string> RoleIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RoleIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the RoleIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RoleIDsSpecified => (this.RoleIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("ot", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="dateTime")]
		public System.DateTimeOffset OriginatingTimestampValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OriginatingTimestamp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the OriginatingTimestamp property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool OriginatingTimestampValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("ot")]
		public System.DateTimeOffset? OriginatingTimestamp
		{
			get
			{
				return this.OriginatingTimestampValueSpecified ? this.OriginatingTimestampValue : default(System.DateTimeOffset?);
			}
			set
			{
				this.OriginatingTimestampValue = value.GetValueOrDefault();
				this.OriginatingTimestampValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("rqet")]
		[XmlElementAttribute("rqet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string RequestExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("rset")]
		[XmlElementAttribute("rset", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultExpirationTimestamp { get; set; }

		[JsonPropertyAttribute("oet")]
		[XmlElementAttribute("oet", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string OperationExecutionTime { get; set; }

		[JsonPropertyAttribute("rt")]
		[XmlElementAttribute("rt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResponseTypeInfo ResponseType { get; set; }

		[JsonPropertyAttribute("rp")]
		[XmlElementAttribute("rp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string ResultPersistence { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rcn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.ResultContent ResultContentValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ResultContent-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ResultContent property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ResultContentValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rcn")]
		public Aetheros.OneM2M.Binding.ResultContent? ResultContent
		{
			get
			{
				return this.ResultContentValueSpecified ? this.ResultContentValue : default(Aetheros.OneM2M.Binding.ResultContent?);
			}
			set
			{
				this.ResultContentValue = value.GetValueOrDefault();
				this.ResultContentValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ec")]
		[XmlElementAttribute("ec", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string EventCategory { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("da", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool DeliveryAggregationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeliveryAggregation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DeliveryAggregation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeliveryAggregationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("da")]
		public bool? DeliveryAggregation
		{
			get
			{
				return this.DeliveryAggregationValueSpecified ? this.DeliveryAggregationValue : default(bool?);
			}
			set
			{
				this.DeliveryAggregationValue = value.GetValueOrDefault();
				this.DeliveryAggregationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("gid")]
		[XmlElementAttribute("gid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string GroupRequestIdentifier { get; set; }

		[JsonPropertyAttribute("fc")]
		[XmlElementAttribute("fc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.FilterCriteria FilterCriteria { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("drt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.DiscResType DiscoveryResultTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DiscoveryResultType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DiscoveryResultType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DiscoveryResultTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("drt")]
		public Aetheros.OneM2M.Binding.DiscResType? DiscoveryResultType
		{
			get
			{
				return this.DiscoveryResultTypeValueSpecified ? this.DiscoveryResultTypeValue : default(Aetheros.OneM2M.Binding.DiscResType?);
			}
			set
			{
				this.DiscoveryResultTypeValue = value.GetValueOrDefault();
				this.DiscoveryResultTypeValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("tkns")]
		[XmlElementAttribute("tkns", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public string Tokens { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: ([a-zA-Z0-9\.\-,_]*)@([A-Za-z0-9\-_]*)(\.([A-Za-z0-9\-_])*)*.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([a-zA-Z0-9\\.\\-,_]*)@([A-Za-z0-9\\-_]*)(\\.([A-Za-z0-9\\-_])*)*")]
		[JsonPropertyAttribute("tids")]
		[XmlElementAttribute("tids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TokenIDs { get; set; }

		[JsonPropertyAttribute("ltids")]
		[XmlElementAttribute("ltids", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="NCName")]
		public ICollection<string> LocalTokenIDs { get; set; } = System.Array.Empty<System.String>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LocalTokenIDs-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the LocalTokenIDs collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LocalTokenIDsSpecified => (this.LocalTokenIDs.Count != 0);

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("tokenReqIndicator", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool TokenReqIndicatorValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TokenReqIndicator-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the TokenReqIndicator property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool TokenReqIndicatorValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("tokenReqIndicator")]
		public bool? TokenReqIndicator
		{
			get
			{
				return this.TokenReqIndicatorValueSpecified ? this.TokenReqIndicatorValue : default(bool?);
			}
			set
			{
				this.TokenReqIndicatorValue = value.GetValueOrDefault();
				this.TokenReqIndicatorValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pdr", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("pdr")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("policyDeletionRules", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class PolicyDeletionRules : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("dr")]
		[XmlElementAttribute("dr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.DeletionContexts DeletionRules { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("drr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogicalOperator DeletionRulesRelationValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeletionRulesRelation-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DeletionRulesRelation property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DeletionRulesRelationValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("drr")]
		public Aetheros.OneM2M.Binding.LogicalOperator? DeletionRulesRelation
		{
			get
			{
				return this.DeletionRulesRelationValueSpecified ? this.DeletionRulesRelationValue : default(Aetheros.OneM2M.Binding.LogicalOperator?);
			}
			set
			{
				this.DeletionRulesRelationValue = value.GetValueOrDefault();
				this.DeletionRulesRelationValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ntp", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ntp")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("notificationTargetPolicy", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class NotificationTargetPolicy : Aetheros.OneM2M.Binding.RegularResource
	{
		[JsonPropertyAttribute("cr")]
		[XmlElementAttribute("cr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="anyURI")]
		public string Creator { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("can", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.NotificationTargetPolicyAction ActionValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Action-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Action property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActionValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("can")]
		public Aetheros.OneM2M.Binding.NotificationTargetPolicyAction? Action
		{
			get
			{
				return this.ActionValueSpecified ? this.ActionValue : default(Aetheros.OneM2M.Binding.NotificationTargetPolicyAction?);
			}
			set
			{
				this.ActionValue = value.GetValueOrDefault();
				this.ActionValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("plbl")]
		[XmlElementAttribute("plbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="token")]
		public string PolicyLabel { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("rrs", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.OneM2M.Binding.LogicalOperator RulesRelationshipValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die RulesRelationship-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the RulesRelationship property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool RulesRelationshipValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("rrs")]
		public Aetheros.OneM2M.Binding.LogicalOperator? RulesRelationship
		{
			get
			{
				return this.RulesRelationshipValueSpecified ? this.RulesRelationshipValue : default(Aetheros.OneM2M.Binding.LogicalOperator?);
			}
			set
			{
				this.RulesRelationshipValue = value.GetValueOrDefault();
				this.RulesRelationshipValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("pdr")]
		[XmlElementAttribute("pdr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.PolicyDeletionRules> PolicyDeletionRules { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.PolicyDeletionRules>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolicyDeletionRules-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PolicyDeletionRules collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PolicyDeletionRulesSpecified => (this.PolicyDeletionRules.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajfw", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajfw")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("svcFwWrapper", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SvcFwWrapper : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajfwa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajfwa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("svcFwWrapperAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SvcFwWrapperAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajsw", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajsw")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("svcObjWrapper", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SvcObjWrapper : Aetheros.OneM2M.Binding.FlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajap")]
		[XmlElementAttribute("ajap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynApp> AllJoynApp { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynApp>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynApp-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynApp collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynAppSpecified => (this.AllJoynApp.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ajswa", Namespace="http://www.onem2m.org/xml/protocols")]
	[JsonObjectAttribute("ajswa")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("svcObjWrapperAnnc", Namespace="http://www.onem2m.org/xml/protocols")]
	public partial class SvcObjWrapperAnnc : Aetheros.OneM2M.Binding.AnnouncedFlexContainerResource
	{
		[JsonPropertyAttribute("ch")]
		[XmlElementAttribute("ch", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.ChildResourceRef> ChildResource { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.ChildResourceRef>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ChildResource-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the ChildResource collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ChildResourceSpecified => (this.ChildResource.Count != 0);

		[JsonPropertyAttribute("smd")]
		[XmlElementAttribute("smd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptor> SemanticDescriptor { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptor>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptor-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptor collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorSpecified => (this.SemanticDescriptor.Count != 0);

		[JsonPropertyAttribute("smdA")]
		[XmlElementAttribute("smdA", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc> SemanticDescriptorAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.SemanticDescriptorAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die SemanticDescriptorAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the SemanticDescriptorAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SemanticDescriptorAnncSpecified => (this.SemanticDescriptorAnnc.Count != 0);

		[JsonPropertyAttribute("sub")]
		[XmlElementAttribute("sub", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.Subscription> Subscription { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.Subscription>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Subscription-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the Subscription collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool SubscriptionSpecified => (this.Subscription.Count != 0);

		[JsonPropertyAttribute("ajapa")]
		[XmlElementAttribute("ajapa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<Aetheros.OneM2M.Binding.AllJoynAppAnnc> AllJoynAppAnnc { get; set; } = System.Array.Empty<Aetheros.OneM2M.Binding.AllJoynAppAnnc>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllJoynAppAnnc-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the AllJoynAppAnnc collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool AllJoynAppAnncSpecified => (this.AllJoynAppAnnc.Count != 0);
	}
}
