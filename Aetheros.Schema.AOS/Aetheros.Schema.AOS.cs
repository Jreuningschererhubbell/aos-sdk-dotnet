//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 1.0.0.0.
namespace Aetheros.Schema.AOS
{
	using System.Collections;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Xml.Serialization;
	using Newtonsoft.Json;

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cfg", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("cfg")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class Config
	{
		[JsonPropertyAttribute("sqn")]
		[XmlElementAttribute("sqn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SequenceNumber { get; set; }

		[JsonPropertyAttribute("plst")]
		[XmlElementAttribute("plst", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<long> PolicySet { get; set; } = System.Array.Empty<System.Int64>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolicySet-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PolicySet collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PolicySetSpecified => (this.PolicySet.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("pol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.BillingReadPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.ClockSetPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.ClockSynchronizePolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.IntervalReadPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.MeterEventsPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.MeterPasswordPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.MeterProgramPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.PowerQualityProfilePolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.RegisterReadPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.RegisterSnapshotReadPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.ServiceOffPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.ServiceOnPolicy))]
	[XmlIncludeAttribute(typeof(Aetheros.Schema.AOS.ValidatedIntervalReadPolicy))]
	public partial class Policy
	{
		[JsonPropertyAttribute("pty")]
		[XmlElementAttribute("pty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PolicyType { get; set; }

		[JsonPropertyAttribute("pid")]
		[XmlElementAttribute("pid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PolicyId { get; set; }

		[JsonPropertyAttribute("pnm")]
		[XmlElementAttribute("pnm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string PolicyName { get; set; }

		[JsonPropertyAttribute("dsc")]
		[XmlElementAttribute("dsc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string PolicyDescription { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("stt")]
		[XmlElementAttribute("stt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string StartTime { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("end")]
		[XmlElementAttribute("end", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EndTime { get; set; }

		[JsonPropertyAttribute("frq")]
		[XmlElementAttribute("frq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long Frequency { get; set; }

		[JsonPropertyAttribute("orq")]
		[XmlElementAttribute("orq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool OnRequest { get; set; }

		[JsonPropertyAttribute("dct")]
		[XmlElementAttribute("dct", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string DataContainer { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("mrds", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxReportDelaySecsValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MaxReportDelaySecs-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the MaxReportDelaySecs property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool MaxReportDelaySecsValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("mrds")]
		public long? MaxReportDelaySecs
		{
			get
			{
				return this.MaxReportDelaySecsValueSpecified ? this.MaxReportDelaySecsValue : default(long?);
			}
			set
			{
				this.MaxReportDelaySecsValue = value.GetValueOrDefault();
				this.MaxReportDelaySecsValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sysc", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("sysc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SysConfig
	{
		[JsonPropertyAttribute("TZ")]
		[XmlElementAttribute("TZ", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string TimeZoneName { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pridy", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("pridy")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ProductIdentity
	{
		[JsonPropertyAttribute("man")]
		[XmlElementAttribute("man", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Manufacturer { get; set; }

		[JsonPropertyAttribute("mod")]
		[XmlElementAttribute("mod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string Model { get; set; }

		[JsonPropertyAttribute("msn")]
		[XmlElementAttribute("msn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ManufacturingSerialNumber { get; set; }

		[JsonPropertyAttribute("usn")]
		[XmlElementAttribute("usn", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string UtilitySerialNumber { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mridy", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mridy")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterIdentity
	{
		[JsonPropertyAttribute("mtrty")]
		[XmlElementAttribute("mtrty", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MeterType { get; set; }

		[JsonPropertyAttribute("mtrid")]
		[XmlElementAttribute("mtrid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string MeterId { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mcap", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mcap")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterCaps
	{
		[JsonPropertyAttribute("hwv")]
		[XmlElementAttribute("hwv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string HardwareVersion { get; set; }

		[JsonPropertyAttribute("swv")]
		[XmlElementAttribute("swv", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SoftwareVersion { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("cap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CapabilityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Capability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Capability property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CapabilityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("cap")]
		public long? Capability
		{
			get
			{
				return this.CapabilityValueSpecified ? this.CapabilityValue : default(long?);
			}
			set
			{
				this.CapabilityValue = value.GetValueOrDefault();
				this.CapabilityValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("form")]
		[XmlElementAttribute("form", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string FormNumber { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("lfrq", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long LineFrequencyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineFrequency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the LineFrequency property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool LineFrequencyValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("lfrq")]
		public long? LineFrequency
		{
			get
			{
				return this.LineFrequencyValueSpecified ? this.LineFrequencyValue : default(long?);
			}
			set
			{
				this.LineFrequencyValue = value.GetValueOrDefault();
				this.LineFrequencyValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("noel", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long NumberOfElementsValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfElements-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfElements property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool NumberOfElementsValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("noel")]
		public long? NumberOfElements
		{
			get
			{
				return this.NumberOfElementsValueSpecified ? this.NumberOfElementsValue : default(long?);
			}
			set
			{
				this.NumberOfElementsValue = value.GetValueOrDefault();
				this.NumberOfElementsValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("btyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long BaseTypeValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the BaseType property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool BaseTypeValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("btyp")]
		public long? BaseType
		{
			get
			{
				return this.BaseTypeValueSpecified ? this.BaseTypeValue : default(long?);
			}
			set
			{
				this.BaseTypeValue = value.GetValueOrDefault();
				this.BaseTypeValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("volt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long VoltageValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Voltage-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Voltage property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("volt")]
		public long? Voltage
		{
			get
			{
				return this.VoltageValueSpecified ? this.VoltageValue : default(long?);
			}
			set
			{
				this.VoltageValue = value.GetValueOrDefault();
				this.VoltageValueSpecified = value.HasValue;
			}
		}

		[JsonPropertyAttribute("curc")]
		[XmlElementAttribute("curc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string CurrentClass { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("hpxc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasPsemxCapabilityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasPsemxCapability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the HasPsemxCapability property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool HasPsemxCapabilityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("hpxc")]
		public bool? HasPsemxCapability
		{
			get
			{
				return this.HasPsemxCapabilityValueSpecified ? this.HasPsemxCapabilityValue : default(bool?);
			}
			set
			{
				this.HasPsemxCapabilityValue = value.GetValueOrDefault();
				this.HasPsemxCapabilityValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("hdrc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasDemandResetCapabilityValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HasDemandResetCapability-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the HasDemandResetCapability property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool HasDemandResetCapabilityValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("hdrc")]
		public bool? HasDemandResetCapability
		{
			get
			{
				return this.HasDemandResetCapabilityValueSpecified ? this.HasDemandResetCapabilityValue : default(bool?);
			}
			set
			{
				this.HasDemandResetCapabilityValue = value.GetValueOrDefault();
				this.HasDemandResetCapabilityValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sscap", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("sscap")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ServiceSwitchCaps
	{
		[JsonPropertyAttribute("hss")]
		[XmlElementAttribute("hss", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasServiceSwitch { get; set; }

		[JsonPropertyAttribute("hac")]
		[XmlElementAttribute("hac", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasArmCapability { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lscap", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("lscap")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoadSwitchCaps
	{
		[JsonPropertyAttribute("hlw")]
		[XmlElementAttribute("hlw", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasLoadSwitch { get; set; }

		[JsonPropertyAttribute("hac")]
		[XmlElementAttribute("hac", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasArmCapability { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mcfg", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mcfg")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterConfig
	{
		[JsonPropertyAttribute("mprov")]
		[XmlElementAttribute("mprov", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsMeterProvisioned { get; set; }

		[JsonPropertyAttribute("opmod")]
		[XmlElementAttribute("opmod", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long OperatingMode { get; set; }

		[JsonPropertyAttribute("mpid")]
		[XmlElementAttribute("mpid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string MeterProgramIdentifier { get; set; }

		[JsonPropertyAttribute("sscf")]
		[XmlElementAttribute("sscf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SoftSwitchConfiguration { get; set; }

		[JsonPropertyAttribute("isxe")]
		[XmlElementAttribute("isxe", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsPsemxEnabled { get; set; }

		[JsonPropertyAttribute("ispe")]
		[XmlElementAttribute("ispe", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsLoadProfileEnabled { get; set; }

		[JsonPropertyAttribute("mtim")]
		[XmlElementAttribute("mtim", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long MeterTime { get; set; }

		[JsonPropertyAttribute("stim")]
		[XmlElementAttribute("stim", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="long")]
		public long SystemTime { get; set; }

		[JsonPropertyAttribute("hvpg")]
		[XmlElementAttribute("hvpg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool HasValidProgram { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sswc", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("sswc")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ServiceSwitchConfig
	{
		[JsonPropertyAttribute("isso")]
		[XmlElementAttribute("isso", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsServiceSwitchOpen { get; set; }

		[JsonPropertyAttribute("issa")]
		[XmlElementAttribute("issa", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsServiceSwitchArmed { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("lscf", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("lscf")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class LoadSwitchConfig
	{
		[JsonPropertyAttribute("ilwo")]
		[XmlElementAttribute("ilwo", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool IsLoadSwitchOpen { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("amic", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("amic")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class AmiConfig
	{
		[JsonPropertyAttribute("cfg")]
		[XmlElementAttribute("cfg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.Schema.AOS.Config Config { get; set; }

		[JsonPropertyAttribute("sysc")]
		[XmlElementAttribute("sysc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public Aetheros.Schema.AOS.SysConfig SysConfig { get; set; }

		[JsonPropertyAttribute("pridy")]
		[XmlElementAttribute("pridy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ProductIdentity ProductIdentity { get; set; }

		[JsonPropertyAttribute("mridy")]
		[XmlElementAttribute("mridy", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public MeterIdentity MeterIdentity { get; set; }

		[JsonPropertyAttribute("mcap")]
		[XmlElementAttribute("mcap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public MeterCaps MeterCaps { get; set; }

		[JsonPropertyAttribute("sscap")]
		[XmlElementAttribute("sscap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ServiceSwitchCaps ServiceSwitchCaps { get; set; }

		[JsonPropertyAttribute("lscap")]
		[XmlElementAttribute("lscap", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public LoadSwitchCaps LoadSwitchCaps { get; set; }

		[JsonPropertyAttribute("mcfg")]
		[XmlElementAttribute("mcfg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public MeterConfig MeterConfig { get; set; }

		[JsonPropertyAttribute("sswc")]
		[XmlElementAttribute("sswc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ServiceSwitchConfig ServiceSwitchConfig { get; set; }

		[JsonPropertyAttribute("lscf")]
		[XmlElementAttribute("lscf", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public LoadSwitchConfig LoadSwitchConfig { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("billingDate", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("billingDate")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class BillingDate
	{
		[JsonPropertyAttribute("bcid")]
		[XmlElementAttribute("bcid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long BillingCycleId { get; set; }

		[JsonPropertyAttribute("dttyp")]
		[XmlElementAttribute("dttyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DateType { get; set; }

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dofw", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DayOfWeekValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DayOfWeek-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DayOfWeek property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DayOfWeekValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dofw")]
		public long? DayOfWeek
		{
			get
			{
				return this.DayOfWeekValueSpecified ? this.DayOfWeekValue : default(long?);
			}
			set
			{
				this.DayOfWeekValue = value.GetValueOrDefault();
				this.DayOfWeekValueSpecified = value.HasValue;
			}
		}

		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("dofm", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long DayOfMonthValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DayOfMonth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the DayOfMonth property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool DayOfMonthValueSpecified { get; set; }

		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("dofm")]
		public long? DayOfMonth
		{
			get
			{
				return this.DayOfMonthValueSpecified ? this.DayOfMonthValue : default(long?);
			}
			set
			{
				this.DayOfMonthValue = value.GetValueOrDefault();
				this.DayOfMonthValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("spcdt")]
		[XmlElementAttribute("spcdt", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string SpecificDate { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("brpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("brpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("billingReadPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class BillingReadPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("svctyp")]
		[XmlElementAttribute("svctyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long ServiceType { get; set; }

		[JsonPropertyAttribute("bctyp")]
		[XmlElementAttribute("bctyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long BillingCycleType { get; set; }

		[JsonPropertyAttribute("ncycl")]
		[XmlElementAttribute("ncycl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long NumCycles { get; set; }

		[JsonPropertyAttribute("rsdmd")]
		[XmlElementAttribute("rsdmd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ResetDemands { get; set; }

		[JsonPropertyAttribute("clndr")]
		[XmlElementAttribute("clndr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public BillingDate Calendar { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("itvpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("itvpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class IntervalReadPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("slr")]
		[XmlElementAttribute("slr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool SinceLastRead { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("stvl")]
		[XmlElementAttribute("stvl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string StartItvl { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("endvl")]
		[XmlElementAttribute("endvl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EndItvl { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("meterPasswordSet", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("meterPasswordSet")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterPasswordSet
	{
		[JsonPropertyAttribute("pwval")]
		[XmlElementAttribute("pwval", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string PasswordValue { get; set; }

		[JsonPropertyAttribute("pwtyp")]
		[XmlElementAttribute("pwtyp", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string PasswordType { get; set; }

		[JsonPropertyAttribute("pwsrc")]
		[XmlElementAttribute("pwsrc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PasswordSource { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("meterPasswordKey", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("meterPasswordKey")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterPasswordKey
	{
		[JsonPropertyAttribute("ekey")]
		[XmlElementAttribute("ekey", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EncryptionKey { get; set; }

		[JsonPropertyAttribute("ekeylbl")]
		[XmlElementAttribute("ekeylbl", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string EncryptionLabel { get; set; }

		[JsonPropertyAttribute("ekeysrc")]
		[XmlElementAttribute("ekeysrc", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long EncryptionSource { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mpwpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mpwpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("meterPasswordPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class MeterPasswordPolicy : Aetheros.Schema.AOS.Policy
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("ast")]
		[XmlElementAttribute("ast", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ActionStartTime { get; set; }

		[JsonPropertyAttribute("psemx")]
		[XmlElementAttribute("psemx", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool UsePSEMX { get; set; }

		[JsonPropertyAttribute("pwsets")]
		[XmlElementAttribute("pwsets", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<MeterPasswordSet> PasswordSets { get; set; }

		[JsonPropertyAttribute("pwkeys")]
		[XmlElementAttribute("pwkeys", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public ICollection<MeterPasswordKey> PasswordKeys { get; set; } = System.Array.Empty<MeterPasswordKey>();
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PasswordKeys-Collection leer ist.</para>
		/// <para xml:lang="en">Gets a value indicating whether the PasswordKeys collection is empty.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PasswordKeysSpecified => (this.PasswordKeys.Count != 0);
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("ScheduleInterval", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("ScheduleInterval")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class ScheduleInterval
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("end")]
		[XmlElementAttribute("end", Namespace="http://www.aetheros.com/xml/protocols", DataType="string")]
		public string End { get; set; }
		
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("start")]
		[XmlElementAttribute("start", Namespace="http://www.aetheros.com/xml/protocols", DataType="string")]
		public string Start { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("TimeSchedule", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("TimeSchedule")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class TimeSchedule
	{
		/// <summary>
		/// <para>Meter read sampling time in seconds</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Meter read sampling time in seconds")]
		[JsonPropertyAttribute("recper")]
		[XmlElementAttribute("recper", Namespace="http://www.aetheros.com/xml/protocols")]
		public long RecurrencePeriod { get; set; }

		[JsonPropertyAttribute("sched")]
		[XmlElementAttribute("sched", Namespace="http://www.aetheros.com/xml/protocols")]
		public ScheduleInterval ScheduleInterval { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("MeterServicePolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("MeterServicePolicy")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterServicePolicy
	{
		[JsonPropertyAttribute("read")]
		[XmlElementAttribute("read", Namespace="http://www.aetheros.com/xml/protocols")]
		public MeterReadSchedule MeterReadSchedule { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("MeterReadSchedule", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("MeterReadSchedule")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterReadSchedule
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: \b(powerQuality)\b|\b(summations)\b.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\b(powerQuality)\\b|\\b(summations)\\b")]
		[JsonPropertyAttribute("rtype")]
		[XmlElementAttribute("rtype", Namespace="http://www.aetheros.com/xml/protocols", DataType="string")]
		public string ReadingType { get; set; }

		[JsonPropertyAttribute("tsched")]
		[XmlElementAttribute("tsched", Namespace="http://www.aetheros.com/xml/protocols")]
		public TimeSchedule TimeSchedule { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("PowerQualityData", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("PowerQualityData")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class PowerQualityData
	{
		/// <summary>
		/// <para>Instantaneous Voltage Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Voltage Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Voltage Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VA")]
		public float? VoltageA
		{
			get
			{
				return this.VoltageAValueSpecified ? this.VoltageAValue : default(float?);
			}
			set
			{
				this.VoltageAValue = value.GetValueOrDefault();
				this.VoltageAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Voltage Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Voltage Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Voltage Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VB")]
		public float? VoltageB
		{
			get
			{
				return this.VoltageBValueSpecified ? this.VoltageBValue : default(float?);
			}
			set
			{
				this.VoltageBValue = value.GetValueOrDefault();
				this.VoltageBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Voltage Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Voltage Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Voltage Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VC")]
		public float? VoltageC
		{
			get
			{
				return this.VoltageCValueSpecified ? this.VoltageCValue : default(float?);
			}
			set
			{
				this.VoltageCValue = value.GetValueOrDefault();
				this.VoltageCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Current Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Current Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("AA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float CurrentAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Current Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("AA")]
		public float? CurrentA
		{
			get
			{
				return this.CurrentAValueSpecified ? this.CurrentAValue : default(float?);
			}
			set
			{
				this.CurrentAValue = value.GetValueOrDefault();
				this.CurrentAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Current Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Current Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("AB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float CurrentBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Current Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("AB")]
		public float? CurrentB
		{
			get
			{
				return this.CurrentBValueSpecified ? this.CurrentBValue : default(float?);
			}
			set
			{
				this.CurrentBValue = value.GetValueOrDefault();
				this.CurrentBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Current Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Current Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("AC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float CurrentCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Current Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("AC")]
		public float? CurrentC
		{
			get
			{
				return this.CurrentCValueSpecified ? this.CurrentCValue : default(float?);
			}
			set
			{
				this.CurrentCValue = value.GetValueOrDefault();
				this.CurrentCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Neutral Current</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Neutral Current")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("CN", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float CurrentNeutralValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CurrentNeutral-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the CurrentNeutral property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool CurrentNeutralValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Neutral Current</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("CN")]
		public float? CurrentNeutral
		{
			get
			{
				return this.CurrentNeutralValueSpecified ? this.CurrentNeutralValue : default(float?);
			}
			set
			{
				this.CurrentNeutralValue = value.GetValueOrDefault();
				this.CurrentNeutralValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Frequency</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Frequency")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("frq", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float FrequencyValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Frequency-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the Frequency property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool FrequencyValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Frequency</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("frq")]
		public float? Frequency
		{
			get
			{
				return this.FrequencyValueSpecified ? this.FrequencyValue : default(float?);
			}
			set
			{
				this.FrequencyValue = value.GetValueOrDefault();
				this.FrequencyValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase A Voltage</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Angle of Phase A Voltage")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VaA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageAngleAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageAngleA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageAngleA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageAngleAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase A Voltage</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VaA")]
		public float? VoltageAngleA
		{
			get
			{
				return this.VoltageAngleAValueSpecified ? this.VoltageAngleAValue : default(float?);
			}
			set
			{
				this.VoltageAngleAValue = value.GetValueOrDefault();
				this.VoltageAngleAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase B Voltage</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Angle of Phase B Voltage")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VaB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageAngleBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageAngleB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageAngleB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageAngleBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase B Voltage</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VaB")]
		public float? VoltageAngleB
		{
			get
			{
				return this.VoltageAngleBValueSpecified ? this.VoltageAngleBValue : default(float?);
			}
			set
			{
				this.VoltageAngleBValue = value.GetValueOrDefault();
				this.VoltageAngleBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase C Voltage</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Angle of Phase C Voltage")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VaC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float VoltageAngleCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die VoltageAngleC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the VoltageAngleC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool VoltageAngleCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Angle of Phase C Voltage</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VaC")]
		public float? VoltageAngleC
		{
			get
			{
				return this.VoltageAngleCValueSpecified ? this.VoltageAngleCValue : default(float?);
			}
			set
			{
				this.VoltageAngleCValue = value.GetValueOrDefault();
				this.VoltageAngleCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Power Factor of Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pfA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float PowerFactorAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PowerFactorA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PowerFactorA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PowerFactorAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pfA")]
		public float? PowerFactorA
		{
			get
			{
				return this.PowerFactorAValueSpecified ? this.PowerFactorAValue : default(float?);
			}
			set
			{
				this.PowerFactorAValue = value.GetValueOrDefault();
				this.PowerFactorAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Power Factor of Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pfB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float PowerFactorBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PowerFactorB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PowerFactorB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PowerFactorBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pfB")]
		public float? PowerFactorB
		{
			get
			{
				return this.PowerFactorBValueSpecified ? this.PowerFactorBValue : default(float?);
			}
			set
			{
				this.PowerFactorBValue = value.GetValueOrDefault();
				this.PowerFactorBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Power Factor of Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pfC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float PowerFactorCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PowerFactorC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PowerFactorC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PowerFactorCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Power Factor of Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pfC")]
		public float? PowerFactorC
		{
			get
			{
				return this.PowerFactorCValueSpecified ? this.PowerFactorCValue : default(float?);
			}
			set
			{
				this.PowerFactorCValue = value.GetValueOrDefault();
				this.PowerFactorCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Total Power Factor</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Total Power Factor")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("pfT", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float PowerFactorTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PowerFactorTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the PowerFactorTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool PowerFactorTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Total Power Factor</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("pfT")]
		public float? PowerFactorTotal
		{
			get
			{
				return this.PowerFactorTotalValueSpecified ? this.PowerFactorTotalValue : default(float?);
			}
			set
			{
				this.PowerFactorTotalValue = value.GetValueOrDefault();
				this.PowerFactorTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Active Power Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("WA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ActivePowerAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActivePowerA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActivePowerA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivePowerAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("WA")]
		public float? ActivePowerA
		{
			get
			{
				return this.ActivePowerAValueSpecified ? this.ActivePowerAValue : default(float?);
			}
			set
			{
				this.ActivePowerAValue = value.GetValueOrDefault();
				this.ActivePowerAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Active Power Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("WB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ActivePowerBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActivePowerB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActivePowerB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivePowerBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("WB")]
		public float? ActivePowerB
		{
			get
			{
				return this.ActivePowerBValueSpecified ? this.ActivePowerBValue : default(float?);
			}
			set
			{
				this.ActivePowerBValue = value.GetValueOrDefault();
				this.ActivePowerBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Active Power Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("WC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ActivePowerCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActivePowerC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActivePowerC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivePowerCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Active Power Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("WC")]
		public float? ActivePowerC
		{
			get
			{
				return this.ActivePowerCValueSpecified ? this.ActivePowerCValue : default(float?);
			}
			set
			{
				this.ActivePowerCValue = value.GetValueOrDefault();
				this.ActivePowerCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Total Active Power</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Total Active Power")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("WT", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ActivePowerTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActivePowerTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActivePowerTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActivePowerTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Total Active Power</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("WT")]
		public float? ActivePowerTotal
		{
			get
			{
				return this.ActivePowerTotalValueSpecified ? this.ActivePowerTotalValue : default(float?);
			}
			set
			{
				this.ActivePowerTotalValue = value.GetValueOrDefault();
				this.ActivePowerTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Apparent Power Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VAA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ApparentPowerAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentPowerA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentPowerA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentPowerAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VAA")]
		public float? ApparentPowerA
		{
			get
			{
				return this.ApparentPowerAValueSpecified ? this.ApparentPowerAValue : default(float?);
			}
			set
			{
				this.ApparentPowerAValue = value.GetValueOrDefault();
				this.ApparentPowerAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Apparent Power Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VAB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ApparentPowerBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentPowerB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentPowerB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentPowerBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VAB")]
		public float? ApparentPowerB
		{
			get
			{
				return this.ApparentPowerBValueSpecified ? this.ApparentPowerBValue : default(float?);
			}
			set
			{
				this.ApparentPowerBValue = value.GetValueOrDefault();
				this.ApparentPowerBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Apparent Power Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VAC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ApparentPowerCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentPowerC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentPowerC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentPowerCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Apparent Power Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VAC")]
		public float? ApparentPowerC
		{
			get
			{
				return this.ApparentPowerCValueSpecified ? this.ApparentPowerCValue : default(float?);
			}
			set
			{
				this.ApparentPowerCValue = value.GetValueOrDefault();
				this.ApparentPowerCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Total Apparent Power</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Total Apparent Power")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VAT", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ApparentPowerTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentPowerTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentPowerTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentPowerTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Total Apparent Power</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VAT")]
		public float? ApparentPowerTotal
		{
			get
			{
				return this.ApparentPowerTotalValueSpecified ? this.ApparentPowerTotalValue : default(float?);
			}
			set
			{
				this.ApparentPowerTotalValue = value.GetValueOrDefault();
				this.ApparentPowerTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Reactive Power Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VARA", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ReactivePowerAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactivePowerA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactivePowerA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactivePowerAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VARA")]
		public float? ReactivePowerA
		{
			get
			{
				return this.ReactivePowerAValueSpecified ? this.ReactivePowerAValue : default(float?);
			}
			set
			{
				this.ReactivePowerAValue = value.GetValueOrDefault();
				this.ReactivePowerAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Reactive Power Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VARB", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ReactivePowerBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactivePowerB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactivePowerB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactivePowerBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VARB")]
		public float? ReactivePowerB
		{
			get
			{
				return this.ReactivePowerBValueSpecified ? this.ReactivePowerBValue : default(float?);
			}
			set
			{
				this.ReactivePowerBValue = value.GetValueOrDefault();
				this.ReactivePowerBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Reactive Power Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VARC", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ReactivePowerCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactivePowerC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactivePowerC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactivePowerCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Reactive Power Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VARC")]
		public float? ReactivePowerC
		{
			get
			{
				return this.ReactivePowerCValueSpecified ? this.ReactivePowerCValue : default(float?);
			}
			set
			{
				this.ReactivePowerCValue = value.GetValueOrDefault();
				this.ReactivePowerCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Instantaneous Total Reactive Power</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Instantaneous Total Reactive Power")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("VART", Namespace="http://www.aetheros.com/xml/protocols", DataType="float")]
		public float ReactivePowerTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactivePowerTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactivePowerTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactivePowerTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Instantaneous Total Reactive Power</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("VART")]
		public float? ReactivePowerTotal
		{
			get
			{
				return this.ReactivePowerTotalValueSpecified ? this.ReactivePowerTotalValue : default(float?);
			}
			set
			{
				this.ReactivePowerTotalValue = value.GetValueOrDefault();
				this.ReactivePowerTotalValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("SummationData", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("SummationData")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class SummationData
	{
		/// <summary>
		/// <para>Accumulated Wh Imported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Imported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iWhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyImportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyImportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyImportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyImportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Imported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iWhA")]
		public long? ActiveEnergyImportedA
		{
			get
			{
				return this.ActiveEnergyImportedAValueSpecified ? this.ActiveEnergyImportedAValue : default(long?);
			}
			set
			{
				this.ActiveEnergyImportedAValue = value.GetValueOrDefault();
				this.ActiveEnergyImportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Imported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Imported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iWhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyImportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyImportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyImportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyImportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Imported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iWhB")]
		public long? ActiveEnergyImportedB
		{
			get
			{
				return this.ActiveEnergyImportedBValueSpecified ? this.ActiveEnergyImportedBValue : default(long?);
			}
			set
			{
				this.ActiveEnergyImportedBValue = value.GetValueOrDefault();
				this.ActiveEnergyImportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Imported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Imported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iWhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyImportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyImportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyImportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyImportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Imported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iWhC")]
		public long? ActiveEnergyImportedC
		{
			get
			{
				return this.ActiveEnergyImportedCValueSpecified ? this.ActiveEnergyImportedCValue : default(long?);
			}
			set
			{
				this.ActiveEnergyImportedCValue = value.GetValueOrDefault();
				this.ActiveEnergyImportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Imported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Imported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iWhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyImportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyImportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyImportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyImportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Imported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iWhT")]
		public long? ActiveEnergyImportedTotal
		{
			get
			{
				return this.ActiveEnergyImportedTotalValueSpecified ? this.ActiveEnergyImportedTotalValue : default(long?);
			}
			set
			{
				this.ActiveEnergyImportedTotalValue = value.GetValueOrDefault();
				this.ActiveEnergyImportedTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Exported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eWhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyExportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyExportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyExportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyExportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eWhA")]
		public long? ActiveEnergyExportedA
		{
			get
			{
				return this.ActiveEnergyExportedAValueSpecified ? this.ActiveEnergyExportedAValue : default(long?);
			}
			set
			{
				this.ActiveEnergyExportedAValue = value.GetValueOrDefault();
				this.ActiveEnergyExportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Exported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eWhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyExportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyExportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyExportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyExportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eWhB")]
		public long? ActiveEnergyExportedB
		{
			get
			{
				return this.ActiveEnergyExportedBValueSpecified ? this.ActiveEnergyExportedBValue : default(long?);
			}
			set
			{
				this.ActiveEnergyExportedBValue = value.GetValueOrDefault();
				this.ActiveEnergyExportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Exported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eWhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyExportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyExportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyExportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyExportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Exported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eWhC")]
		public long? ActiveEnergyExportedC
		{
			get
			{
				return this.ActiveEnergyExportedCValueSpecified ? this.ActiveEnergyExportedCValue : default(long?);
			}
			set
			{
				this.ActiveEnergyExportedCValue = value.GetValueOrDefault();
				this.ActiveEnergyExportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated Wh Exported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated Wh Exported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eWhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ActiveEnergyExportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActiveEnergyExportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ActiveEnergyExportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ActiveEnergyExportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated Wh Exported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eWhT")]
		public long? ActiveEnergyExportedTotal
		{
			get
			{
				return this.ActiveEnergyExportedTotalValueSpecified ? this.ActiveEnergyExportedTotalValue : default(long?);
			}
			set
			{
				this.ActiveEnergyExportedTotalValue = value.GetValueOrDefault();
				this.ActiveEnergyExportedTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Imported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVARhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyImportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyImportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyImportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyImportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVARhA")]
		public long? ReactiveEnergyImportedA
		{
			get
			{
				return this.ReactiveEnergyImportedAValueSpecified ? this.ReactiveEnergyImportedAValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyImportedAValue = value.GetValueOrDefault();
				this.ReactiveEnergyImportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Imported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVARhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyImportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyImportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyImportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyImportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVARhB")]
		public long? ReactiveEnergyImportedB
		{
			get
			{
				return this.ReactiveEnergyImportedBValueSpecified ? this.ReactiveEnergyImportedBValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyImportedBValue = value.GetValueOrDefault();
				this.ReactiveEnergyImportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Imported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVARhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyImportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyImportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyImportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyImportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Imported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVARhC")]
		public long? ReactiveEnergyImportedC
		{
			get
			{
				return this.ReactiveEnergyImportedCValueSpecified ? this.ReactiveEnergyImportedCValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyImportedCValue = value.GetValueOrDefault();
				this.ReactiveEnergyImportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Imported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Imported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVARhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyImportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyImportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyImportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyImportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Imported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVARhT")]
		public long? ReactiveEnergyImportedTotal
		{
			get
			{
				return this.ReactiveEnergyImportedTotalValueSpecified ? this.ReactiveEnergyImportedTotalValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyImportedTotalValue = value.GetValueOrDefault();
				this.ReactiveEnergyImportedTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Exported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVARhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyExportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyExportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyExportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyExportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVARhA")]
		public long? ReactiveEnergyExportedA
		{
			get
			{
				return this.ReactiveEnergyExportedAValueSpecified ? this.ReactiveEnergyExportedAValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyExportedAValue = value.GetValueOrDefault();
				this.ReactiveEnergyExportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Exported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVARhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyExportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyExportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyExportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyExportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVARhB")]
		public long? ReactiveEnergyExportedB
		{
			get
			{
				return this.ReactiveEnergyExportedBValueSpecified ? this.ReactiveEnergyExportedBValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyExportedBValue = value.GetValueOrDefault();
				this.ReactiveEnergyExportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Exported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVARhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyExportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyExportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyExportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyExportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Exported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVARhC")]
		public long? ReactiveEnergyExportedC
		{
			get
			{
				return this.ReactiveEnergyExportedCValueSpecified ? this.ReactiveEnergyExportedCValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyExportedCValue = value.GetValueOrDefault();
				this.ReactiveEnergyExportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VARh Exported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VARh Exported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVARhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ReactiveEnergyExportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ReactiveEnergyExportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ReactiveEnergyExportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ReactiveEnergyExportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VARh Exported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVARhT")]
		public long? ReactiveEnergyExportedTotal
		{
			get
			{
				return this.ReactiveEnergyExportedTotalValueSpecified ? this.ReactiveEnergyExportedTotalValue : default(long?);
			}
			set
			{
				this.ReactiveEnergyExportedTotalValue = value.GetValueOrDefault();
				this.ReactiveEnergyExportedTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Imported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVAhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyImportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyImportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyImportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyImportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVAhA")]
		public long? ApparentEnergyImportedA
		{
			get
			{
				return this.ApparentEnergyImportedAValueSpecified ? this.ApparentEnergyImportedAValue : default(long?);
			}
			set
			{
				this.ApparentEnergyImportedAValue = value.GetValueOrDefault();
				this.ApparentEnergyImportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Imported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVAhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyImportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyImportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyImportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyImportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVAhB")]
		public long? ApparentEnergyImportedB
		{
			get
			{
				return this.ApparentEnergyImportedBValueSpecified ? this.ApparentEnergyImportedBValue : default(long?);
			}
			set
			{
				this.ApparentEnergyImportedBValue = value.GetValueOrDefault();
				this.ApparentEnergyImportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Imported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVAhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyImportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyImportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyImportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyImportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Imported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVAhC")]
		public long? ApparentEnergyImportedC
		{
			get
			{
				return this.ApparentEnergyImportedCValueSpecified ? this.ApparentEnergyImportedCValue : default(long?);
			}
			set
			{
				this.ApparentEnergyImportedCValue = value.GetValueOrDefault();
				this.ApparentEnergyImportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Imported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Imported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("iVAhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyImportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyImportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyImportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyImportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Imported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("iVAhT")]
		public long? ApparentEnergyImportedTotal
		{
			get
			{
				return this.ApparentEnergyImportedTotalValueSpecified ? this.ApparentEnergyImportedTotalValue : default(long?);
			}
			set
			{
				this.ApparentEnergyImportedTotalValue = value.GetValueOrDefault();
				this.ApparentEnergyImportedTotalValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase A</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Exported Phase A")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVAhA", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyExportedAValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyExportedA-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyExportedA property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyExportedAValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase A</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVAhA")]
		public long? ApparentEnergyExportedA
		{
			get
			{
				return this.ApparentEnergyExportedAValueSpecified ? this.ApparentEnergyExportedAValue : default(long?);
			}
			set
			{
				this.ApparentEnergyExportedAValue = value.GetValueOrDefault();
				this.ApparentEnergyExportedAValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase B</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Exported Phase B")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVAhB", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyExportedBValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyExportedB-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyExportedB property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyExportedBValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase B</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVAhB")]
		public long? ApparentEnergyExportedB
		{
			get
			{
				return this.ApparentEnergyExportedBValueSpecified ? this.ApparentEnergyExportedBValue : default(long?);
			}
			set
			{
				this.ApparentEnergyExportedBValue = value.GetValueOrDefault();
				this.ApparentEnergyExportedBValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase C</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Exported Phase C")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVAhC", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyExportedCValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyExportedC-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyExportedC property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyExportedCValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Exported Phase C</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVAhC")]
		public long? ApparentEnergyExportedC
		{
			get
			{
				return this.ApparentEnergyExportedCValueSpecified ? this.ApparentEnergyExportedCValue : default(long?);
			}
			set
			{
				this.ApparentEnergyExportedCValue = value.GetValueOrDefault();
				this.ApparentEnergyExportedCValueSpecified = value.HasValue;
			}
		}
		
		/// <summary>
		/// <para>Accumulated VAh Exported Total</para>
		/// </summary>
		[System.ComponentModel.DescriptionAttribute("Accumulated VAh Exported Total")]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		[XmlElementAttribute("eVAhT", Namespace="http://www.aetheros.com/xml/protocols")]
		public long ApparentEnergyExportedTotalValue { get; set; }
		
		/// <summary>
		/// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ApparentEnergyExportedTotal-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
		/// <para xml:lang="en">Gets or sets a value indicating whether the ApparentEnergyExportedTotal property is specified.</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		[System.Diagnostics.DebuggerHiddenAttribute()]
		[System.Diagnostics.DebuggerBrowsableAttribute(System.Diagnostics.DebuggerBrowsableState.Never)]
		[JsonIgnoreAttribute()]
		public bool ApparentEnergyExportedTotalValueSpecified { get; set; }
		
		/// <summary>
		/// <para>Accumulated VAh Exported Total</para>
		/// </summary>
		[XmlIgnoreAttribute()]
		[JsonPropertyAttribute("eVAhT")]
		public long? ApparentEnergyExportedTotal
		{
			get
			{
				return this.ApparentEnergyExportedTotalValueSpecified ? this.ApparentEnergyExportedTotalValue : default(long?);
			}
			set
			{
				this.ApparentEnergyExportedTotalValue = value.GetValueOrDefault();
				this.ApparentEnergyExportedTotalValueSpecified = value.HasValue;
			}
		}
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("MeterSvcData", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("MeterSvcData")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterSvcData
	{
		/// <summary>
		/// <para xml:lang="en">Pattern: \d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\d|30|31)T([01]\d|2[0-3])[0-5]\d[0-5]\d.</para>
		/// </summary>
		[System.ComponentModel.DataAnnotations.RegularExpressionAttribute("\\d{4}(0[1-9]|1[0-2])(0[1-9]|[1-2]\\d|30|31)T([01]\\d|2[0-3])[0-5]\\d[0-5]\\d")]
		[JsonPropertyAttribute("rtl")]
		[XmlElementAttribute("rtl", Namespace="http://www.aetheros.com/xml/protocols", DataType="string")]
		public string ReadTimeLocal { get; set; }

		[JsonPropertyAttribute("pq")]
		[XmlElementAttribute("pq", Namespace="http://www.aetheros.com/xml/protocols")]
		public PowerQualityData PowerQuality { get; set; }

		[JsonPropertyAttribute("summ")]
		[XmlElementAttribute("summ", Namespace="http://www.aetheros.com/xml/protocols")]
		public SummationData Summations { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("MeterRead", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("MeterRead")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	public partial class MeterRead
	{
		[JsonPropertyAttribute("svcdat")]
		[XmlElementAttribute("svcdat", Namespace="http://www.aetheros.com/xml/protocols")]
		public MeterSvcData MeterSvcData { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("cstpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("cstpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("clockSetPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class ClockSetPolicy : Aetheros.Schema.AOS.Policy
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("csnpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("csnpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("clockSynchronizePolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class ClockSynchronizePolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("mindrft")]
		[XmlElementAttribute("mindrft", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MinDrift { get; set; }

		[JsonPropertyAttribute("maxdrft")]
		[XmlElementAttribute("maxdrft", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long MaxDrift { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mepol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mepol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("meterEventsPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class MeterEventsPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("cfgctlevts")]
		[XmlElementAttribute("cfgctlevts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ReportConfigControlEvents { get; set; }

		[JsonPropertyAttribute("hlthevts")]
		[XmlElementAttribute("hlthevts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ReportHealthEvents { get; set; }

		[JsonPropertyAttribute("tmpevts")]
		[XmlElementAttribute("tmpevts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ReportTamperEvents { get; set; }

		[JsonPropertyAttribute("svcevts")]
		[XmlElementAttribute("svcevts", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ReportServiceEvents { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("mpgpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("mpgpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("meterProgramPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class MeterProgramPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("pgmid")]
		[XmlElementAttribute("pgmid", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ProgramID { get; set; }

		[JsonPropertyAttribute("retnum")]
		[XmlElementAttribute("retnum", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long RetryNumber { get; set; }

		[JsonPropertyAttribute("clrreg")]
		[XmlElementAttribute("clrreg", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="boolean")]
		public bool ClearRegisters { get; set; }

		[JsonPropertyAttribute("pgmdat")]
		[XmlElementAttribute("pgmdat", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, DataType="string")]
		public string ProgramData { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("pqppol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("pqppol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("powerQualityProfilePolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class PowerQualityProfilePolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("samfr")]
		[XmlElementAttribute("samfr", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SamplingFrequency { get; set; }

		[JsonPropertyAttribute("voltd")]
		[XmlElementAttribute("voltd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long VoltageData { get; set; }

		[JsonPropertyAttribute("currd")]
		[XmlElementAttribute("currd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long CurrentData { get; set; }

		[JsonPropertyAttribute("freqd")]
		[XmlElementAttribute("freqd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long FrequencyData { get; set; }

		[JsonPropertyAttribute("powfd")]
		[XmlElementAttribute("powfd", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long PowerFactorData { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("regpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("regpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("registerReadPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class RegisterReadPolicy : Aetheros.Schema.AOS.Policy
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("rsrpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("rsrpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("registerSnapshotReadPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class RegisterSnapshotReadPolicy : Aetheros.Schema.AOS.Policy
	{
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sofpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("sofpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("serviceOffPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class ServiceOffPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("swi")]
		[XmlElementAttribute("swi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SwitchIndex { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("sonpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("sonpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("serviceOnPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class ServiceOnPolicy : Aetheros.Schema.AOS.Policy
	{
		[JsonPropertyAttribute("swi")]
		[XmlElementAttribute("swi", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
		public long SwitchIndex { get; set; }
	}

	[System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "1.0.0.0")]
	[System.SerializableAttribute()]
	[XmlTypeAttribute("virpol", Namespace="http://www.aetheros.com/xml/protocols")]
	[JsonObjectAttribute("virpol")]
	[System.Diagnostics.DebuggerStepThroughAttribute()]
	[System.ComponentModel.DesignerCategoryAttribute("code")]
	[XmlRootAttribute("validatedIntervalReadPolicy", Namespace="http://www.aetheros.com/xml/protocols")]
	public partial class ValidatedIntervalReadPolicy : Aetheros.Schema.AOS.Policy
	{
	}
}
